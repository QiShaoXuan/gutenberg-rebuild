{"version":3,"sources":["@wordpress/block-library/src/heading/edit.js"],"names":["HeadingEdit","attributes","setAttributes","mergeBlocks","insertBlocksAfter","onReplace","className","align","content","level","placeholder","tagName","newLevel","nextAlign","value","before","after","blocks","undefined","textAlign"],"mappings":";;;;;;;;;AASA;;AANA;;AAKA;;AAEA;;AACA;;AACA;;AAZA;;;;AAKA;;;AAce,SAASA,WAAT,OAOX;AAAA,MANHC,UAMG,QANHA,UAMG;AAAA,MALHC,aAKG,QALHA,aAKG;AAAA,MAJHC,WAIG,QAJHA,WAIG;AAAA,MAHHC,iBAGG,QAHHA,iBAGG;AAAA,MAFHC,SAEG,QAFHA,SAEG;AAAA,MADHC,SACG,QADHA,SACG;AAAA,MACKC,KADL,GAC4CN,UAD5C,CACKM,KADL;AAAA,MACYC,OADZ,GAC4CP,UAD5C,CACYO,OADZ;AAAA,MACqBC,KADrB,GAC4CR,UAD5C,CACqBQ,KADrB;AAAA,MAC4BC,WAD5B,GAC4CT,UAD5C,CAC4BS,WAD5B;AAEH,MAAMC,OAAO,GAAG,MAAMF,KAAtB;AAEA,SACC,4BAAC,iBAAD,QACC,4BAAC,0BAAD,QACC,4BAAC,uBAAD;AAAgB,IAAA,QAAQ,EAAG,CAA3B;AAA+B,IAAA,QAAQ,EAAG,CAA1C;AAA8C,IAAA,aAAa,EAAGA,KAA9D;AAAsE,IAAA,QAAQ,EAAG,kBAAEG,QAAF;AAAA,aAAgBV,aAAa,CAAE;AAAEO,QAAAA,KAAK,EAAEG;AAAT,OAAF,CAA7B;AAAA;AAAjF,IADD,CADD,EAIC,4BAAC,8BAAD,QACC,4BAAC,qBAAD;AAAW,IAAA,KAAK,EAAG,cAAI,kBAAJ;AAAnB,KACC,uCAAK,cAAI,OAAJ,CAAL,CADD,EAEC,4BAAC,uBAAD;AAAgB,IAAA,QAAQ,EAAG,CAA3B;AAA+B,IAAA,QAAQ,EAAG,CAA1C;AAA8C,IAAA,aAAa,EAAGH,KAA9D;AAAsE,IAAA,QAAQ,EAAG,kBAAEG,QAAF;AAAA,aAAgBV,aAAa,CAAE;AAAEO,QAAAA,KAAK,EAAEG;AAAT,OAAF,CAA7B;AAAA;AAAjF,IAFD,EAGC,uCAAK,cAAI,gBAAJ,CAAL,CAHD,EAIC,4BAAC,6BAAD;AACC,IAAA,KAAK,EAAGL,KADT;AAEC,IAAA,QAAQ,EAAG,kBAAEM,SAAF,EAAiB;AAC3BX,MAAAA,aAAa,CAAE;AAAEK,QAAAA,KAAK,EAAEM;AAAT,OAAF,CAAb;AACA;AAJF,IAJD,CADD,CAJD,EAiBC,4BAAC,qBAAD;AACC,IAAA,UAAU,EAAC,SADZ;AAEC,IAAA,gBAAgB,EAAC,kBAFlB;AAGC,IAAA,OAAO,EAAGF,OAHX;AAIC,IAAA,KAAK,EAAGH,OAJT;AAKC,IAAA,QAAQ,EAAG,kBAAEM,KAAF;AAAA,aAAaZ,aAAa,CAAE;AAAEM,QAAAA,OAAO,EAAEM;AAAX,OAAF,CAA1B;AAAA,KALZ;AAMC,IAAA,OAAO,EAAGX,WANX;AAOC,IAAA,eAAe,EACdC,iBAAiB,GAChB,UAAEW,MAAF,EAAUC,KAAV,EAAgC;AAC/Bd,MAAAA,aAAa,CAAE;AAAEM,QAAAA,OAAO,EAAEO;AAAX,OAAF,CAAb;;AAD+B,wCAAZE,MAAY;AAAZA,QAAAA,MAAY;AAAA;;AAE/Bb,MAAAA,iBAAiB,WACba,MADa,GAEhB,yBAAa,gBAAb,EAA+B;AAAET,QAAAA,OAAO,EAAEQ;AAAX,OAA/B,CAFgB,GAAjB;AAIA,KAPe,GAQhBE,SAhBH;AAkBC,IAAA,QAAQ,EAAG;AAAA,aAAMb,SAAS,CAAE,EAAF,CAAf;AAAA,KAlBZ;AAmBC,IAAA,KAAK,EAAG;AAAEc,MAAAA,SAAS,EAAEZ;AAAb,KAnBT;AAoBC,IAAA,SAAS,EAAGD,SApBb;AAqBC,IAAA,WAAW,EAAGI,WAAW,IAAI,cAAI,gBAAJ;AArB9B,IAjBD,CADD;AA2CA","sourcesContent":["/**\n * Internal dependencies\n */\nimport HeadingToolbar from './heading-toolbar';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Fragment } from '@wordpress/element';\nimport { PanelBody } from '@wordpress/components';\nimport { createBlock } from '@wordpress/blocks';\nimport {\n\tRichText,\n\tBlockControls,\n\tInspectorControls,\n\tAlignmentToolbar,\n} from '@wordpress/block-editor';\n\nexport default function HeadingEdit( {\n\tattributes,\n\tsetAttributes,\n\tmergeBlocks,\n\tinsertBlocksAfter,\n\tonReplace,\n\tclassName,\n} ) {\n\tconst { align, content, level, placeholder } = attributes;\n\tconst tagName = 'h' + level;\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<BlockControls>\n\t\t\t\t<HeadingToolbar minLevel={ 2 } maxLevel={ 5 } selectedLevel={ level } onChange={ ( newLevel ) => setAttributes( { level: newLevel } ) } />\n\t\t\t</BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Heading Settings' ) }>\n\t\t\t\t\t<p>{ __( 'Level' ) }</p>\n\t\t\t\t\t<HeadingToolbar minLevel={ 1 } maxLevel={ 7 } selectedLevel={ level } onChange={ ( newLevel ) => setAttributes( { level: newLevel } ) } />\n\t\t\t\t\t<p>{ __( 'Text Alignment' ) }</p>\n\t\t\t\t\t<AlignmentToolbar\n\t\t\t\t\t\tvalue={ align }\n\t\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\t\tsetAttributes( { align: nextAlign } );\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<RichText\n\t\t\t\tidentifier=\"content\"\n\t\t\t\twrapperClassName=\"wp-block-heading\"\n\t\t\t\ttagName={ tagName }\n\t\t\t\tvalue={ content }\n\t\t\t\tonChange={ ( value ) => setAttributes( { content: value } ) }\n\t\t\t\tonMerge={ mergeBlocks }\n\t\t\t\tunstableOnSplit={\n\t\t\t\t\tinsertBlocksAfter ?\n\t\t\t\t\t\t( before, after, ...blocks ) => {\n\t\t\t\t\t\t\tsetAttributes( { content: before } );\n\t\t\t\t\t\t\tinsertBlocksAfter( [\n\t\t\t\t\t\t\t\t...blocks,\n\t\t\t\t\t\t\t\tcreateBlock( 'core/paragraph', { content: after } ),\n\t\t\t\t\t\t\t] );\n\t\t\t\t\t\t} :\n\t\t\t\t\t\tundefined\n\t\t\t\t}\n\t\t\t\tonRemove={ () => onReplace( [] ) }\n\t\t\t\tstyle={ { textAlign: align } }\n\t\t\t\tclassName={ className }\n\t\t\t\tplaceholder={ placeholder || __( 'Write headingâ€¦' ) }\n\t\t\t/>\n\t\t</Fragment>\n\t);\n}\n"]}