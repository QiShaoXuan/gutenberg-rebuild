{"version":3,"sources":["@wordpress/block-library/src/heading/index.js"],"names":["getLevelFromHeadingNodeName","nodeName","Number","substr","supports","className","anchor","schema","content","type","source","selector","default","level","align","placeholder","name","settings","title","description","icon","category","keywords","attributes","transforms","from","blocks","transform","h1","children","h2","h3","h4","h5","h6","node","outerHTML","map","prefix","Array","join","to","deprecated","property","migrate","migratedAttributes","save","toLowerCase","textAlign","merge","attributesToMerge","edit","tagName"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tcreateBlock,\n\tgetPhrasingContentSchema,\n\tgetBlockAttributes,\n} from '@wordpress/blocks';\nimport { RichText } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport edit from './edit';\nimport icon from './icon';\n\n/**\n * Given a node name string for a heading node, returns its numeric level.\n *\n * @param {string} nodeName Heading node name.\n *\n * @return {number} Heading level.\n */\nexport function getLevelFromHeadingNodeName( nodeName ) {\n\treturn Number( nodeName.substr( 1 ) );\n}\n\nconst supports = {\n\tclassName: false,\n\tanchor: true,\n};\n\nconst schema = {\n\tcontent: {\n\t\ttype: 'string',\n\t\tsource: 'html',\n\t\tselector: 'h1,h2,h3,h4,h5,h6',\n\t\tdefault: '',\n\t},\n\tlevel: {\n\t\ttype: 'number',\n\t\tdefault: 2,\n\t},\n\talign: {\n\t\ttype: 'string',\n\t},\n\tplaceholder: {\n\t\ttype: 'string',\n\t},\n};\n\nexport const name = 'core/heading';\n\nexport const settings = {\n\ttitle: __( 'Heading' ),\n\n\tdescription: __( 'Introduce new sections and organize content to help visitors (and search engines) understand the structure of your content.' ),\n\n\ticon,\n\n\tcategory: 'common',\n\n\tkeywords: [ __( 'title' ), __( 'subtitle' ) ],\n\n\tsupports,\n\n\tattributes: schema,\n\n\ttransforms: {\n\t\tfrom: [\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\t\ttransform: ( { content } ) => {\n\t\t\t\t\treturn createBlock( 'core/heading', {\n\t\t\t\t\t\tcontent,\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'raw',\n\t\t\t\tselector: 'h1,h2,h3,h4,h5,h6',\n\t\t\t\tschema: {\n\t\t\t\t\th1: { children: getPhrasingContentSchema() },\n\t\t\t\t\th2: { children: getPhrasingContentSchema() },\n\t\t\t\t\th3: { children: getPhrasingContentSchema() },\n\t\t\t\t\th4: { children: getPhrasingContentSchema() },\n\t\t\t\t\th5: { children: getPhrasingContentSchema() },\n\t\t\t\t\th6: { children: getPhrasingContentSchema() },\n\t\t\t\t},\n\t\t\t\ttransform( node ) {\n\t\t\t\t\treturn createBlock( 'core/heading', {\n\t\t\t\t\t\t...getBlockAttributes(\n\t\t\t\t\t\t\t'core/heading',\n\t\t\t\t\t\t\tnode.outerHTML\n\t\t\t\t\t\t),\n\t\t\t\t\t\tlevel: getLevelFromHeadingNodeName( node.nodeName ),\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t},\n\t\t\t...[ 2, 3, 4, 5, 6 ].map( ( level ) => ( {\n\t\t\t\ttype: 'prefix',\n\t\t\t\tprefix: Array( level + 1 ).join( '#' ),\n\t\t\t\ttransform( content ) {\n\t\t\t\t\treturn createBlock( 'core/heading', {\n\t\t\t\t\t\tlevel,\n\t\t\t\t\t\tcontent,\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t} ) ),\n\t\t],\n\t\tto: [\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\t\ttransform: ( { content } ) => {\n\t\t\t\t\treturn createBlock( 'core/paragraph', {\n\t\t\t\t\t\tcontent,\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n\n\tdeprecated: [\n\t\t{\n\t\t\tsupports,\n\t\t\tattributes: {\n\t\t\t\t...omit( schema, [ 'level' ] ),\n\t\t\t\tnodeName: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tsource: 'property',\n\t\t\t\t\tselector: 'h1,h2,h3,h4,h5,h6',\n\t\t\t\t\tproperty: 'nodeName',\n\t\t\t\t\tdefault: 'H2',\n\t\t\t\t},\n\t\t\t},\n\t\t\tmigrate( attributes ) {\n\t\t\t\tconst { nodeName, ...migratedAttributes } = attributes;\n\n\t\t\t\treturn {\n\t\t\t\t\t...migratedAttributes,\n\t\t\t\t\tlevel: getLevelFromHeadingNodeName( nodeName ),\n\t\t\t\t};\n\t\t\t},\n\t\t\tsave( { attributes } ) {\n\t\t\t\tconst { align, nodeName, content } = attributes;\n\n\t\t\t\treturn (\n\t\t\t\t\t<RichText.Content\n\t\t\t\t\t\ttagName={ nodeName.toLowerCase() }\n\t\t\t\t\t\tstyle={ { textAlign: align } }\n\t\t\t\t\t\tvalue={ content }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t],\n\n\tmerge( attributes, attributesToMerge ) {\n\t\treturn {\n\t\t\tcontent: ( attributes.content || '' ) + ( attributesToMerge.content || '' ),\n\t\t};\n\t},\n\n\tedit,\n\n\tsave( { attributes } ) {\n\t\tconst { align, level, content } = attributes;\n\t\tconst tagName = 'h' + level;\n\n\t\treturn (\n\t\t\t<RichText.Content\n\t\t\t\ttagName={ tagName }\n\t\t\t\tstyle={ { textAlign: align } }\n\t\t\t\tvalue={ content }\n\t\t\t/>\n\t\t);\n\t},\n};\n"]}