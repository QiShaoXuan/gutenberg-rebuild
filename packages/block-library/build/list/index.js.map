{"version":3,"sources":["@wordpress/block-library/src/list/index.js"],"names":["listContentSchema","ul","ol","attributes","forEach","tag","children","li","supports","className","schema","ordered","type","default","values","source","selector","multiline","name","settings","title","description","icon","category","keywords","transforms","from","isMultiBlock","blocks","transform","blockAttributes","value","map","content","html","length","LINE_SEPARATOR","multilineTag","node","outerHTML","nodeName","prefix","to","multilineWrapperTags","piece","deprecated","property","migrate","migratedAttributes","save","toLowerCase","merge","attributesToMerge","edit","tagName"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tcreateBlock,\n\tgetPhrasingContentSchema,\n\tgetBlockAttributes,\n} from '@wordpress/blocks';\nimport { RichText } from '@wordpress/block-editor';\nimport { replace, join, split, create, toHTMLString, LINE_SEPARATOR } from '@wordpress/rich-text';\n\n/**\n * Internal dependencies\n */\nimport edit from './edit';\nimport icon from './icon';\n\nconst listContentSchema = {\n\t...getPhrasingContentSchema(),\n\tul: {},\n\tol: { attributes: [ 'type' ] },\n};\n\n// Recursion is needed.\n// Possible: ul > li > ul.\n// Impossible: ul > ul.\n[ 'ul', 'ol' ].forEach( ( tag ) => {\n\tlistContentSchema[ tag ].children = {\n\t\tli: {\n\t\t\tchildren: listContentSchema,\n\t\t},\n\t};\n} );\n\nconst supports = {\n\tclassName: false,\n};\n\nconst schema = {\n\tordered: {\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t},\n\tvalues: {\n\t\ttype: 'string',\n\t\tsource: 'html',\n\t\tselector: 'ol,ul',\n\t\tmultiline: 'li',\n\t\tdefault: '',\n\t},\n};\n\nexport const name = 'core/list';\n\nexport const settings = {\n\ttitle: __( 'List' ),\n\tdescription: __( 'Create a bulleted or numbered list.' ),\n\ticon,\n\tcategory: 'common',\n\tkeywords: [ __( 'bullet list' ), __( 'ordered list' ), __( 'numbered list' ) ],\n\n\tattributes: schema,\n\n\tsupports,\n\n\ttransforms: {\n\t\tfrom: [\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tisMultiBlock: true,\n\t\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\t\ttransform: ( blockAttributes ) => {\n\t\t\t\t\treturn createBlock( 'core/list', {\n\t\t\t\t\t\tvalues: toHTMLString( {\n\t\t\t\t\t\t\tvalue: join( blockAttributes.map( ( { content } ) => {\n\t\t\t\t\t\t\t\tconst value = create( { html: content } );\n\n\t\t\t\t\t\t\t\tif ( blockAttributes.length > 1 ) {\n\t\t\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// When converting only one block, transform\n\t\t\t\t\t\t\t\t// every line to a list item.\n\t\t\t\t\t\t\t\treturn replace( value, /\\n/g, LINE_SEPARATOR );\n\t\t\t\t\t\t\t} ), LINE_SEPARATOR ),\n\t\t\t\t\t\t\tmultilineTag: 'li',\n\t\t\t\t\t\t} ),\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tblocks: [ 'core/quote' ],\n\t\t\t\ttransform: ( { value } ) => {\n\t\t\t\t\treturn createBlock( 'core/list', {\n\t\t\t\t\t\tvalues: toHTMLString( {\n\t\t\t\t\t\t\tvalue: create( { html: value, multilineTag: 'p' } ),\n\t\t\t\t\t\t\tmultilineTag: 'li',\n\t\t\t\t\t\t} ),\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'raw',\n\t\t\t\tselector: 'ol,ul',\n\t\t\t\tschema: {\n\t\t\t\t\tol: listContentSchema.ol,\n\t\t\t\t\tul: listContentSchema.ul,\n\t\t\t\t},\n\t\t\t\ttransform( node ) {\n\t\t\t\t\treturn createBlock( 'core/list', {\n\t\t\t\t\t\t...getBlockAttributes(\n\t\t\t\t\t\t\t'core/list',\n\t\t\t\t\t\t\tnode.outerHTML\n\t\t\t\t\t\t),\n\t\t\t\t\t\tordered: node.nodeName === 'OL',\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t},\n\t\t\t...[ '*', '-' ].map( ( prefix ) => ( {\n\t\t\t\ttype: 'prefix',\n\t\t\t\tprefix,\n\t\t\t\ttransform( content ) {\n\t\t\t\t\treturn createBlock( 'core/list', {\n\t\t\t\t\t\tvalues: `<li>${ content }</li>`,\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t} ) ),\n\t\t\t...[ '1.', '1)' ].map( ( prefix ) => ( {\n\t\t\t\ttype: 'prefix',\n\t\t\t\tprefix,\n\t\t\t\ttransform( content ) {\n\t\t\t\t\treturn createBlock( 'core/list', {\n\t\t\t\t\t\tordered: true,\n\t\t\t\t\t\tvalues: `<li>${ content }</li>`,\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t} ) ),\n\t\t],\n\t\tto: [\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\t\ttransform: ( { values } ) =>\n\t\t\t\t\tsplit( create( {\n\t\t\t\t\t\thtml: values,\n\t\t\t\t\t\tmultilineTag: 'li',\n\t\t\t\t\t\tmultilineWrapperTags: [ 'ul', 'ol' ],\n\t\t\t\t\t} ), LINE_SEPARATOR )\n\t\t\t\t\t\t.map( ( piece ) =>\n\t\t\t\t\t\t\tcreateBlock( 'core/paragraph', {\n\t\t\t\t\t\t\t\tcontent: toHTMLString( { value: piece } ),\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tblocks: [ 'core/quote' ],\n\t\t\t\ttransform: ( { values } ) => {\n\t\t\t\t\treturn createBlock( 'core/quote', {\n\t\t\t\t\t\tvalue: toHTMLString( {\n\t\t\t\t\t\t\tvalue: create( {\n\t\t\t\t\t\t\t\thtml: values,\n\t\t\t\t\t\t\t\tmultilineTag: 'li',\n\t\t\t\t\t\t\t\tmultilineWrapperTags: [ 'ul', 'ol' ],\n\t\t\t\t\t\t\t} ),\n\t\t\t\t\t\t\tmultilineTag: 'p',\n\t\t\t\t\t\t} ),\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n\n\tdeprecated: [\n\t\t{\n\t\t\tsupports,\n\t\t\tattributes: {\n\t\t\t\t...omit( schema, [ 'ordered' ] ),\n\t\t\t\tnodeName: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tsource: 'property',\n\t\t\t\t\tselector: 'ol,ul',\n\t\t\t\t\tproperty: 'nodeName',\n\t\t\t\t\tdefault: 'UL',\n\t\t\t\t},\n\t\t\t},\n\t\t\tmigrate( attributes ) {\n\t\t\t\tconst { nodeName, ...migratedAttributes } = attributes;\n\n\t\t\t\treturn {\n\t\t\t\t\t...migratedAttributes,\n\t\t\t\t\tordered: 'OL' === nodeName,\n\t\t\t\t};\n\t\t\t},\n\t\t\tsave( { attributes } ) {\n\t\t\t\tconst { nodeName, values } = attributes;\n\n\t\t\t\treturn (\n\t\t\t\t\t<RichText.Content\n\t\t\t\t\t\ttagName={ nodeName.toLowerCase() }\n\t\t\t\t\t\tvalue={ values }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t],\n\n\tmerge( attributes, attributesToMerge ) {\n\t\tconst { values } = attributesToMerge;\n\n\t\tif ( ! values || values === '<li></li>' ) {\n\t\t\treturn attributes;\n\t\t}\n\n\t\treturn {\n\t\t\t...attributes,\n\t\t\tvalues: attributes.values + values,\n\t\t};\n\t},\n\n\tedit,\n\n\tsave( { attributes } ) {\n\t\tconst { ordered, values } = attributes;\n\t\tconst tagName = ordered ? 'ol' : 'ul';\n\n\t\treturn (\n\t\t\t<RichText.Content tagName={ tagName } value={ values } multiline=\"li\" />\n\t\t);\n\t},\n};\n"]}