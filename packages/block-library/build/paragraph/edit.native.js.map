{"version":3,"sources":["@wordpress/block-library/src/paragraph/edit.native.js"],"names":["name","ParagraphEdit","props","splitBlock","bind","onReplace","before","after","attributes","insertBlocksAfter","setAttributes","blocks","newBlock","content","push","length","map","block","index","mergeBlocks","style","placeholder","isSelected","onFocus","onBlur","onCaretVerticalPositionChange","nextContent","Component"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport { createBlock } from '@wordpress/blocks';\nimport { RichText } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\n\nconst name = 'core/paragraph';\n\nclass ParagraphEdit extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.splitBlock = this.splitBlock.bind( this );\n\t\tthis.onReplace = this.onReplace.bind( this );\n\t}\n\n\t/**\n\t * Split handler for RichText value, namely when content is pasted or the\n\t * user presses the Enter key.\n\t *\n\t * @param {?Array}     before Optional before value, to be used as content\n\t *                            in place of what exists currently for the\n\t *                            block. If undefined, the block is deleted.\n\t * @param {?Array}     after  Optional after value, to be appended in a new\n\t *                            paragraph block to the set of blocks passed\n\t *                            as spread.\n\t * @param {...WPBlock} blocks Optional blocks inserted between the before\n\t *                            and after value blocks.\n\t */\n\tsplitBlock( before, after, ...blocks ) {\n\t\tconst {\n\t\t\tattributes,\n\t\t\tinsertBlocksAfter,\n\t\t\tsetAttributes,\n\t\t\tonReplace,\n\t\t} = this.props;\n\n\t\tif ( after !== null ) {\n\t\t\t// Append \"After\" content as a new paragraph block to the end of\n\t\t\t// any other blocks being inserted after the current paragraph.\n\t\t\tconst newBlock = createBlock( name, { content: after } );\n\t\t\tblocks.push( newBlock );\n\t\t}\n\n\t\tif ( blocks.length && insertBlocksAfter ) {\n\t\t\tinsertBlocksAfter( blocks );\n\t\t}\n\n\t\tconst { content } = attributes;\n\t\tif ( before === null ) {\n\t\t\tonReplace( [] );\n\t\t} else if ( content !== before ) {\n\t\t\t// Only update content if it has in-fact changed. In case that user\n\t\t\t// has created a new paragraph at end of an existing one, the value\n\t\t\t// of before will be strictly equal to the current content.\n\t\t\tsetAttributes( { content: before } );\n\t\t}\n\t}\n\n\tonReplace( blocks ) {\n\t\tconst { attributes, onReplace } = this.props;\n\t\tonReplace( blocks.map( ( block, index ) => (\n\t\t\tindex === 0 && block.name === name ?\n\t\t\t\t{ ...block,\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\t...attributes,\n\t\t\t\t\t\t...block.attributes,\n\t\t\t\t\t},\n\t\t\t\t} :\n\t\t\t\tblock\n\t\t) ) );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tattributes,\n\t\t\tsetAttributes,\n\t\t\tmergeBlocks,\n\t\t\tstyle,\n\t\t} = this.props;\n\n\t\tconst {\n\t\t\tplaceholder,\n\t\t\tcontent,\n\t\t} = attributes;\n\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<RichText\n\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\tvalue={ content }\n\t\t\t\t\tisSelected={ this.props.isSelected }\n\t\t\t\t\tonFocus={ this.props.onFocus } // always assign onFocus as a props\n\t\t\t\t\tonBlur={ this.props.onBlur } // always assign onBlur as a props\n\t\t\t\t\tonCaretVerticalPositionChange={ this.props.onCaretVerticalPositionChange }\n\t\t\t\t\tstyle={ style }\n\t\t\t\t\tonChange={ ( nextContent ) => {\n\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\tcontent: nextContent,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} }\n\t\t\t\t\tonSplit={ this.splitBlock }\n\t\t\t\t\tonMerge={ mergeBlocks }\n\t\t\t\t\tonReplace={ this.onReplace }\n\t\t\t\t\tplaceholder={ placeholder || __( 'Start writingâ€¦' ) }\n\t\t\t\t/>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default ParagraphEdit;\n"]}