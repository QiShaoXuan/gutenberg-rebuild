{"version":3,"sources":["@wordpress/block-library/src/quote/index.js"],"names":["blockAttributes","ATTRIBUTE_QUOTE","type","source","selector","multiline","default","ATTRIBUTE_CITATION","name","settings","title","description","icon","category","keywords","attributes","styles","label","isDefault","transforms","from","isMultiBlock","blocks","transform","value","map","content","html","multilineTag","citation","prefix","isMatch","node","isParagraphOrSingleCite","hasCitation","child","nodeName","Array","childNodes","every","schema","blockquote","children","p","cite","to","paragraphs","push","piece","length","attrs","pieces","headingBlock","quotePieces","slice","quoteBlock","edit","save","align","textAlign","RichText","isEmpty","merge","deprecated","style","migrate","className"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport { createBlock, getPhrasingContentSchema } from '@wordpress/blocks';\nimport { RichText } from '@wordpress/block-editor';\nimport { join, split, create, toHTMLString } from '@wordpress/rich-text';\n\n/**\n * Internal dependencies\n */\nimport edit from './edit';\nimport icon from './icon';\nimport { ATTRIBUTE_QUOTE, ATTRIBUTE_CITATION } from './contants';\n\nconst blockAttributes = {\n\t[ ATTRIBUTE_QUOTE ]: {\n\t\ttype: 'string',\n\t\tsource: 'html',\n\t\tselector: 'blockquote',\n\t\tmultiline: 'p',\n\t\tdefault: '',\n\t},\n\t[ ATTRIBUTE_CITATION ]: {\n\t\ttype: 'string',\n\t\tsource: 'html',\n\t\tselector: 'cite',\n\t\tdefault: '',\n\t},\n\talign: {\n\t\ttype: 'string',\n\t},\n};\n\nexport const name = 'core/quote';\n\nexport const settings = {\n\ttitle: __( 'Quote' ),\n\tdescription: __( 'Give quoted text visual emphasis. \"In quoting others, we cite ourselves.\" — Julio Cortázar' ),\n\ticon,\n\tcategory: 'common',\n\tkeywords: [ __( 'blockquote' ) ],\n\n\tattributes: blockAttributes,\n\n\tstyles: [\n\t\t{ name: 'default', label: _x( 'Default', 'block style' ), isDefault: true },\n\t\t{ name: 'large', label: _x( 'Large', 'block style' ) },\n\t],\n\n\ttransforms: {\n\t\tfrom: [\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tisMultiBlock: true,\n\t\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\t\ttransform: ( attributes ) => {\n\t\t\t\t\treturn createBlock( 'core/quote', {\n\t\t\t\t\t\tvalue: toHTMLString( {\n\t\t\t\t\t\t\tvalue: join( attributes.map( ( { content } ) =>\n\t\t\t\t\t\t\t\tcreate( { html: content } )\n\t\t\t\t\t\t\t), '\\u2028' ),\n\t\t\t\t\t\t\tmultilineTag: 'p',\n\t\t\t\t\t\t} ),\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tblocks: [ 'core/heading' ],\n\t\t\t\ttransform: ( { content } ) => {\n\t\t\t\t\treturn createBlock( 'core/quote', {\n\t\t\t\t\t\tvalue: `<p>${ content }</p>`,\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tblocks: [ 'core/pullquote' ],\n\t\t\t\ttransform: ( { value, citation } ) => createBlock( 'core/quote', {\n\t\t\t\t\tvalue,\n\t\t\t\t\tcitation,\n\t\t\t\t} ),\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'prefix',\n\t\t\t\tprefix: '>',\n\t\t\t\ttransform: ( content ) => {\n\t\t\t\t\treturn createBlock( 'core/quote', {\n\t\t\t\t\t\tvalue: `<p>${ content }</p>`,\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'raw',\n\t\t\t\tisMatch: ( node ) => {\n\t\t\t\t\tconst isParagraphOrSingleCite = ( () => {\n\t\t\t\t\t\tlet hasCitation = false;\n\t\t\t\t\t\treturn ( child ) => {\n\t\t\t\t\t\t\t// Child is a paragraph.\n\t\t\t\t\t\t\tif ( child.nodeName === 'P' ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Child is a cite and no other cite child exists before it.\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t! hasCitation &&\n\t\t\t\t\t\t\t\tchild.nodeName === 'CITE'\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\thasCitation = true;\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t} )();\n\t\t\t\t\treturn node.nodeName === 'BLOCKQUOTE' &&\n\t\t\t\t\t// The quote block can only handle multiline paragraph\n\t\t\t\t\t// content with an optional cite child.\n\t\t\t\t\tArray.from( node.childNodes ).every(\n\t\t\t\t\t\tisParagraphOrSingleCite\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tschema: {\n\t\t\t\t\tblockquote: {\n\t\t\t\t\t\tchildren: {\n\t\t\t\t\t\t\tp: {\n\t\t\t\t\t\t\t\tchildren: getPhrasingContentSchema(),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcite: {\n\t\t\t\t\t\t\t\tchildren: getPhrasingContentSchema(),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tto: [\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\t\ttransform: ( { value, citation } ) => {\n\t\t\t\t\tconst paragraphs = [];\n\t\t\t\t\tif ( value && value !== '<p></p>' ) {\n\t\t\t\t\t\tparagraphs.push(\n\t\t\t\t\t\t\t...split( create( { html: value, multilineTag: 'p' } ), '\\u2028' )\n\t\t\t\t\t\t\t\t.map( ( piece ) =>\n\t\t\t\t\t\t\t\t\tcreateBlock( 'core/paragraph', {\n\t\t\t\t\t\t\t\t\t\tcontent: toHTMLString( { value: piece } ),\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif ( citation && citation !== '<p></p>' ) {\n\t\t\t\t\t\tparagraphs.push(\n\t\t\t\t\t\t\tcreateBlock( 'core/paragraph', {\n\t\t\t\t\t\t\t\tcontent: citation,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( paragraphs.length === 0 ) {\n\t\t\t\t\t\treturn createBlock( 'core/paragraph', {\n\t\t\t\t\t\t\tcontent: '',\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t\treturn paragraphs;\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tblocks: [ 'core/heading' ],\n\t\t\t\ttransform: ( { value, citation, ...attrs } ) => {\n\t\t\t\t\t// If there is no quote content, use the citation as the\n\t\t\t\t\t// content of the resulting heading. A nonexistent citation\n\t\t\t\t\t// will result in an empty heading.\n\t\t\t\t\tif ( value === '<p></p>' ) {\n\t\t\t\t\t\treturn createBlock( 'core/heading', {\n\t\t\t\t\t\t\tcontent: citation,\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\n\t\t\t\t\tconst pieces = split( create( { html: value, multilineTag: 'p' } ), '\\u2028' );\n\n\t\t\t\t\tconst headingBlock = createBlock( 'core/heading', {\n\t\t\t\t\t\tcontent: toHTMLString( { value: pieces[ 0 ] } ),\n\t\t\t\t\t} );\n\n\t\t\t\t\tif ( ! citation && pieces.length === 1 ) {\n\t\t\t\t\t\treturn headingBlock;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst quotePieces = pieces.slice( 1 );\n\n\t\t\t\t\tconst quoteBlock = createBlock( 'core/quote', {\n\t\t\t\t\t\t...attrs,\n\t\t\t\t\t\tcitation,\n\t\t\t\t\t\tvalue: toHTMLString( {\n\t\t\t\t\t\t\tvalue: quotePieces.length ? join( pieces.slice( 1 ), '\\u2028' ) : create(),\n\t\t\t\t\t\t\tmultilineTag: 'p',\n\t\t\t\t\t\t} ),\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn [ headingBlock, quoteBlock ];\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tblocks: [ 'core/pullquote' ],\n\t\t\t\ttransform: ( { value, citation } ) => {\n\t\t\t\t\treturn createBlock( 'core/pullquote', {\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tcitation,\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n\n\tedit,\n\n\tsave( { attributes } ) {\n\t\tconst { align, value, citation } = attributes;\n\n\t\treturn (\n\t\t\t<blockquote style={ { textAlign: align ? align : null } }>\n\t\t\t\t<RichText.Content multiline value={ value } />\n\t\t\t\t{ ! RichText.isEmpty( citation ) && <RichText.Content tagName=\"cite\" value={ citation } /> }\n\t\t\t</blockquote>\n\t\t);\n\t},\n\n\tmerge( attributes, { value, citation } ) {\n\t\tif ( ! value || value === '<p></p>' ) {\n\t\t\treturn {\n\t\t\t\t...attributes,\n\t\t\t\tcitation: attributes.citation + citation,\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t...attributes,\n\t\t\tvalue: attributes.value + value,\n\t\t\tcitation: attributes.citation + citation,\n\t\t};\n\t},\n\n\tdeprecated: [\n\t\t{\n\t\t\tattributes: {\n\t\t\t\t...blockAttributes,\n\t\t\t\tstyle: {\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tdefault: 1,\n\t\t\t\t},\n\t\t\t},\n\n\t\t\tmigrate( attributes ) {\n\t\t\t\tif ( attributes.style === 2 ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...omit( attributes, [ 'style' ] ),\n\t\t\t\t\t\tclassName: attributes.className ? attributes.className + ' is-style-large' : 'is-style-large',\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn attributes;\n\t\t\t},\n\n\t\t\tsave( { attributes } ) {\n\t\t\t\tconst { align, value, citation, style } = attributes;\n\n\t\t\t\treturn (\n\t\t\t\t\t<blockquote\n\t\t\t\t\t\tclassName={ style === 2 ? 'is-large' : '' }\n\t\t\t\t\t\tstyle={ { textAlign: align ? align : null } }\n\t\t\t\t\t>\n\t\t\t\t\t\t<RichText.Content multiline value={ value } />\n\t\t\t\t\t\t{ ! RichText.isEmpty( citation ) && <RichText.Content tagName=\"cite\" value={ citation } /> }\n\t\t\t\t\t</blockquote>\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tattributes: {\n\t\t\t\t...blockAttributes,\n\t\t\t\tcitation: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tsource: 'html',\n\t\t\t\t\tselector: 'footer',\n\t\t\t\t\tdefault: '',\n\t\t\t\t},\n\t\t\t\tstyle: {\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tdefault: 1,\n\t\t\t\t},\n\t\t\t},\n\n\t\t\tsave( { attributes } ) {\n\t\t\t\tconst { align, value, citation, style } = attributes;\n\n\t\t\t\treturn (\n\t\t\t\t\t<blockquote\n\t\t\t\t\t\tclassName={ `blocks-quote-style-${ style }` }\n\t\t\t\t\t\tstyle={ { textAlign: align ? align : null } }\n\t\t\t\t\t>\n\t\t\t\t\t\t<RichText.Content multiline value={ value } />\n\t\t\t\t\t\t{ ! RichText.isEmpty( citation ) && <RichText.Content tagName=\"footer\" value={ citation } /> }\n\t\t\t\t\t</blockquote>\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t],\n};\n"]}