{"version":3,"sources":["@wordpress/block-library/src/pullquote/index.js"],"names":["blockAttributes","value","type","source","selector","multiline","citation","default","mainColor","customMainColor","textColor","customTextColor","name","settings","title","description","icon","category","attributes","styles","label","isDefault","SOLID_COLOR_STYLE_NAME","supports","align","edit","save","className","isSolidColorStyle","SOLID_COLOR_CLASS","figureClass","figureStyles","backgroundColor","borderColor","colors","getSettings","colorObject","color","blockquoteTextColorClass","blockquoteClasses","undefined","blockquoteStyle","RichText","isEmpty","deprecated"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { get, includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport {\n\tgetColorClassName,\n\tRichText,\n\tgetColorObjectByAttributeValues,\n} from '@wordpress/block-editor';\nimport {\n\tselect,\n} from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport {\n\tdefault as edit,\n\tSOLID_COLOR_STYLE_NAME,\n\tSOLID_COLOR_CLASS,\n} from './edit';\nimport icon from './icon';\n\nconst blockAttributes = {\n\tvalue: {\n\t\ttype: 'string',\n\t\tsource: 'html',\n\t\tselector: 'blockquote',\n\t\tmultiline: 'p',\n\t},\n\tcitation: {\n\t\ttype: 'string',\n\t\tsource: 'html',\n\t\tselector: 'cite',\n\t\tdefault: '',\n\t},\n\tmainColor: {\n\t\ttype: 'string',\n\t},\n\tcustomMainColor: {\n\t\ttype: 'string',\n\t},\n\ttextColor: {\n\t\ttype: 'string',\n\t},\n\tcustomTextColor: {\n\t\ttype: 'string',\n\t},\n};\n\nexport const name = 'core/pullquote';\n\nexport const settings = {\n\n\ttitle: __( 'Pullquote' ),\n\n\tdescription: __( 'Give special visual emphasis to a quote from your text.' ),\n\n\ticon,\n\n\tcategory: 'formatting',\n\n\tattributes: blockAttributes,\n\n\tstyles: [\n\t\t{ name: 'default', label: _x( 'Default', 'block style' ), isDefault: true },\n\t\t{ name: SOLID_COLOR_STYLE_NAME, label: __( 'Solid Color' ) },\n\t],\n\n\tsupports: {\n\t\talign: [ 'left', 'right', 'wide', 'full' ],\n\t},\n\n\tedit,\n\n\tsave( { attributes } ) {\n\t\tconst { mainColor, customMainColor, textColor, customTextColor, value, citation, className } = attributes;\n\t\tconst isSolidColorStyle = includes( className, SOLID_COLOR_CLASS );\n\n\t\tlet figureClass, figureStyles;\n\t\t// Is solid color style\n\t\tif ( isSolidColorStyle ) {\n\t\t\tfigureClass = getColorClassName( 'background-color', mainColor );\n\t\t\tif ( ! figureClass ) {\n\t\t\t\tfigureStyles = {\n\t\t\t\t\tbackgroundColor: customMainColor,\n\t\t\t\t};\n\t\t\t}\n\t\t// Is normal style and a custom color is being used ( we can set a style directly with its value)\n\t\t} else if ( customMainColor ) {\n\t\t\tfigureStyles = {\n\t\t\t\tborderColor: customMainColor,\n\t\t\t};\n\t\t// Is normal style and a named color is being used, we need to retrieve the color value to set the style,\n\t\t// as there is no expectation that themes create classes that set border colors.\n\t\t} else if ( mainColor ) {\n\t\t\tconst colors = get( select( 'core/block-editor' ).getSettings(), [ 'colors' ], [] );\n\t\t\tconst colorObject = getColorObjectByAttributeValues( colors, mainColor );\n\t\t\tfigureStyles = {\n\t\t\t\tborderColor: colorObject.color,\n\t\t\t};\n\t\t}\n\n\t\tconst blockquoteTextColorClass = getColorClassName( 'color', textColor );\n\t\tconst blockquoteClasses = textColor || customTextColor ? classnames( 'has-text-color', {\n\t\t\t[ blockquoteTextColorClass ]: blockquoteTextColorClass,\n\t\t} ) : undefined;\n\t\tconst blockquoteStyle = blockquoteTextColorClass ? undefined : { color: customTextColor };\n\t\treturn (\n\t\t\t<figure className={ figureClass } style={ figureStyles }>\n\t\t\t\t<blockquote className={ blockquoteClasses } style={ blockquoteStyle } >\n\t\t\t\t\t<RichText.Content value={ value } multiline />\n\t\t\t\t\t{ ! RichText.isEmpty( citation ) && <RichText.Content tagName=\"cite\" value={ citation } /> }\n\t\t\t\t</blockquote>\n\t\t\t</figure>\n\t\t);\n\t},\n\n\tdeprecated: [ {\n\t\tattributes: {\n\t\t\t...blockAttributes,\n\t\t},\n\t\tsave( { attributes } ) {\n\t\t\tconst { value, citation } = attributes;\n\t\t\treturn (\n\t\t\t\t<blockquote>\n\t\t\t\t\t<RichText.Content value={ value } multiline />\n\t\t\t\t\t{ ! RichText.isEmpty( citation ) && <RichText.Content tagName=\"cite\" value={ citation } /> }\n\t\t\t\t</blockquote>\n\t\t\t);\n\t\t},\n\t}, {\n\t\tattributes: {\n\t\t\t...blockAttributes,\n\t\t\tcitation: {\n\t\t\t\ttype: 'string',\n\t\t\t\tsource: 'html',\n\t\t\t\tselector: 'footer',\n\t\t\t},\n\t\t\talign: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: 'none',\n\t\t\t},\n\t\t},\n\n\t\tsave( { attributes } ) {\n\t\t\tconst { value, citation, align } = attributes;\n\n\t\t\treturn (\n\t\t\t\t<blockquote className={ `align${ align }` }>\n\t\t\t\t\t<RichText.Content value={ value } multiline />\n\t\t\t\t\t{ ! RichText.isEmpty( citation ) && <RichText.Content tagName=\"footer\" value={ citation } /> }\n\t\t\t\t</blockquote>\n\t\t\t);\n\t\t},\n\t} ],\n};\n"]}