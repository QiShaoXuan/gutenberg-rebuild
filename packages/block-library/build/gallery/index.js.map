{"version":3,"sources":["@wordpress/block-library/src/gallery/index.js"],"names":["blockAttributes","images","type","default","source","selector","query","url","attribute","link","alt","id","caption","ids","columns","imageCrop","linkTo","name","parseShortcodeIds","split","map","parseInt","settings","title","description","icon","category","keywords","attributes","supports","align","transforms","from","isMultiBlock","blocks","transform","undefined","validImages","tag","shortcode","named","isMatch","files","length","file","indexOf","onChange","block","filesList","onFileChange","imagesAttr","pickRelevantMediaFiles","clientId","allowedTypes","to","edit","save","image","href","img","deprecated","isEligible","index","migrate"],"mappings":";;;;;;;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AAKA;;AACA;;AAlBA;;;;AAKA;;;;AASA;;;AAMA,IAAMA,eAAe,GAAG;AACvBC,EAAAA,MAAM,EAAE;AACPC,IAAAA,IAAI,EAAE,OADC;AAEPC,IAAAA,OAAO,EAAE,EAFF;AAGPC,IAAAA,MAAM,EAAE,OAHD;AAIPC,IAAAA,QAAQ,EAAE,0CAJH;AAKPC,IAAAA,KAAK,EAAE;AACNC,MAAAA,GAAG,EAAE;AACJH,QAAAA,MAAM,EAAE,WADJ;AAEJC,QAAAA,QAAQ,EAAE,KAFN;AAGJG,QAAAA,SAAS,EAAE;AAHP,OADC;AAMNC,MAAAA,IAAI,EAAE;AACLL,QAAAA,MAAM,EAAE,WADH;AAELC,QAAAA,QAAQ,EAAE,KAFL;AAGLG,QAAAA,SAAS,EAAE;AAHN,OANA;AAWNE,MAAAA,GAAG,EAAE;AACJN,QAAAA,MAAM,EAAE,WADJ;AAEJC,QAAAA,QAAQ,EAAE,KAFN;AAGJG,QAAAA,SAAS,EAAE,KAHP;AAIJL,QAAAA,OAAO,EAAE;AAJL,OAXC;AAiBNQ,MAAAA,EAAE,EAAE;AACHP,QAAAA,MAAM,EAAE,WADL;AAEHC,QAAAA,QAAQ,EAAE,KAFP;AAGHG,QAAAA,SAAS,EAAE;AAHR,OAjBE;AAsBNI,MAAAA,OAAO,EAAE;AACRV,QAAAA,IAAI,EAAE,QADE;AAERE,QAAAA,MAAM,EAAE,MAFA;AAGRC,QAAAA,QAAQ,EAAE;AAHF;AAtBH;AALA,GADe;AAmCvBQ,EAAAA,GAAG,EAAE;AACJX,IAAAA,IAAI,EAAE,OADF;AAEJC,IAAAA,OAAO,EAAE;AAFL,GAnCkB;AAuCvBW,EAAAA,OAAO,EAAE;AACRZ,IAAAA,IAAI,EAAE;AADE,GAvCc;AA0CvBa,EAAAA,SAAS,EAAE;AACVb,IAAAA,IAAI,EAAE,SADI;AAEVC,IAAAA,OAAO,EAAE;AAFC,GA1CY;AA8CvBa,EAAAA,MAAM,EAAE;AACPd,IAAAA,IAAI,EAAE,QADC;AAEPC,IAAAA,OAAO,EAAE;AAFF;AA9Ce,CAAxB;AAoDO,IAAMc,IAAI,GAAG,cAAb;;;AAEP,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAEL,GAAF,EAAW;AACpC,MAAK,CAAEA,GAAP,EAAa;AACZ,WAAO,EAAP;AACA;;AAED,SAAOA,GAAG,CAACM,KAAJ,CAAW,GAAX,EAAiBC,GAAjB,CAAsB,UAAET,EAAF;AAAA,WAC5BU,QAAQ,CAAEV,EAAF,EAAM,EAAN,CADoB;AAAA,GAAtB,CAAP;AAGA,CARD;;AAUO,IAAMW,QAAQ,GAAG;AACvBC,EAAAA,KAAK,EAAE,cAAI,SAAJ,CADgB;AAEvBC,EAAAA,WAAW,EAAE,cAAI,4CAAJ,CAFU;AAGvBC,EAAAA,IAAI,EAAJA,aAHuB;AAIvBC,EAAAA,QAAQ,EAAE,QAJa;AAKvBC,EAAAA,QAAQ,EAAE,CAAE,cAAI,QAAJ,CAAF,EAAkB,cAAI,QAAJ,CAAlB,CALa;AAMvBC,EAAAA,UAAU,EAAE5B,eANW;AAOvB6B,EAAAA,QAAQ,EAAE;AACTC,IAAAA,KAAK,EAAE;AADE,GAPa;AAWvBC,EAAAA,UAAU,EAAE;AACXC,IAAAA,IAAI,EAAE,CACL;AACC9B,MAAAA,IAAI,EAAE,OADP;AAEC+B,MAAAA,YAAY,EAAE,IAFf;AAGCC,MAAAA,MAAM,EAAE,CAAE,YAAF,CAHT;AAICC,MAAAA,SAAS,EAAE,mBAAEP,UAAF,EAAkB;AAC5B;AAD4B,YAEtBE,KAFsB,GAEZF,UAAU,CAAE,CAAF,CAFE,CAEtBE,KAFsB,EAG5B;;AACAA,QAAAA,KAAK,GAAG,mBAAOF,UAAP,EAAmB,CAAE,OAAF,EAAWE,KAAX,CAAnB,IAA0CA,KAA1C,GAAkDM,SAA1D;AAEA,YAAMC,WAAW,GAAG,oBAAQT,UAAR,EAAoB;AAAA,cAAIjB,EAAJ,QAAIA,EAAJ;AAAA,cAAQJ,GAAR,QAAQA,GAAR;AAAA,iBAAmBI,EAAE,IAAIJ,GAAzB;AAAA,SAApB,CAApB;AAEA,eAAO,yBAAa,cAAb,EAA6B;AACnCN,UAAAA,MAAM,EAAEoC,WAAW,CAACjB,GAAZ,CAAiB;AAAA,gBAAIT,EAAJ,SAAIA,EAAJ;AAAA,gBAAQJ,GAAR,SAAQA,GAAR;AAAA,gBAAaG,GAAb,SAAaA,GAAb;AAAA,gBAAkBE,OAAlB,SAAkBA,OAAlB;AAAA,mBAAmC;AAAED,cAAAA,EAAE,EAAFA,EAAF;AAAMJ,cAAAA,GAAG,EAAHA,GAAN;AAAWG,cAAAA,GAAG,EAAHA,GAAX;AAAgBE,cAAAA,OAAO,EAAPA;AAAhB,aAAnC;AAAA,WAAjB,CAD2B;AAEnCC,UAAAA,GAAG,EAAEwB,WAAW,CAACjB,GAAZ,CAAiB;AAAA,gBAAIT,EAAJ,SAAIA,EAAJ;AAAA,mBAAcA,EAAd;AAAA,WAAjB,CAF8B;AAGnCmB,UAAAA,KAAK,EAALA;AAHmC,SAA7B,CAAP;AAKA;AAjBF,KADK,EAoBL;AACC5B,MAAAA,IAAI,EAAE,WADP;AAECoC,MAAAA,GAAG,EAAE,SAFN;AAGCV,MAAAA,UAAU,EAAE;AACX3B,QAAAA,MAAM,EAAE;AACPC,UAAAA,IAAI,EAAE,OADC;AAEPqC,UAAAA,SAAS,EAAE,0BAA0B;AAAA,gBAAb1B,GAAa,SAAtB2B,KAAsB,CAAb3B,GAAa;AACpC,mBAAOK,iBAAiB,CAAEL,GAAF,CAAjB,CAAyBO,GAAzB,CAA8B,UAAET,EAAF;AAAA,qBAAY;AAChDA,gBAAAA,EAAE,EAAFA;AADgD,eAAZ;AAAA,aAA9B,CAAP;AAGA;AANM,SADG;AASXE,QAAAA,GAAG,EAAE;AACJX,UAAAA,IAAI,EAAE,OADF;AAEJqC,UAAAA,SAAS,EAAE,0BAA0B;AAAA,gBAAb1B,GAAa,SAAtB2B,KAAsB,CAAb3B,GAAa;AACpC,mBAAOK,iBAAiB,CAAEL,GAAF,CAAxB;AACA;AAJG,SATM;AAeXC,QAAAA,OAAO,EAAE;AACRZ,UAAAA,IAAI,EAAE,QADE;AAERqC,UAAAA,SAAS,EAAE,0BAAoC;AAAA,4CAAhCC,KAAgC,CAAvB1B,OAAuB;AAAA,gBAAvBA,OAAuB,oCAAb,GAAa;AAC9C,mBAAOO,QAAQ,CAAEP,OAAF,EAAW,EAAX,CAAf;AACA;AAJO,SAfE;AAqBXE,QAAAA,MAAM,EAAE;AACPd,UAAAA,IAAI,EAAE,QADC;AAEPqC,UAAAA,SAAS,EAAE,0BAA0C;AAAA,yCAAtCC,KAAsC,CAA7B/B,IAA6B;AAAA,gBAA7BA,IAA6B,iCAAtB,YAAsB;AACpD,mBAAOA,IAAI,KAAK,MAAT,GAAkB,OAAlB,GAA4BA,IAAnC;AACA;AAJM;AArBG;AAHb,KApBK,EAoDL;AACC;AACAP,MAAAA,IAAI,EAAE,OAFP;AAGCuC,MAAAA,OAHD,mBAGUC,KAHV,EAGkB;AAChB,eAAOA,KAAK,CAACC,MAAN,KAAiB,CAAjB,IAAsB,mBAAOD,KAAP,EAAc,UAAEE,IAAF;AAAA,iBAAYA,IAAI,CAAC1C,IAAL,CAAU2C,OAAV,CAAmB,QAAnB,MAAkC,CAA9C;AAAA,SAAd,CAA7B;AACA,OALF;AAMCV,MAAAA,SAND,qBAMYO,KANZ,EAMmBI,QANnB,EAM8B;AAC5B,YAAMC,KAAK,GAAG,yBAAa,cAAb,EAA6B;AAC1C9C,UAAAA,MAAM,EAAEyC,KAAK,CAACtB,GAAN,CAAW,UAAEwB,IAAF;AAAA,mBAAY,kCAAwB;AACtDrC,cAAAA,GAAG,EAAE,yBAAeqC,IAAf;AADiD,aAAxB,CAAZ;AAAA,WAAX;AADkC,SAA7B,CAAd;AAKA,iCAAa;AACZI,UAAAA,SAAS,EAAEN,KADC;AAEZO,UAAAA,YAAY,EAAE,sBAAEhD,MAAF,EAAc;AAC3B,gBAAMiD,UAAU,GAAGjD,MAAM,CAACmB,GAAP,CAClB+B,4BADkB,CAAnB;AAGAL,YAAAA,QAAQ,CAAEC,KAAK,CAACK,QAAR,EAAkB;AACzBvC,cAAAA,GAAG,EAAE,iBAAKqC,UAAL,EAAiB,IAAjB,CADoB;AAEzBjD,cAAAA,MAAM,EAAEiD;AAFiB,aAAlB,CAAR;AAIA,WAVW;AAWZG,UAAAA,YAAY,EAAE,CAAE,OAAF;AAXF,SAAb;AAaA,eAAON,KAAP;AACA;AA1BF,KApDK,CADK;AAkFXO,IAAAA,EAAE,EAAE,CACH;AACCpD,MAAAA,IAAI,EAAE,OADP;AAECgC,MAAAA,MAAM,EAAE,CAAE,YAAF,CAFT;AAGCC,MAAAA,SAAS,EAAE,0BAAyB;AAAA,YAArBlC,MAAqB,SAArBA,MAAqB;AAAA,YAAb6B,KAAa,SAAbA,KAAa;;AACnC,YAAK7B,MAAM,CAAC0C,MAAP,GAAgB,CAArB,EAAyB;AACxB,iBAAO1C,MAAM,CAACmB,GAAP,CAAY;AAAA,gBAAIT,EAAJ,SAAIA,EAAJ;AAAA,gBAAQJ,GAAR,SAAQA,GAAR;AAAA,gBAAaG,GAAb,SAAaA,GAAb;AAAA,gBAAkBE,OAAlB,SAAkBA,OAAlB;AAAA,mBAAiC,yBAAa,YAAb,EAA2B;AAAED,cAAAA,EAAE,EAAFA,EAAF;AAAMJ,cAAAA,GAAG,EAAHA,GAAN;AAAWG,cAAAA,GAAG,EAAHA,GAAX;AAAgBE,cAAAA,OAAO,EAAPA,OAAhB;AAAyBkB,cAAAA,KAAK,EAALA;AAAzB,aAA3B,CAAjC;AAAA,WAAZ,CAAP;AACA;;AACD,eAAO,yBAAa,YAAb,EAA2B;AAAEA,UAAAA,KAAK,EAALA;AAAF,SAA3B,CAAP;AACA;AARF,KADG;AAlFO,GAXW;AA2GvByB,EAAAA,IAAI,EAAJA,aA3GuB;AA6GvBC,EAAAA,IA7GuB,wBA6GA;AAAA,QAAf5B,UAAe,UAAfA,UAAe;AAAA,QACd3B,MADc,GAC8D2B,UAD9D,CACd3B,MADc;AAAA,8BAC8D2B,UAD9D,CACNd,OADM;AAAA,QACNA,OADM,oCACI,gCAAsBc,UAAtB,CADJ;AAAA,QACwCb,SADxC,GAC8Da,UAD9D,CACwCb,SADxC;AAAA,QACmDC,MADnD,GAC8DY,UAD9D,CACmDZ,MADnD;AAEtB,WACC;AAAI,MAAA,SAAS,oBAAeF,OAAf,cAA4BC,SAAS,GAAG,YAAH,GAAkB,EAAvD;AAAb,OACGd,MAAM,CAACmB,GAAP,CAAY,UAAEqC,KAAF,EAAa;AAC1B,UAAIC,IAAJ;;AAEA,cAAS1C,MAAT;AACC,aAAK,OAAL;AACC0C,UAAAA,IAAI,GAAGD,KAAK,CAAClD,GAAb;AACA;;AACD,aAAK,YAAL;AACCmD,UAAAA,IAAI,GAAGD,KAAK,CAAChD,IAAb;AACA;AANF;;AASA,UAAMkD,GAAG,GAAG;AAAK,QAAA,GAAG,EAAGF,KAAK,CAAClD,GAAjB;AAAuB,QAAA,GAAG,EAAGkD,KAAK,CAAC/C,GAAnC;AAAyC,mBAAU+C,KAAK,CAAC9C,EAAzD;AAA8D,qBAAY8C,KAAK,CAAChD,IAAhF;AAAuF,QAAA,SAAS,EAAGgD,KAAK,CAAC9C,EAAN,sBAAwB8C,KAAK,CAAC9C,EAA9B,IAAsC;AAAzI,QAAZ;AAEA,aACC;AAAI,QAAA,GAAG,EAAG8C,KAAK,CAAC9C,EAAN,IAAY8C,KAAK,CAAClD,GAA5B;AAAkC,QAAA,SAAS,EAAC;AAA5C,SACC,4CACGmD,IAAI,GAAG;AAAG,QAAA,IAAI,EAAGA;AAAV,SAAmBC,GAAnB,CAAH,GAAkCA,GADzC,EAEGF,KAAK,CAAC7C,OAAN,IAAiB6C,KAAK,CAAC7C,OAAN,CAAc+B,MAAd,GAAuB,CAAxC,IACD,4BAAC,qBAAD,CAAU,OAAV;AAAkB,QAAA,OAAO,EAAC,YAA1B;AAAuC,QAAA,KAAK,EAAGc,KAAK,CAAC7C;AAArD,QAHF,CADD,CADD;AAUA,KAxBC,CADH,CADD;AA6BA,GA5IsB;AA8IvBgD,EAAAA,UAAU,EAAE,CACX;AACChC,IAAAA,UAAU,EAAE5B,eADb;AAEC6D,IAAAA,UAFD,8BAE+B;AAAA,UAAhB5D,MAAgB,UAAhBA,MAAgB;AAAA,UAARY,GAAQ,UAARA,GAAQ;AAC7B,aAAOZ,MAAM,IACZA,MAAM,CAAC0C,MAAP,GAAgB,CADV,KAGH,CAAE9B,GAAF,IAASZ,MAAX,IACEY,GAAG,IAAIZ,MAAP,IAAiBY,GAAG,CAAC8B,MAAJ,KAAe1C,MAAM,CAAC0C,MADzC,IAEA,kBAAM1C,MAAN,EAAc,UAAEU,EAAF,EAAMmD,KAAN,EAAiB;AAC9B,YAAK,CAAEnD,EAAF,IAAQE,GAAG,CAAEiD,KAAF,CAAH,KAAiB,IAA9B,EAAqC;AACpC,iBAAO,IAAP;AACA;;AACD,eAAOzC,QAAQ,CAAEV,EAAF,EAAM,EAAN,CAAR,KAAuBE,GAAG,CAAEiD,KAAF,CAAjC;AACA,OALD,CALK,CAAP;AAYA,KAfF;AAgBCC,IAAAA,OAhBD,mBAgBUnC,UAhBV,EAgBuB;AACrB,6CACIA,UADJ;AAECf,QAAAA,GAAG,EAAE,iBAAKe,UAAU,CAAC3B,MAAhB,EAAwB,kBAAc;AAAA,cAAVU,EAAU,UAAVA,EAAU;;AAC1C,cAAK,CAAEA,EAAP,EAAY;AACX,mBAAO,IAAP;AACA;;AACD,iBAAOU,QAAQ,CAAEV,EAAF,EAAM,EAAN,CAAf;AACA,SALI;AAFN;AASA,KA1BF;AA2BC6C,IAAAA,IA3BD,wBA2BwB;AAAA,UAAf5B,UAAe,UAAfA,UAAe;AAAA,UACd3B,MADc,GAC8D2B,UAD9D,CACd3B,MADc;AAAA,iCAC8D2B,UAD9D,CACNd,OADM;AAAA,UACNA,OADM,qCACI,gCAAsBc,UAAtB,CADJ;AAAA,UACwCb,SADxC,GAC8Da,UAD9D,CACwCb,SADxC;AAAA,UACmDC,MADnD,GAC8DY,UAD9D,CACmDZ,MADnD;AAEtB,aACC;AAAI,QAAA,SAAS,oBAAeF,OAAf,cAA4BC,SAAS,GAAG,YAAH,GAAkB,EAAvD;AAAb,SACGd,MAAM,CAACmB,GAAP,CAAY,UAAEqC,KAAF,EAAa;AAC1B,YAAIC,IAAJ;;AAEA,gBAAS1C,MAAT;AACC,eAAK,OAAL;AACC0C,YAAAA,IAAI,GAAGD,KAAK,CAAClD,GAAb;AACA;;AACD,eAAK,YAAL;AACCmD,YAAAA,IAAI,GAAGD,KAAK,CAAChD,IAAb;AACA;AANF;;AASA,YAAMkD,GAAG,GAAG;AAAK,UAAA,GAAG,EAAGF,KAAK,CAAClD,GAAjB;AAAuB,UAAA,GAAG,EAAGkD,KAAK,CAAC/C,GAAnC;AAAyC,qBAAU+C,KAAK,CAAC9C,EAAzD;AAA8D,uBAAY8C,KAAK,CAAChD,IAAhF;AAAuF,UAAA,SAAS,EAAGgD,KAAK,CAAC9C,EAAN,sBAAwB8C,KAAK,CAAC9C,EAA9B,IAAsC;AAAzI,UAAZ;AAEA,eACC;AAAI,UAAA,GAAG,EAAG8C,KAAK,CAAC9C,EAAN,IAAY8C,KAAK,CAAClD,GAA5B;AAAkC,UAAA,SAAS,EAAC;AAA5C,WACC,4CACGmD,IAAI,GAAG;AAAG,UAAA,IAAI,EAAGA;AAAV,WAAmBC,GAAnB,CAAH,GAAkCA,GADzC,EAEGF,KAAK,CAAC7C,OAAN,IAAiB6C,KAAK,CAAC7C,OAAN,CAAc+B,MAAd,GAAuB,CAAxC,IACD,4BAAC,qBAAD,CAAU,OAAV;AAAkB,UAAA,OAAO,EAAC,YAA1B;AAAuC,UAAA,KAAK,EAAGc,KAAK,CAAC7C;AAArD,UAHF,CADD,CADD;AAUA,OAxBC,CADH,CADD;AA6BA;AA1DF,GADW,EA6DX;AACCgB,IAAAA,UAAU,EAAE5B,eADb;AAECwD,IAAAA,IAFD,wBAEwB;AAAA,UAAf5B,UAAe,UAAfA,UAAe;AAAA,UACd3B,MADc,GAC8D2B,UAD9D,CACd3B,MADc;AAAA,iCAC8D2B,UAD9D,CACNd,OADM;AAAA,UACNA,OADM,qCACI,gCAAsBc,UAAtB,CADJ;AAAA,UACwCb,SADxC,GAC8Da,UAD9D,CACwCb,SADxC;AAAA,UACmDC,MADnD,GAC8DY,UAD9D,CACmDZ,MADnD;AAEtB,aACC;AAAI,QAAA,SAAS,oBAAeF,OAAf,cAA4BC,SAAS,GAAG,YAAH,GAAkB,EAAvD;AAAb,SACGd,MAAM,CAACmB,GAAP,CAAY,UAAEqC,KAAF,EAAa;AAC1B,YAAIC,IAAJ;;AAEA,gBAAS1C,MAAT;AACC,eAAK,OAAL;AACC0C,YAAAA,IAAI,GAAGD,KAAK,CAAClD,GAAb;AACA;;AACD,eAAK,YAAL;AACCmD,YAAAA,IAAI,GAAGD,KAAK,CAAChD,IAAb;AACA;AANF;;AASA,YAAMkD,GAAG,GAAG;AAAK,UAAA,GAAG,EAAGF,KAAK,CAAClD,GAAjB;AAAuB,UAAA,GAAG,EAAGkD,KAAK,CAAC/C,GAAnC;AAAyC,qBAAU+C,KAAK,CAAC9C,EAAzD;AAA8D,uBAAY8C,KAAK,CAAChD;AAAhF,UAAZ;AAEA,eACC;AAAI,UAAA,GAAG,EAAGgD,KAAK,CAAC9C,EAAN,IAAY8C,KAAK,CAAClD,GAA5B;AAAkC,UAAA,SAAS,EAAC;AAA5C,WACC,4CACGmD,IAAI,GAAG;AAAG,UAAA,IAAI,EAAGA;AAAV,WAAmBC,GAAnB,CAAH,GAAkCA,GADzC,EAEGF,KAAK,CAAC7C,OAAN,IAAiB6C,KAAK,CAAC7C,OAAN,CAAc+B,MAAd,GAAuB,CAAxC,IACD,4BAAC,qBAAD,CAAU,OAAV;AAAkB,UAAA,OAAO,EAAC,YAA1B;AAAuC,UAAA,KAAK,EAAGc,KAAK,CAAC7C;AAArD,UAHF,CADD,CADD;AAUA,OAxBC,CADH,CADD;AA6BA;AAjCF,GA7DW,EAgGX;AACCgB,IAAAA,UAAU,kCACN5B,eADM;AAETC,MAAAA,MAAM,kCACFD,eAAe,CAACC,MADd;AAELI,QAAAA,QAAQ,EAAE;AAFL,QAFG;AAMTyB,MAAAA,KAAK,EAAE;AACN5B,QAAAA,IAAI,EAAE,QADA;AAENC,QAAAA,OAAO,EAAE;AAFH;AANE,MADX;AAaCqD,IAAAA,IAbD,wBAawB;AAAA,UAAf5B,UAAe,UAAfA,UAAe;AAAA,UACd3B,MADc,GACqE2B,UADrE,CACd3B,MADc;AAAA,iCACqE2B,UADrE,CACNd,OADM;AAAA,UACNA,OADM,qCACI,gCAAsBc,UAAtB,CADJ;AAAA,UACwCE,KADxC,GACqEF,UADrE,CACwCE,KADxC;AAAA,UAC+Cf,SAD/C,GACqEa,UADrE,CAC+Cb,SAD/C;AAAA,UAC0DC,MAD1D,GACqEY,UADrE,CAC0DZ,MAD1D;AAEtB,aACC;AAAK,QAAA,SAAS,iBAAYc,KAAZ,sBAA+BhB,OAA/B,cAA4CC,SAAS,GAAG,YAAH,GAAkB,EAAvE;AAAd,SACGd,MAAM,CAACmB,GAAP,CAAY,UAAEqC,KAAF,EAAa;AAC1B,YAAIC,IAAJ;;AAEA,gBAAS1C,MAAT;AACC,eAAK,OAAL;AACC0C,YAAAA,IAAI,GAAGD,KAAK,CAAClD,GAAb;AACA;;AACD,eAAK,YAAL;AACCmD,YAAAA,IAAI,GAAGD,KAAK,CAAChD,IAAb;AACA;AANF;;AASA,YAAMkD,GAAG,GAAG;AAAK,UAAA,GAAG,EAAGF,KAAK,CAAClD,GAAjB;AAAuB,UAAA,GAAG,EAAGkD,KAAK,CAAC/C,GAAnC;AAAyC,qBAAU+C,KAAK,CAAC9C;AAAzD,UAAZ;AAEA,eACC;AAAQ,UAAA,GAAG,EAAG8C,KAAK,CAAC9C,EAAN,IAAY8C,KAAK,CAAClD,GAAhC;AAAsC,UAAA,SAAS,EAAC;AAAhD,WACGmD,IAAI,GAAG;AAAG,UAAA,IAAI,EAAGA;AAAV,WAAmBC,GAAnB,CAAH,GAAkCA,GADzC,CADD;AAKA,OAnBC,CADH,CADD;AAwBA;AAvCF,GAhGW;AA9IW,CAAjB","sourcesContent":["/**\n * External dependencies\n */\nimport { filter, every, map, some } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { createBlock } from '@wordpress/blocks';\nimport { RichText } from '@wordpress/block-editor';\nimport { mediaUpload } from '@wordpress/editor';\nimport { createBlobURL } from '@wordpress/blob';\n\n/**\n * Internal dependencies\n */\nimport { default as edit, defaultColumnsNumber, pickRelevantMediaFiles } from './edit';\nimport icon from './icon';\n\nconst blockAttributes = {\n\timages: {\n\t\ttype: 'array',\n\t\tdefault: [],\n\t\tsource: 'query',\n\t\tselector: 'ul.wp-block-gallery .blocks-gallery-item',\n\t\tquery: {\n\t\t\turl: {\n\t\t\t\tsource: 'attribute',\n\t\t\t\tselector: 'img',\n\t\t\t\tattribute: 'src',\n\t\t\t},\n\t\t\tlink: {\n\t\t\t\tsource: 'attribute',\n\t\t\t\tselector: 'img',\n\t\t\t\tattribute: 'data-link',\n\t\t\t},\n\t\t\talt: {\n\t\t\t\tsource: 'attribute',\n\t\t\t\tselector: 'img',\n\t\t\t\tattribute: 'alt',\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t\tid: {\n\t\t\t\tsource: 'attribute',\n\t\t\t\tselector: 'img',\n\t\t\t\tattribute: 'data-id',\n\t\t\t},\n\t\t\tcaption: {\n\t\t\t\ttype: 'string',\n\t\t\t\tsource: 'html',\n\t\t\t\tselector: 'figcaption',\n\t\t\t},\n\t\t},\n\t},\n\tids: {\n\t\ttype: 'array',\n\t\tdefault: [],\n\t},\n\tcolumns: {\n\t\ttype: 'number',\n\t},\n\timageCrop: {\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t},\n\tlinkTo: {\n\t\ttype: 'string',\n\t\tdefault: 'none',\n\t},\n};\n\nexport const name = 'core/gallery';\n\nconst parseShortcodeIds = ( ids ) => {\n\tif ( ! ids ) {\n\t\treturn [];\n\t}\n\n\treturn ids.split( ',' ).map( ( id ) => (\n\t\tparseInt( id, 10 )\n\t) );\n};\n\nexport const settings = {\n\ttitle: __( 'Gallery' ),\n\tdescription: __( 'Display multiple images in a rich gallery.' ),\n\ticon,\n\tcategory: 'common',\n\tkeywords: [ __( 'images' ), __( 'photos' ) ],\n\tattributes: blockAttributes,\n\tsupports: {\n\t\talign: true,\n\t},\n\n\ttransforms: {\n\t\tfrom: [\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tisMultiBlock: true,\n\t\t\t\tblocks: [ 'core/image' ],\n\t\t\t\ttransform: ( attributes ) => {\n\t\t\t\t\t// Init the align attribute from the first item which may be either the placeholder or an image.\n\t\t\t\t\tlet { align } = attributes[ 0 ];\n\t\t\t\t\t// Loop through all the images and check if they have the same align.\n\t\t\t\t\talign = every( attributes, [ 'align', align ] ) ? align : undefined;\n\n\t\t\t\t\tconst validImages = filter( attributes, ( { id, url } ) => id && url );\n\n\t\t\t\t\treturn createBlock( 'core/gallery', {\n\t\t\t\t\t\timages: validImages.map( ( { id, url, alt, caption } ) => ( { id, url, alt, caption } ) ),\n\t\t\t\t\t\tids: validImages.map( ( { id } ) => id ),\n\t\t\t\t\t\talign,\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'shortcode',\n\t\t\t\ttag: 'gallery',\n\t\t\t\tattributes: {\n\t\t\t\t\timages: {\n\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\tshortcode: ( { named: { ids } } ) => {\n\t\t\t\t\t\t\treturn parseShortcodeIds( ids ).map( ( id ) => ( {\n\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t} ) );\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tids: {\n\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\tshortcode: ( { named: { ids } } ) => {\n\t\t\t\t\t\t\treturn parseShortcodeIds( ids );\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tcolumns: {\n\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\tshortcode: ( { named: { columns = '3' } } ) => {\n\t\t\t\t\t\t\treturn parseInt( columns, 10 );\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tlinkTo: {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tshortcode: ( { named: { link = 'attachment' } } ) => {\n\t\t\t\t\t\t\treturn link === 'file' ? 'media' : link;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t// When created by drag and dropping multiple files on an insertion point\n\t\t\t\ttype: 'files',\n\t\t\t\tisMatch( files ) {\n\t\t\t\t\treturn files.length !== 1 && every( files, ( file ) => file.type.indexOf( 'image/' ) === 0 );\n\t\t\t\t},\n\t\t\t\ttransform( files, onChange ) {\n\t\t\t\t\tconst block = createBlock( 'core/gallery', {\n\t\t\t\t\t\timages: files.map( ( file ) => pickRelevantMediaFiles( {\n\t\t\t\t\t\t\turl: createBlobURL( file ),\n\t\t\t\t\t\t} ) ),\n\t\t\t\t\t} );\n\t\t\t\t\tmediaUpload( {\n\t\t\t\t\t\tfilesList: files,\n\t\t\t\t\t\tonFileChange: ( images ) => {\n\t\t\t\t\t\t\tconst imagesAttr = images.map(\n\t\t\t\t\t\t\t\tpickRelevantMediaFiles\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tonChange( block.clientId, {\n\t\t\t\t\t\t\t\tids: map( imagesAttr, 'id' ),\n\t\t\t\t\t\t\t\timages: imagesAttr,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t},\n\t\t\t\t\t\tallowedTypes: [ 'image' ],\n\t\t\t\t\t} );\n\t\t\t\t\treturn block;\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tto: [\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tblocks: [ 'core/image' ],\n\t\t\t\ttransform: ( { images, align } ) => {\n\t\t\t\t\tif ( images.length > 0 ) {\n\t\t\t\t\t\treturn images.map( ( { id, url, alt, caption } ) => createBlock( 'core/image', { id, url, alt, caption, align } ) );\n\t\t\t\t\t}\n\t\t\t\t\treturn createBlock( 'core/image', { align } );\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n\n\tedit,\n\n\tsave( { attributes } ) {\n\t\tconst { images, columns = defaultColumnsNumber( attributes ), imageCrop, linkTo } = attributes;\n\t\treturn (\n\t\t\t<ul className={ `columns-${ columns } ${ imageCrop ? 'is-cropped' : '' }` } >\n\t\t\t\t{ images.map( ( image ) => {\n\t\t\t\t\tlet href;\n\n\t\t\t\t\tswitch ( linkTo ) {\n\t\t\t\t\t\tcase 'media':\n\t\t\t\t\t\t\thref = image.url;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'attachment':\n\t\t\t\t\t\t\thref = image.link;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst img = <img src={ image.url } alt={ image.alt } data-id={ image.id } data-link={ image.link } className={ image.id ? `wp-image-${ image.id }` : null } />;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={ image.id || image.url } className=\"blocks-gallery-item\">\n\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t{ href ? <a href={ href }>{ img }</a> : img }\n\t\t\t\t\t\t\t\t{ image.caption && image.caption.length > 0 && (\n\t\t\t\t\t\t\t\t\t<RichText.Content tagName=\"figcaption\" value={ image.caption } />\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</ul>\n\t\t);\n\t},\n\n\tdeprecated: [\n\t\t{\n\t\t\tattributes: blockAttributes,\n\t\t\tisEligible( { images, ids } ) {\n\t\t\t\treturn images &&\n\t\t\t\t\timages.length > 0 &&\n\t\t\t\t\t(\n\t\t\t\t\t\t( ! ids && images ) ||\n\t\t\t\t\t\t( ids && images && ids.length !== images.length ) ||\n\t\t\t\t\t\tsome( images, ( id, index ) => {\n\t\t\t\t\t\t\tif ( ! id && ids[ index ] !== null ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn parseInt( id, 10 ) !== ids[ index ];\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\t\t\t},\n\t\t\tmigrate( attributes ) {\n\t\t\t\treturn {\n\t\t\t\t\t...attributes,\n\t\t\t\t\tids: map( attributes.images, ( { id } ) => {\n\t\t\t\t\t\tif ( ! id ) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn parseInt( id, 10 );\n\t\t\t\t\t} ),\n\t\t\t\t};\n\t\t\t},\n\t\t\tsave( { attributes } ) {\n\t\t\t\tconst { images, columns = defaultColumnsNumber( attributes ), imageCrop, linkTo } = attributes;\n\t\t\t\treturn (\n\t\t\t\t\t<ul className={ `columns-${ columns } ${ imageCrop ? 'is-cropped' : '' }` } >\n\t\t\t\t\t\t{ images.map( ( image ) => {\n\t\t\t\t\t\t\tlet href;\n\n\t\t\t\t\t\t\tswitch ( linkTo ) {\n\t\t\t\t\t\t\t\tcase 'media':\n\t\t\t\t\t\t\t\t\thref = image.url;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'attachment':\n\t\t\t\t\t\t\t\t\thref = image.link;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst img = <img src={ image.url } alt={ image.alt } data-id={ image.id } data-link={ image.link } className={ image.id ? `wp-image-${ image.id }` : null } />;\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li key={ image.id || image.url } className=\"blocks-gallery-item\">\n\t\t\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t\t\t{ href ? <a href={ href }>{ img }</a> : img }\n\t\t\t\t\t\t\t\t\t\t{ image.caption && image.caption.length > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t<RichText.Content tagName=\"figcaption\" value={ image.caption } />\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} ) }\n\t\t\t\t\t</ul>\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tattributes: blockAttributes,\n\t\t\tsave( { attributes } ) {\n\t\t\t\tconst { images, columns = defaultColumnsNumber( attributes ), imageCrop, linkTo } = attributes;\n\t\t\t\treturn (\n\t\t\t\t\t<ul className={ `columns-${ columns } ${ imageCrop ? 'is-cropped' : '' }` } >\n\t\t\t\t\t\t{ images.map( ( image ) => {\n\t\t\t\t\t\t\tlet href;\n\n\t\t\t\t\t\t\tswitch ( linkTo ) {\n\t\t\t\t\t\t\t\tcase 'media':\n\t\t\t\t\t\t\t\t\thref = image.url;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'attachment':\n\t\t\t\t\t\t\t\t\thref = image.link;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst img = <img src={ image.url } alt={ image.alt } data-id={ image.id } data-link={ image.link } />;\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li key={ image.id || image.url } className=\"blocks-gallery-item\">\n\t\t\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t\t\t{ href ? <a href={ href }>{ img }</a> : img }\n\t\t\t\t\t\t\t\t\t\t{ image.caption && image.caption.length > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t<RichText.Content tagName=\"figcaption\" value={ image.caption } />\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} ) }\n\t\t\t\t\t</ul>\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tattributes: {\n\t\t\t\t...blockAttributes,\n\t\t\t\timages: {\n\t\t\t\t\t...blockAttributes.images,\n\t\t\t\t\tselector: 'div.wp-block-gallery figure.blocks-gallery-image img',\n\t\t\t\t},\n\t\t\t\talign: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: 'none',\n\t\t\t\t},\n\t\t\t},\n\n\t\t\tsave( { attributes } ) {\n\t\t\t\tconst { images, columns = defaultColumnsNumber( attributes ), align, imageCrop, linkTo } = attributes;\n\t\t\t\treturn (\n\t\t\t\t\t<div className={ `align${ align } columns-${ columns } ${ imageCrop ? 'is-cropped' : '' }` } >\n\t\t\t\t\t\t{ images.map( ( image ) => {\n\t\t\t\t\t\t\tlet href;\n\n\t\t\t\t\t\t\tswitch ( linkTo ) {\n\t\t\t\t\t\t\t\tcase 'media':\n\t\t\t\t\t\t\t\t\thref = image.url;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'attachment':\n\t\t\t\t\t\t\t\t\thref = image.link;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst img = <img src={ image.url } alt={ image.alt } data-id={ image.id } />;\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<figure key={ image.id || image.url } className=\"blocks-gallery-image\">\n\t\t\t\t\t\t\t\t\t{ href ? <a href={ href }>{ img }</a> : img }\n\t\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} ) }\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t],\n};\n"]}