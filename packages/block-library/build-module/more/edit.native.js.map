{"version":3,"sources":["@wordpress/block-library/src/more/edit.native.js"],"names":["View","__","Component","getDefaultBlockName","createBlock","PlainText","styles","MoreEdit","arguments","onChangeInput","bind","state","defaultText","newValue","indexOf","insertBlocksAfter","props","setState","value","length","undefined","setAttributes","customText","attributes","onFocus","onBlur","isSelected","renderLine","renderText"],"mappings":";;;;;;;;AAAA;;;AAGA,SAASA,IAAT,QAAqB,cAArB;AAEA;;;;AAGA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SACCC,mBADD,EAECC,WAFD,QAGO,mBAHP;AAKA;;;;AAGA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,MAAP,MAAmB,eAAnB;;IAEqBC,Q;;;;;AACpB,sBAAc;AAAA;;AAAA;;AACb,mFAAUC,SAAV;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,uDAArB;AAEA,UAAKC,KAAL,GAAa;AACZC,MAAAA,WAAW,EAAEX,EAAE,CAAE,WAAF;AADH,KAAb;AAJa;AAOb;;;;kCAEcY,Q,EAAW;AACzB;AACA;AACA;AACA;AACA,UAAKA,QAAQ,CAACC,OAAT,CAAkB,IAAlB,MAA6B,CAAC,CAAnC,EAAuC;AAAA,YAC9BC,iBAD8B,GACR,KAAKC,KADG,CAC9BD,iBAD8B;AAEtCA,QAAAA,iBAAiB,CAAE,CAAEX,WAAW,CAAED,mBAAmB,EAArB,CAAb,CAAF,CAAjB;AACA;AACA,OATwB,CAUzB;;;AACA,WAAKc,QAAL,CAAe;AACdL,QAAAA,WAAW,EAAE;AADC,OAAf;AAGA,UAAMM,KAAK,GAAGL,QAAQ,CAACM,MAAT,KAAoB,CAApB,GAAwBC,SAAxB,GAAoCP,QAAlD;AACA,WAAKG,KAAL,CAAWK,aAAX,CAA0B;AAAEC,QAAAA,UAAU,EAAEJ;AAAd,OAA1B;AACA;;;iCAEY;AACZ,aAAO,cAAC,IAAD;AAAM,QAAA,KAAK,EAAGZ,MAAM,CAAE,0BAAF;AAApB,QAAP;AACA;;;iCAEY;AAAA,wBAC4B,KAAKU,KADjC;AAAA,UACJO,UADI,eACJA,UADI;AAAA,UACQC,OADR,eACQA,OADR;AAAA,UACiBC,MADjB,eACiBA,MADjB;AAAA,UAEJH,UAFI,GAEWC,UAFX,CAEJD,UAFI;AAAA,UAGJV,WAHI,GAGY,KAAKD,KAHjB,CAGJC,WAHI;AAIZ,UAAMM,KAAK,GAAGI,UAAU,KAAKF,SAAf,GAA2BE,UAA3B,GAAwCV,WAAtD;AAEA,aACC,cAAC,IAAD,QACC,cAAC,SAAD;AACC,QAAA,KAAK,EAAGN,MAAM,CAAE,0BAAF,CADf;AAEC,QAAA,KAAK,EAAGY,KAFT;AAGC,QAAA,SAAS,EAAG,IAHb;AAIC,QAAA,qBAAqB,EAAC,aAJvB;AAKC,QAAA,QAAQ,EAAG,KAAKT,aALjB;AAMC,QAAA,WAAW,EAAGG,WANf;AAOC,QAAA,UAAU,EAAG,KAAKI,KAAL,CAAWU,UAPzB;AAQC,QAAA,OAAO,EAAGF,OARX;AASC,QAAA,MAAM,EAAGC;AATV,QADD,CADD;AAeA;;;6BAEQ;AACR,aACC,cAAC,IAAD;AAAM,QAAA,KAAK,EAAGnB,MAAM,CAAE,+BAAF;AAApB,SACG,KAAKqB,UAAL,EADH,EAEG,KAAKC,UAAL,EAFH,EAGG,KAAKD,UAAL,EAHH,CADD;AAOA;;;;EA/DoCzB,S;;SAAjBK,Q","sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport {\n\tgetDefaultBlockName,\n\tcreateBlock,\n} from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { PlainText } from '@wordpress/block-editor';\nimport styles from './editor.scss';\n\nexport default class MoreEdit extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.onChangeInput = this.onChangeInput.bind( this );\n\n\t\tthis.state = {\n\t\t\tdefaultText: __( 'Read more' ),\n\t\t};\n\t}\n\n\tonChangeInput( newValue ) {\n\t\t// Detect Enter.key and add new empty block after.\n\t\t// Note: This is detected after the fact, and the newline could be visible on the block\n\t\t// for a very small time. This is OK for the alpha, we will revisit the logic later.\n\t\t// See https://github.com/wordpress-mobile/gutenberg-mobile/issues/324\n\t\tif ( newValue.indexOf( '\\n' ) !== -1 ) {\n\t\t\tconst { insertBlocksAfter } = this.props;\n\t\t\tinsertBlocksAfter( [ createBlock( getDefaultBlockName() ) ] );\n\t\t\treturn;\n\t\t}\n\t\t// Set defaultText to an empty string, allowing the user to clear/replace the input field's text\n\t\tthis.setState( {\n\t\t\tdefaultText: '',\n\t\t} );\n\t\tconst value = newValue.length === 0 ? undefined : newValue;\n\t\tthis.props.setAttributes( { customText: value } );\n\t}\n\n\trenderLine() {\n\t\treturn <View style={ styles[ 'block-library-more__line' ] } />;\n\t}\n\n\trenderText() {\n\t\tconst { attributes, onFocus, onBlur } = this.props;\n\t\tconst { customText } = attributes;\n\t\tconst { defaultText } = this.state;\n\t\tconst value = customText !== undefined ? customText : defaultText;\n\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<PlainText\n\t\t\t\t\tstyle={ styles[ 'block-library-more__text' ] }\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tmultiline={ true }\n\t\t\t\t\tunderlineColorAndroid=\"transparent\"\n\t\t\t\t\tonChange={ this.onChangeInput }\n\t\t\t\t\tplaceholder={ defaultText }\n\t\t\t\t\tisSelected={ this.props.isSelected }\n\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\tonBlur={ onBlur }\n\t\t\t\t/>\n\t\t\t</View>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<View style={ styles[ 'block-library-more__container' ] }>\n\t\t\t\t{ this.renderLine() }\n\t\t\t\t{ this.renderText() }\n\t\t\t\t{ this.renderLine() }\n\t\t\t</View>\n\t\t);\n\t}\n}\n"]}