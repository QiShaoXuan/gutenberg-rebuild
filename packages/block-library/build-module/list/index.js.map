{"version":3,"sources":["@wordpress/block-library/src/list/index.js"],"names":["omit","__","createBlock","getPhrasingContentSchema","getBlockAttributes","RichText","replace","join","split","create","toHTMLString","LINE_SEPARATOR","edit","icon","listContentSchema","ul","ol","attributes","forEach","tag","children","li","supports","className","schema","ordered","type","default","values","source","selector","multiline","name","settings","title","description","category","keywords","transforms","from","isMultiBlock","blocks","transform","blockAttributes","value","map","content","html","length","multilineTag","node","outerHTML","nodeName","prefix","to","multilineWrapperTags","piece","deprecated","property","migrate","migratedAttributes","save","toLowerCase","merge","attributesToMerge","tagName"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tcreateBlock,\n\tgetPhrasingContentSchema,\n\tgetBlockAttributes,\n} from '@wordpress/blocks';\nimport { RichText } from '@wordpress/block-editor';\nimport { replace, join, split, create, toHTMLString, LINE_SEPARATOR } from '@wordpress/rich-text';\n\n/**\n * Internal dependencies\n */\nimport edit from './edit';\nimport icon from './icon';\n\nconst listContentSchema = {\n\t...getPhrasingContentSchema(),\n\tul: {},\n\tol: { attributes: [ 'type' ] },\n};\n\n// Recursion is needed.\n// Possible: ul > li > ul.\n// Impossible: ul > ul.\n[ 'ul', 'ol' ].forEach( ( tag ) => {\n\tlistContentSchema[ tag ].children = {\n\t\tli: {\n\t\t\tchildren: listContentSchema,\n\t\t},\n\t};\n} );\n\nconst supports = {\n\tclassName: false,\n};\n\nconst schema = {\n\tordered: {\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t},\n\tvalues: {\n\t\ttype: 'string',\n\t\tsource: 'html',\n\t\tselector: 'ol,ul',\n\t\tmultiline: 'li',\n\t\tdefault: '',\n\t},\n};\n\nexport const name = 'core/list';\n\nexport const settings = {\n\ttitle: __( 'List' ),\n\tdescription: __( 'Create a bulleted or numbered list.' ),\n\ticon,\n\tcategory: 'common',\n\tkeywords: [ __( 'bullet list' ), __( 'ordered list' ), __( 'numbered list' ) ],\n\n\tattributes: schema,\n\n\tsupports,\n\n\ttransforms: {\n\t\tfrom: [\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tisMultiBlock: true,\n\t\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\t\ttransform: ( blockAttributes ) => {\n\t\t\t\t\treturn createBlock( 'core/list', {\n\t\t\t\t\t\tvalues: toHTMLString( {\n\t\t\t\t\t\t\tvalue: join( blockAttributes.map( ( { content } ) => {\n\t\t\t\t\t\t\t\tconst value = create( { html: content } );\n\n\t\t\t\t\t\t\t\tif ( blockAttributes.length > 1 ) {\n\t\t\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// When converting only one block, transform\n\t\t\t\t\t\t\t\t// every line to a list item.\n\t\t\t\t\t\t\t\treturn replace( value, /\\n/g, LINE_SEPARATOR );\n\t\t\t\t\t\t\t} ), LINE_SEPARATOR ),\n\t\t\t\t\t\t\tmultilineTag: 'li',\n\t\t\t\t\t\t} ),\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tblocks: [ 'core/quote' ],\n\t\t\t\ttransform: ( { value } ) => {\n\t\t\t\t\treturn createBlock( 'core/list', {\n\t\t\t\t\t\tvalues: toHTMLString( {\n\t\t\t\t\t\t\tvalue: create( { html: value, multilineTag: 'p' } ),\n\t\t\t\t\t\t\tmultilineTag: 'li',\n\t\t\t\t\t\t} ),\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'raw',\n\t\t\t\tselector: 'ol,ul',\n\t\t\t\tschema: {\n\t\t\t\t\tol: listContentSchema.ol,\n\t\t\t\t\tul: listContentSchema.ul,\n\t\t\t\t},\n\t\t\t\ttransform( node ) {\n\t\t\t\t\treturn createBlock( 'core/list', {\n\t\t\t\t\t\t...getBlockAttributes(\n\t\t\t\t\t\t\t'core/list',\n\t\t\t\t\t\t\tnode.outerHTML\n\t\t\t\t\t\t),\n\t\t\t\t\t\tordered: node.nodeName === 'OL',\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t},\n\t\t\t...[ '*', '-' ].map( ( prefix ) => ( {\n\t\t\t\ttype: 'prefix',\n\t\t\t\tprefix,\n\t\t\t\ttransform( content ) {\n\t\t\t\t\treturn createBlock( 'core/list', {\n\t\t\t\t\t\tvalues: `<li>${ content }</li>`,\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t} ) ),\n\t\t\t...[ '1.', '1)' ].map( ( prefix ) => ( {\n\t\t\t\ttype: 'prefix',\n\t\t\t\tprefix,\n\t\t\t\ttransform( content ) {\n\t\t\t\t\treturn createBlock( 'core/list', {\n\t\t\t\t\t\tordered: true,\n\t\t\t\t\t\tvalues: `<li>${ content }</li>`,\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t} ) ),\n\t\t],\n\t\tto: [\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\t\ttransform: ( { values } ) =>\n\t\t\t\t\tsplit( create( {\n\t\t\t\t\t\thtml: values,\n\t\t\t\t\t\tmultilineTag: 'li',\n\t\t\t\t\t\tmultilineWrapperTags: [ 'ul', 'ol' ],\n\t\t\t\t\t} ), LINE_SEPARATOR )\n\t\t\t\t\t\t.map( ( piece ) =>\n\t\t\t\t\t\t\tcreateBlock( 'core/paragraph', {\n\t\t\t\t\t\t\t\tcontent: toHTMLString( { value: piece } ),\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tblocks: [ 'core/quote' ],\n\t\t\t\ttransform: ( { values } ) => {\n\t\t\t\t\treturn createBlock( 'core/quote', {\n\t\t\t\t\t\tvalue: toHTMLString( {\n\t\t\t\t\t\t\tvalue: create( {\n\t\t\t\t\t\t\t\thtml: values,\n\t\t\t\t\t\t\t\tmultilineTag: 'li',\n\t\t\t\t\t\t\t\tmultilineWrapperTags: [ 'ul', 'ol' ],\n\t\t\t\t\t\t\t} ),\n\t\t\t\t\t\t\tmultilineTag: 'p',\n\t\t\t\t\t\t} ),\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n\n\tdeprecated: [\n\t\t{\n\t\t\tsupports,\n\t\t\tattributes: {\n\t\t\t\t...omit( schema, [ 'ordered' ] ),\n\t\t\t\tnodeName: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tsource: 'property',\n\t\t\t\t\tselector: 'ol,ul',\n\t\t\t\t\tproperty: 'nodeName',\n\t\t\t\t\tdefault: 'UL',\n\t\t\t\t},\n\t\t\t},\n\t\t\tmigrate( attributes ) {\n\t\t\t\tconst { nodeName, ...migratedAttributes } = attributes;\n\n\t\t\t\treturn {\n\t\t\t\t\t...migratedAttributes,\n\t\t\t\t\tordered: 'OL' === nodeName,\n\t\t\t\t};\n\t\t\t},\n\t\t\tsave( { attributes } ) {\n\t\t\t\tconst { nodeName, values } = attributes;\n\n\t\t\t\treturn (\n\t\t\t\t\t<RichText.Content\n\t\t\t\t\t\ttagName={ nodeName.toLowerCase() }\n\t\t\t\t\t\tvalue={ values }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t],\n\n\tmerge( attributes, attributesToMerge ) {\n\t\tconst { values } = attributesToMerge;\n\n\t\tif ( ! values || values === '<li></li>' ) {\n\t\t\treturn attributes;\n\t\t}\n\n\t\treturn {\n\t\t\t...attributes,\n\t\t\tvalues: attributes.values + values,\n\t\t};\n\t},\n\n\tedit,\n\n\tsave( { attributes } ) {\n\t\tconst { ordered, values } = attributes;\n\t\tconst tagName = ordered ? 'ol' : 'ul';\n\n\t\treturn (\n\t\t\t<RichText.Content tagName={ tagName } value={ values } multiline=\"li\" />\n\t\t);\n\t},\n};\n"]}