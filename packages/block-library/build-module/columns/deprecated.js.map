{"version":3,"sources":["@wordpress/block-library/src/columns/deprecated.js"],"names":["createBlock","InnerBlocks","getDeprecatedLayoutColumn","originalContent","doc","document","implementation","createHTMLDocument","columnMatch","body","innerHTML","firstChild","classList","classListItem","match","Number","attributes","columns","type","default","isEligible","innerBlocks","isFastPassEligible","some","innerBlock","test","undefined","migrate","reduce","result","columnIndex","push","migratedInnerBlocks","map","columnBlocks","save"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createBlock } from '@wordpress/blocks';\nimport {\n\tInnerBlocks,\n} from '@wordpress/block-editor';\n\n/**\n * Given an HTML string for a deprecated columns inner block, returns the\n * column index to which the migrated inner block should be assigned. Returns\n * undefined if the inner block was not assigned to a column.\n *\n * @param {string} originalContent Deprecated Columns inner block HTML.\n *\n * @return {?number} Column to which inner block is to be assigned.\n */\nfunction getDeprecatedLayoutColumn( originalContent ) {\n\tlet { doc } = getDeprecatedLayoutColumn;\n\tif ( ! doc ) {\n\t\tdoc = document.implementation.createHTMLDocument( '' );\n\t\tgetDeprecatedLayoutColumn.doc = doc;\n\t}\n\n\tlet columnMatch;\n\n\tdoc.body.innerHTML = originalContent;\n\tfor ( const classListItem of doc.body.firstChild.classList ) {\n\t\tif ( ( columnMatch = classListItem.match( /^layout-column-(\\d+)$/ ) ) ) {\n\t\t\treturn Number( columnMatch[ 1 ] ) - 1;\n\t\t}\n\t}\n}\n\nexport default [\n\t{\n\t\tattributes: {\n\t\t\tcolumns: {\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 2,\n\t\t\t},\n\t\t},\n\t\tisEligible( attributes, innerBlocks ) {\n\t\t\t// Since isEligible is called on every valid instance of the\n\t\t\t// Columns block and a deprecation is the unlikely case due to\n\t\t\t// its subsequent migration, optimize for the `false` condition\n\t\t\t// by performing a naive, inaccurate pass at inner blocks.\n\t\t\tconst isFastPassEligible = innerBlocks.some( ( innerBlock ) => (\n\t\t\t\t/layout-column-\\d+/.test( innerBlock.originalContent )\n\t\t\t) );\n\n\t\t\tif ( ! isFastPassEligible ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Only if the fast pass is considered eligible is the more\n\t\t\t// accurate, durable, slower condition performed.\n\t\t\treturn innerBlocks.some( ( innerBlock ) => (\n\t\t\t\tgetDeprecatedLayoutColumn( innerBlock.originalContent ) !== undefined\n\t\t\t) );\n\t\t},\n\t\tmigrate( attributes, innerBlocks ) {\n\t\t\tconst columns = innerBlocks.reduce( ( result, innerBlock ) => {\n\t\t\t\tconst { originalContent } = innerBlock;\n\n\t\t\t\tlet columnIndex = getDeprecatedLayoutColumn( originalContent );\n\t\t\t\tif ( columnIndex === undefined ) {\n\t\t\t\t\tcolumnIndex = 0;\n\t\t\t\t}\n\n\t\t\t\tif ( ! result[ columnIndex ] ) {\n\t\t\t\t\tresult[ columnIndex ] = [];\n\t\t\t\t}\n\n\t\t\t\tresult[ columnIndex ].push( innerBlock );\n\n\t\t\t\treturn result;\n\t\t\t}, [] );\n\n\t\t\tconst migratedInnerBlocks = columns.map( ( columnBlocks ) => (\n\t\t\t\tcreateBlock( 'core/column', {}, columnBlocks )\n\t\t\t) );\n\n\t\t\treturn [\n\t\t\t\tattributes,\n\t\t\t\tmigratedInnerBlocks,\n\t\t\t];\n\t\t},\n\t\tsave( { attributes } ) {\n\t\t\tconst { columns } = attributes;\n\n\t\t\treturn (\n\t\t\t\t<div className={ `has-${ columns }-columns` }>\n\t\t\t\t\t<InnerBlocks.Content />\n\t\t\t\t</div>\n\t\t\t);\n\t\t},\n\t},\n];\n"]}