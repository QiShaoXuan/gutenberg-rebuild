{"version":3,"sources":["@wordpress/priority-queue/src/index.js"],"names":["requestIdleCallback","window","requestAnimationFrame","createQueue","waitingList","elementsMap","WeakMap","isRunning","runWaitingList","deadline","length","nextElement","shift","get","delete","timeRemaining","add","element","item","has","push","set","flush","index","indexOf","splice"],"mappings":"AAAA,IAAMA,mBAAmB,GAAGC,MAAM,CAACD,mBAAP,GAA6BC,MAAM,CAACD,mBAApC,GAA0DC,MAAM,CAACC,qBAA7F;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAChC,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,WAAW,GAAG,IAAIC,OAAJ,EAApB;AACA,MAAIC,SAAS,GAAG,KAAhB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAEC,QAAF,EAAgB;AACtC,OAAG;AACF,UAAKL,WAAW,CAACM,MAAZ,KAAuB,CAA5B,EAAgC;AAC/BH,QAAAA,SAAS,GAAG,KAAZ;AACA;AACA;;AAED,UAAMI,WAAW,GAAGP,WAAW,CAACQ,KAAZ,EAApB;AACAP,MAAAA,WAAW,CAACQ,GAAZ,CAAiBF,WAAjB;AACAN,MAAAA,WAAW,CAACS,MAAZ,CAAoBH,WAApB;AACA,KATD,QASUF,QAAQ,IAAIA,QAAQ,CAACM,aAArB,IAAsCN,QAAQ,CAACM,aAAT,KAA2B,CAT3E;;AAWAf,IAAAA,mBAAmB,CAAEQ,cAAF,CAAnB;AACA,GAbD;;AAeA,MAAMQ,GAAG,GAAG,SAANA,GAAM,CAAEC,OAAF,EAAWC,IAAX,EAAqB;AAChC,QAAK,CAAEb,WAAW,CAACc,GAAZ,CAAiBF,OAAjB,CAAP,EAAoC;AACnCb,MAAAA,WAAW,CAACgB,IAAZ,CAAkBH,OAAlB;AACA;;AACDZ,IAAAA,WAAW,CAACgB,GAAZ,CAAiBJ,OAAjB,EAA0BC,IAA1B;;AACA,QAAK,CAAEX,SAAP,EAAmB;AAClBA,MAAAA,SAAS,GAAG,IAAZ;AACAP,MAAAA,mBAAmB,CAAEQ,cAAF,CAAnB;AACA;AACD,GATD;;AAWA,MAAMc,KAAK,GAAG,SAARA,KAAQ,CAAEL,OAAF,EAAe;AAC5B,QAAK,CAAEZ,WAAW,CAACc,GAAZ,CAAiBF,OAAjB,CAAP,EAAoC;AACnC,aAAO,KAAP;AACA;;AAEDZ,IAAAA,WAAW,CAACS,MAAZ,CAAoBG,OAApB;AACA,QAAMM,KAAK,GAAGnB,WAAW,CAACoB,OAAZ,CAAqBP,OAArB,CAAd;AACAb,IAAAA,WAAW,CAACqB,MAAZ,CAAoBF,KAApB,EAA2B,CAA3B;AAEA,WAAO,IAAP;AACA,GAVD;;AAYA,SAAO;AACNP,IAAAA,GAAG,EAAHA,GADM;AAENM,IAAAA,KAAK,EAALA;AAFM,GAAP;AAIA,CA/CM","sourcesContent":["const requestIdleCallback = window.requestIdleCallback ? window.requestIdleCallback : window.requestAnimationFrame;\n\n/**\n * Creates a context-aware queue that only executes\n * the last task of a given context.\n *\n * @example\n *```js\n * import { createQueue } from '@wordpress/priority-queue';\n *\n * const queue = createQueue();\n *\n * // Context objects.\n * const ctx1 = {};\n * const ctx2 = {};\n *\n * // For a given context in the queue, only the last callback is executed.\n * queue.add( ctx1, () => console.log( 'This will be printed first' ) );\n * queue.add( ctx2, () => console.log( 'This won\\'t be printed' ) );\n * queue.add( ctx2, () => console.log( 'This will be printed second' ) );\n *```\n *\n * @return {Object} Queue object with `add` and `flush` methods.\n */\nexport const createQueue = () => {\n\tconst waitingList = [];\n\tconst elementsMap = new WeakMap();\n\tlet isRunning = false;\n\n\tconst runWaitingList = ( deadline ) => {\n\t\tdo {\n\t\t\tif ( waitingList.length === 0 ) {\n\t\t\t\tisRunning = false;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextElement = waitingList.shift();\n\t\t\telementsMap.get( nextElement )();\n\t\t\telementsMap.delete( nextElement );\n\t\t} while ( deadline && deadline.timeRemaining && deadline.timeRemaining() > 0 );\n\n\t\trequestIdleCallback( runWaitingList );\n\t};\n\n\tconst add = ( element, item ) => {\n\t\tif ( ! elementsMap.has( element ) ) {\n\t\t\twaitingList.push( element );\n\t\t}\n\t\telementsMap.set( element, item );\n\t\tif ( ! isRunning ) {\n\t\t\tisRunning = true;\n\t\t\trequestIdleCallback( runWaitingList );\n\t\t}\n\t};\n\n\tconst flush = ( element ) => {\n\t\tif ( ! elementsMap.has( element ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\telementsMap.delete( element );\n\t\tconst index = waitingList.indexOf( element );\n\t\twaitingList.splice( index, 1 );\n\n\t\treturn true;\n\t};\n\n\treturn {\n\t\tadd,\n\t\tflush,\n\t};\n};\n"]}