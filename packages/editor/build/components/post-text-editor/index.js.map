{"version":3,"sources":["@wordpress/editor/src/components/post-text-editor/index.js"],"names":["PostTextEditor","arguments","edit","bind","stopEditing","state","event","value","target","props","onChange","setState","isDirty","onPersist","instanceId","Component","select","getEditedPostContent","dispatch","editPost","resetEditorBlocks","content","blocks","withInstanceId"],"mappings":";;;;;;;;;AASA;;;;;;;;;;;;;;AANA;;AAKA;;AAEA;;AACA;;AACA;;AAZA;;;;AAKA;;;IASaA,c;;;;;AACZ,4BAAc;AAAA;;AAAA;AACb,qHAAUC,SAAV;AAEA,UAAKC,IAAL,GAAY,MAAKA,IAAL,CAAUC,IAAV,mFAAZ;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,mFAAnB;AAEA,UAAKE,KAAL,GAAa,EAAb;AANa;AAOb;;;;;AAaD;;;;;;;;;;;yBAWMC,K,EAAQ;AACb,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACA,WAAKE,KAAL,CAAWC,QAAX,CAAqBH,KAArB;AACA,WAAKI,QAAL,CAAe;AAAEJ,QAAAA,KAAK,EAALA,KAAF;AAASK,QAAAA,OAAO,EAAE;AAAlB,OAAf;AACA;AAED;;;;;;;;kCAKc;AACb,UAAK,KAAKP,KAAL,CAAWO,OAAhB,EAA0B;AACzB,aAAKH,KAAL,CAAWI,SAAX,CAAsB,KAAKR,KAAL,CAAWE,KAAjC;AACA,aAAKI,QAAL,CAAe;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAf;AACA;AACD;;;6BAEQ;AAAA,UACAL,KADA,GACU,KAAKF,KADf,CACAE,KADA;AAAA,UAEAO,UAFA,GAEe,KAAKL,KAFpB,CAEAK,UAFA;AAGR,aACC,4BAAC,iBAAD,QACC;AAAO,QAAA,OAAO,yBAAoBA,UAApB,CAAd;AAAkD,QAAA,SAAS,EAAC;AAA5D,SACG,cAAI,mBAAJ,CADH,CADD,EAIC,4BAAC,8BAAD;AACC,QAAA,YAAY,EAAC,KADd;AAEC,QAAA,GAAG,EAAC,MAFL;AAGC,QAAA,KAAK,EAAGP,KAHT;AAIC,QAAA,QAAQ,EAAG,KAAKL,IAJjB;AAKC,QAAA,MAAM,EAAG,KAAKE,WALf;AAMC,QAAA,SAAS,EAAC,yBANX;AAOC,QAAA,EAAE,yBAAoBU,UAApB,CAPH;AAQC,QAAA,WAAW,EAAG,cAAI,iCAAJ;AARf,QAJD,CADD;AAiBA;;;6CA5DgCL,K,EAAOJ,K,EAAQ;AAC/C,UAAKA,KAAK,CAACO,OAAX,EAAqB;AACpB,eAAO,IAAP;AACA;;AAED,aAAO;AACNL,QAAAA,KAAK,EAAEE,KAAK,CAACF,KADP;AAENK,QAAAA,OAAO,EAAE;AAFH,OAAP;AAIA;;;EAnBkCG,kB;;;;eAyErB,sBAAS,CACvB,sBAAY,UAAEC,MAAF,EAAc;AAAA,gBACQA,MAAM,CAAE,aAAF,CADd;AAAA,MACjBC,oBADiB,WACjBA,oBADiB;;AAEzB,SAAO;AACNV,IAAAA,KAAK,EAAEU,oBAAoB;AADrB,GAAP;AAGA,CALD,CADuB,EAOvB,wBAAc,UAAEC,QAAF,EAAgB;AAAA,kBACWA,QAAQ,CAAE,aAAF,CADnB;AAAA,MACrBC,QADqB,aACrBA,QADqB;AAAA,MACXC,iBADW,aACXA,iBADW;;AAE7B,SAAO;AACNV,IAAAA,QADM,oBACIW,OADJ,EACc;AACnBF,MAAAA,QAAQ,CAAE;AAAEE,QAAAA,OAAO,EAAPA;AAAF,OAAF,CAAR;AACA,KAHK;AAINR,IAAAA,SAJM,qBAIKQ,OAJL,EAIe;AACpB,UAAMC,MAAM,GAAG,mBAAOD,OAAP,CAAf;AACAD,MAAAA,iBAAiB,CAAEE,MAAF,CAAjB;AACA;AAPK,GAAP;AASA,CAXD,CAPuB,EAmBvBC,uBAnBuB,CAAT,EAoBVvB,cApBU,C","sourcesContent":["/**\n * External dependencies\n */\nimport Textarea from 'react-autosize-textarea';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Component, Fragment } from '@wordpress/element';\nimport { parse } from '@wordpress/blocks';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { withInstanceId, compose } from '@wordpress/compose';\n\nexport class PostTextEditor extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.edit = this.edit.bind( this );\n\t\tthis.stopEditing = this.stopEditing.bind( this );\n\n\t\tthis.state = {};\n\t}\n\n\tstatic getDerivedStateFromProps( props, state ) {\n\t\tif ( state.isDirty ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tvalue: props.value,\n\t\t\tisDirty: false,\n\t\t};\n\t}\n\n\t/**\n\t * Handles a textarea change event to notify the onChange prop callback and\n\t * reflect the new value in the component's own state. This marks the start\n\t * of the user's edits, if not already changed, preventing future props\n\t * changes to value from replacing the rendered value. This is expected to\n\t * be followed by a reset to dirty state via `stopEditing`.\n\t *\n\t * @see stopEditing\n\t *\n\t * @param {Event} event Change event.\n\t */\n\tedit( event ) {\n\t\tconst value = event.target.value;\n\t\tthis.props.onChange( value );\n\t\tthis.setState( { value, isDirty: true } );\n\t}\n\n\t/**\n\t * Function called when the user has completed their edits, responsible for\n\t * ensuring that changes, if made, are surfaced to the onPersist prop\n\t * callback and resetting dirty state.\n\t */\n\tstopEditing() {\n\t\tif ( this.state.isDirty ) {\n\t\t\tthis.props.onPersist( this.state.value );\n\t\t\tthis.setState( { isDirty: false } );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { value } = this.state;\n\t\tconst { instanceId } = this.props;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<label htmlFor={ `post-content-${ instanceId }` } className=\"screen-reader-text\">\n\t\t\t\t\t{ __( 'Type text or HTML' ) }\n\t\t\t\t</label>\n\t\t\t\t<Textarea\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tdir=\"auto\"\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tonChange={ this.edit }\n\t\t\t\t\tonBlur={ this.stopEditing }\n\t\t\t\t\tclassName=\"editor-post-text-editor\"\n\t\t\t\t\tid={ `post-content-${ instanceId }` }\n\t\t\t\t\tplaceholder={ __( 'Start writing with text or HTML' ) }\n\t\t\t\t/>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getEditedPostContent } = select( 'core/editor' );\n\t\treturn {\n\t\t\tvalue: getEditedPostContent(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { editPost, resetEditorBlocks } = dispatch( 'core/editor' );\n\t\treturn {\n\t\t\tonChange( content ) {\n\t\t\t\teditPost( { content } );\n\t\t\t},\n\t\t\tonPersist( content ) {\n\t\t\t\tconst blocks = parse( content );\n\t\t\t\tresetEditorBlocks( blocks );\n\t\t\t},\n\t\t};\n\t} ),\n\twithInstanceId,\n] )( PostTextEditor );\n"]}