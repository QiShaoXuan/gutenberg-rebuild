{"version":3,"sources":["@wordpress/editor/src/components/post-title/index.js"],"names":["REGEXP_NEWLINES","PostTitle","arguments","onChange","bind","onSelect","onUnselect","onKeyDown","redirectHistory","state","isSelected","setState","props","clearSelectedBlock","event","newTitle","target","value","replace","onUpdate","keyCode","ENTER","preventDefault","onEnterPress","shiftKey","onRedo","onUndo","hasFixedToolbar","isCleanNewPost","isFocusMode","isPostTypeViewable","instanceId","placeholder","title","className","decodedPlaceholder","Component","applyWithSelect","select","getEditedPostAttribute","getSettings","getPostType","postType","titlePlaceholder","focusMode","applyWithDispatch","dispatch","insertDefaultBlock","editPost","undo","redo","undefined","withInstanceId","withFocusOutside"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport Textarea from 'react-autosize-textarea';\nimport classnames from 'classnames';\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { ENTER } from '@wordpress/keycodes';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { KeyboardShortcuts, withFocusOutside } from '@wordpress/components';\nimport { withInstanceId, compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport PostPermalink from '../post-permalink';\nimport PostTypeSupportCheck from '../post-type-support-check';\n\n/**\n * Constants\n */\nconst REGEXP_NEWLINES = /[\\r\\n]+/g;\n\nclass PostTitle extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.onChange = this.onChange.bind( this );\n\t\tthis.onSelect = this.onSelect.bind( this );\n\t\tthis.onUnselect = this.onUnselect.bind( this );\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\n\t\tthis.redirectHistory = this.redirectHistory.bind( this );\n\n\t\tthis.state = {\n\t\t\tisSelected: false,\n\t\t};\n\t}\n\n\thandleFocusOutside() {\n\t\tthis.onUnselect();\n\t}\n\n\tonSelect() {\n\t\tthis.setState( { isSelected: true } );\n\t\tthis.props.clearSelectedBlock();\n\t}\n\n\tonUnselect() {\n\t\tthis.setState( { isSelected: false } );\n\t}\n\n\tonChange( event ) {\n\t\tconst newTitle = event.target.value.replace( REGEXP_NEWLINES, ' ' );\n\t\tthis.props.onUpdate( newTitle );\n\t}\n\n\tonKeyDown( event ) {\n\t\tif ( event.keyCode === ENTER ) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.props.onEnterPress();\n\t\t}\n\t}\n\n\t/**\n\t * Emulates behavior of an undo or redo on its corresponding key press\n\t * combination. This is a workaround to React's treatment of undo in a\n\t * controlled textarea where characters are updated one at a time.\n\t * Instead, leverage the store's undo handling of title changes.\n\t *\n\t * @see https://github.com/facebook/react/issues/8514\n\t *\n\t * @param {KeyboardEvent} event Key event.\n\t */\n\tredirectHistory( event ) {\n\t\tif ( event.shiftKey ) {\n\t\t\tthis.props.onRedo();\n\t\t} else {\n\t\t\tthis.props.onUndo();\n\t\t}\n\n\t\tevent.preventDefault();\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\thasFixedToolbar,\n\t\t\tisCleanNewPost,\n\t\t\tisFocusMode,\n\t\t\tisPostTypeViewable,\n\t\t\tinstanceId,\n\t\t\tplaceholder,\n\t\t\ttitle,\n\t\t} = this.props;\n\t\tconst { isSelected } = this.state;\n\n\t\t// The wp-block className is important for editor styles.\n\t\tconst className = classnames( 'wp-block editor-post-title__block', {\n\t\t\t'is-selected': isSelected,\n\t\t\t'is-focus-mode': isFocusMode,\n\t\t\t'has-fixed-toolbar': hasFixedToolbar,\n\t\t} );\n\t\tconst decodedPlaceholder = decodeEntities( placeholder );\n\n\t\treturn (\n\t\t\t<PostTypeSupportCheck supportKeys=\"title\">\n\t\t\t\t<div className=\"editor-post-title\">\n\t\t\t\t\t<div className={ className }>\n\t\t\t\t\t\t<KeyboardShortcuts\n\t\t\t\t\t\t\tshortcuts={ {\n\t\t\t\t\t\t\t\t'mod+z': this.redirectHistory,\n\t\t\t\t\t\t\t\t'mod+shift+z': this.redirectHistory,\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<label htmlFor={ `post-title-${ instanceId }` } className=\"screen-reader-text\">\n\t\t\t\t\t\t\t\t{ decodedPlaceholder || __( 'Add title' ) }\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Textarea\n\t\t\t\t\t\t\t\tid={ `post-title-${ instanceId }` }\n\t\t\t\t\t\t\t\tclassName=\"editor-post-title__input\"\n\t\t\t\t\t\t\t\tvalue={ title }\n\t\t\t\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t\t\t\t\tplaceholder={ decodedPlaceholder || __( 'Add title' ) }\n\t\t\t\t\t\t\t\tonFocus={ this.onSelect }\n\t\t\t\t\t\t\t\tonKeyDown={ this.onKeyDown }\n\t\t\t\t\t\t\t\tonKeyPress={ this.onUnselect }\n\t\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\t\tOnly autofocus the title when the post is entirely empty.\n\t\t\t\t\t\t\t\t\tThis should only happen for a new post, which means we\n\t\t\t\t\t\t\t\t\tfocus the title on new post so the author can start typing\n\t\t\t\t\t\t\t\t\tright away, without needing to click anything.\n\t\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t\t/* eslint-disable jsx-a11y/no-autofocus */\n\t\t\t\t\t\t\t\tautoFocus={ isCleanNewPost }\n\t\t\t\t\t\t\t\t/* eslint-enable jsx-a11y/no-autofocus */\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</KeyboardShortcuts>\n\t\t\t\t\t\t{ isSelected && isPostTypeViewable && <PostPermalink /> }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</PostTypeSupportCheck>\n\t\t);\n\t}\n}\n\nconst applyWithSelect = withSelect( ( select ) => {\n\tconst { getEditedPostAttribute, isCleanNewPost } = select( 'core/editor' );\n\tconst { getSettings } = select( 'core/block-editor' );\n\tconst { getPostType } = select( 'core' );\n\tconst postType = getPostType( getEditedPostAttribute( 'type' ) );\n\tconst { titlePlaceholder, focusMode, hasFixedToolbar } = getSettings();\n\n\treturn {\n\t\tisCleanNewPost: isCleanNewPost(),\n\t\ttitle: getEditedPostAttribute( 'title' ),\n\t\tisPostTypeViewable: get( postType, [ 'viewable' ], false ),\n\t\tplaceholder: titlePlaceholder,\n\t\tisFocusMode: focusMode,\n\t\thasFixedToolbar,\n\t};\n} );\n\nconst applyWithDispatch = withDispatch( ( dispatch ) => {\n\tconst {\n\t\tinsertDefaultBlock,\n\t\tclearSelectedBlock,\n\t} = dispatch( 'core/block-editor' );\n\tconst {\n\t\teditPost,\n\t\tundo,\n\t\tredo,\n\t} = dispatch( 'core/editor' );\n\n\treturn {\n\t\tonEnterPress() {\n\t\t\tinsertDefaultBlock( undefined, undefined, 0 );\n\t\t},\n\t\tonUpdate( title ) {\n\t\t\teditPost( { title } );\n\t\t},\n\t\tonUndo: undo,\n\t\tonRedo: redo,\n\t\tclearSelectedBlock,\n\t};\n} );\n\nexport default compose(\n\tapplyWithSelect,\n\tapplyWithDispatch,\n\twithInstanceId,\n\twithFocusOutside\n)( PostTitle );\n"]}