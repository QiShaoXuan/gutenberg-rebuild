{"version":3,"sources":["@wordpress/editor/src/components/post-permalink/index.js"],"names":["PostPermalink","arguments","addVisibilityCheck","bind","onVisibilityChange","state","isCopied","isEditingPermalink","window","addEventListener","props","isEditable","refreshPost","document","visibilityState","prevProps","prevState","linkElement","focus","removeEventListener","isNew","isPublished","isViewable","permalinkParts","postLink","postSlug","postID","postTitle","ariaLabel","prefix","suffix","slug","samplePermalink","setState","Component","select","isEditedPostNew","isPermalinkEditable","getCurrentPost","getPermalinkParts","getEditedPostAttribute","isCurrentPostPublished","getPostType","id","link","postTypeName","postType","dispatch"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { Component } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { compose } from '@wordpress/compose';\nimport { ClipboardButton, Button, ExternalLink } from '@wordpress/components';\nimport { safeDecodeURI, safeDecodeURIComponent } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport PostPermalinkEditor from './editor.js';\nimport { getWPAdminURL, cleanForSlug } from '../../utils/url';\n\nclass PostPermalink extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.addVisibilityCheck = this.addVisibilityCheck.bind( this );\n\t\tthis.onVisibilityChange = this.onVisibilityChange.bind( this );\n\n\t\tthis.state = {\n\t\t\tisCopied: false,\n\t\t\tisEditingPermalink: false,\n\t\t};\n\t}\n\n\taddVisibilityCheck() {\n\t\twindow.addEventListener( 'visibilitychange', this.onVisibilityChange );\n\t}\n\n\tonVisibilityChange() {\n\t\tconst { isEditable, refreshPost } = this.props;\n\t\t// If the user just returned after having clicked the \"Change Permalinks\" button,\n\t\t// fetch a new copy of the post from the server, just in case they enabled permalinks.\n\t\tif ( ! isEditable && 'visible' === document.visibilityState ) {\n\t\t\trefreshPost();\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps, prevState ) {\n\t\t// If we've just stopped editing the permalink, focus on the new permalink.\n\t\tif ( prevState.isEditingPermalink && ! this.state.isEditingPermalink ) {\n\t\t\tthis.linkElement.focus();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener( 'visibilitychange', this.addVisibilityCheck );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tisEditable,\n\t\t\tisNew,\n\t\t\tisPublished,\n\t\t\tisViewable,\n\t\t\tpermalinkParts,\n\t\t\tpostLink,\n\t\t\tpostSlug,\n\t\t\tpostID,\n\t\t\tpostTitle,\n\t\t} = this.props;\n\n\t\tif ( isNew || ! isViewable || ! permalinkParts || ! postLink ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst { isCopied, isEditingPermalink } = this.state;\n\t\tconst ariaLabel = isCopied ? __( 'Permalink copied' ) : __( 'Copy the permalink' );\n\n\t\tconst { prefix, suffix } = permalinkParts;\n\t\tconst slug = safeDecodeURIComponent( postSlug ) || cleanForSlug( postTitle ) || postID;\n\t\tconst samplePermalink = ( isEditable ) ? prefix + slug + suffix : prefix;\n\n\t\treturn (\n\t\t\t<div className=\"editor-post-permalink\">\n\t\t\t\t<ClipboardButton\n\t\t\t\t\tclassName={ classnames( 'editor-post-permalink__copy', { 'is-copied': isCopied } ) }\n\t\t\t\t\ttext={ samplePermalink }\n\t\t\t\t\tlabel={ ariaLabel }\n\t\t\t\t\tonCopy={ () => this.setState( { isCopied: true } ) }\n\t\t\t\t\taria-disabled={ isCopied }\n\t\t\t\t\ticon=\"admin-links\"\n\t\t\t\t/>\n\n\t\t\t\t<span className=\"editor-post-permalink__label\">{ __( 'Permalink:' ) }</span>\n\n\t\t\t\t{ ! isEditingPermalink &&\n\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\tclassName=\"editor-post-permalink__link\"\n\t\t\t\t\t\thref={ ! isPublished ? postLink : samplePermalink }\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\tref={ ( linkElement ) => this.linkElement = linkElement }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ safeDecodeURI( samplePermalink ) }\n\t\t\t\t\t\t&lrm;\n\t\t\t\t\t</ExternalLink>\n\t\t\t\t}\n\n\t\t\t\t{ isEditingPermalink &&\n\t\t\t\t\t<PostPermalinkEditor\n\t\t\t\t\t\tslug={ slug }\n\t\t\t\t\t\tonSave={ () => this.setState( { isEditingPermalink: false } ) }\n\t\t\t\t\t/>\n\t\t\t\t}\n\n\t\t\t\t{ isEditable && ! isEditingPermalink &&\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"editor-post-permalink__edit\"\n\t\t\t\t\t\tisLarge\n\t\t\t\t\t\tonClick={ () => this.setState( { isEditingPermalink: true } ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Edit' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t}\n\n\t\t\t\t{ ! isEditable &&\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"editor-post-permalink__change\"\n\t\t\t\t\t\tisLarge\n\t\t\t\t\t\thref={ getWPAdminURL( 'options-permalink.php' ) }\n\t\t\t\t\t\tonClick={ this.addVisibilityCheck }\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Change Permalinks' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\tisEditedPostNew,\n\t\t\tisPermalinkEditable,\n\t\t\tgetCurrentPost,\n\t\t\tgetPermalinkParts,\n\t\t\tgetEditedPostAttribute,\n\t\t\tisCurrentPostPublished,\n\t\t} = select( 'core/editor' );\n\t\tconst {\n\t\t\tgetPostType,\n\t\t} = select( 'core' );\n\n\t\tconst { id, link } = getCurrentPost();\n\n\t\tconst postTypeName = getEditedPostAttribute( 'type' );\n\t\tconst postType = getPostType( postTypeName );\n\n\t\treturn {\n\t\t\tisNew: isEditedPostNew(),\n\t\t\tpostLink: link,\n\t\t\tpermalinkParts: getPermalinkParts(),\n\t\t\tpostSlug: getEditedPostAttribute( 'slug' ),\n\t\t\tisEditable: isPermalinkEditable(),\n\t\t\tisPublished: isCurrentPostPublished(),\n\t\t\tpostTitle: getEditedPostAttribute( 'title' ),\n\t\t\tpostID: id,\n\t\t\tisViewable: get( postType, [ 'viewable' ], false ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { refreshPost } = dispatch( 'core/editor' );\n\t\treturn { refreshPost };\n\t} ),\n] )( PostPermalink );\n"]}