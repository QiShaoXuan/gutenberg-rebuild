{"version":3,"sources":["@wordpress/editor/src/components/document-outline/index.js"],"names":["emptyHeadingContent","incorrectLevelContent","singleH1Headings","multipleH1Headings","computeOutlineHeadings","blocks","path","block","name","level","attributes","isEmpty","isEmptyHeading","innerBlocks","heading","content","length","DocumentOutline","title","onSelect","isTitleSupported","hasOutlineItemsDisabled","headings","prevHeadingLevel","titleNode","document","querySelector","hasTitle","countByLevel","hasMultipleH1","id","map","item","index","isIncorrectLevel","isValid","clientId","html","select","getBlocks","getEditedPostAttribute","getPostType","postType"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { countBy, flatMap, get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { compose } from '@wordpress/compose';\nimport { withSelect } from '@wordpress/data';\nimport {\n\tcreate,\n\tgetTextContent,\n} from '@wordpress/rich-text';\n\n/**\n * Internal dependencies\n */\nimport DocumentOutlineItem from './item';\n\n/**\n * Module constants\n */\nconst emptyHeadingContent = <em>{ __( '(Empty heading)' ) }</em>;\nconst incorrectLevelContent = [\n\t<br key=\"incorrect-break\" />,\n\t<em key=\"incorrect-message\">{ __( '(Incorrect heading level)' ) }</em>,\n];\nconst singleH1Headings = [\n\t<br key=\"incorrect-break-h1\" />,\n\t<em key=\"incorrect-message-h1\">{ __( '(Your theme may already use a H1 for the post title)' ) }</em>,\n];\nconst multipleH1Headings = [\n\t<br key=\"incorrect-break-multiple-h1\" />,\n\t<em key=\"incorrect-message-multiple-h1\">{ __( '(Multiple H1 headings are not recommended)' ) }</em>,\n];\n\n/**\n * Returns an array of heading blocks enhanced with the following properties:\n * path    - An array of blocks that are ancestors of the heading starting from a top-level node.\n *           Can be an empty array if the heading is a top-level node (is not nested inside another block).\n * level   - An integer with the heading level.\n * isEmpty - Flag indicating if the heading has no content.\n *\n * @param {?Array} blocks An array of blocks.\n * @param {?Array} path   An array of blocks that are ancestors of the blocks passed as blocks.\n *\n * @return {Array} An array of heading blocks enhanced with the properties described above.\n */\nconst computeOutlineHeadings = ( blocks = [], path = [] ) => {\n\treturn flatMap( blocks, ( block = {} ) => {\n\t\tif ( block.name === 'core/heading' ) {\n\t\t\treturn {\n\t\t\t\t...block,\n\t\t\t\tpath,\n\t\t\t\tlevel: block.attributes.level,\n\t\t\t\tisEmpty: isEmptyHeading( block ),\n\t\t\t};\n\t\t}\n\t\treturn computeOutlineHeadings( block.innerBlocks, [ ...path, block ] );\n\t} );\n};\n\nconst isEmptyHeading = ( heading ) => ! heading.attributes.content || heading.attributes.content.length === 0;\n\nexport const DocumentOutline = ( { blocks = [], title, onSelect, isTitleSupported, hasOutlineItemsDisabled } ) => {\n\tconst headings = computeOutlineHeadings( blocks );\n\n\tif ( headings.length < 1 ) {\n\t\treturn null;\n\t}\n\n\tlet prevHeadingLevel = 1;\n\n\t// Not great but it's the simplest way to locate the title right now.\n\tconst titleNode = document.querySelector( '.editor-post-title__input' );\n\tconst hasTitle = isTitleSupported && title && titleNode;\n\tconst countByLevel = countBy( headings, 'level' );\n\tconst hasMultipleH1 = countByLevel[ 1 ] > 1;\n\n\treturn (\n\t\t<div className=\"document-outline\">\n\t\t\t<ul>\n\t\t\t\t{ hasTitle && (\n\t\t\t\t\t<DocumentOutlineItem\n\t\t\t\t\t\tlevel={ __( 'Title' ) }\n\t\t\t\t\t\tisValid\n\t\t\t\t\t\tonSelect={ onSelect }\n\t\t\t\t\t\thref={ `#${ titleNode.id }` }\n\t\t\t\t\t\tisDisabled={ hasOutlineItemsDisabled }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ title }\n\t\t\t\t\t</DocumentOutlineItem>\n\t\t\t\t) }\n\t\t\t\t{ headings.map( ( item, index ) => {\n\t\t\t\t\t// Headings remain the same, go up by one, or down by any amount.\n\t\t\t\t\t// Otherwise there are missing levels.\n\t\t\t\t\tconst isIncorrectLevel = item.level > prevHeadingLevel + 1;\n\n\t\t\t\t\tconst isValid = (\n\t\t\t\t\t\t! item.isEmpty &&\n\t\t\t\t\t\t! isIncorrectLevel &&\n\t\t\t\t\t\t!! item.level &&\n\t\t\t\t\t\t( item.level !== 1 || ( ! hasMultipleH1 && ! hasTitle ) )\n\t\t\t\t\t);\n\t\t\t\t\tprevHeadingLevel = item.level;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<DocumentOutlineItem\n\t\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t\t\tlevel={ `H${ item.level }` }\n\t\t\t\t\t\t\tisValid={ isValid }\n\t\t\t\t\t\t\tpath={ item.path }\n\t\t\t\t\t\t\tisDisabled={ hasOutlineItemsDisabled }\n\t\t\t\t\t\t\thref={ `#block-${ item.clientId }` }\n\t\t\t\t\t\t\tonSelect={ onSelect }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ item.isEmpty ?\n\t\t\t\t\t\t\t\temptyHeadingContent :\n\t\t\t\t\t\t\t\tgetTextContent(\n\t\t\t\t\t\t\t\t\tcreate( { html: item.attributes.content } )\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{ isIncorrectLevel && incorrectLevelContent }\n\t\t\t\t\t\t\t{ item.level === 1 && hasMultipleH1 && multipleH1Headings }\n\t\t\t\t\t\t\t{ hasTitle && item.level === 1 && ! hasMultipleH1 && singleH1Headings }\n\t\t\t\t\t\t</DocumentOutlineItem>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default compose(\n\twithSelect( ( select ) => {\n\t\tconst { getBlocks } = select( 'core/block-editor' );\n\t\tconst { getEditedPostAttribute } = select( 'core/editor' );\n\t\tconst { getPostType } = select( 'core' );\n\t\tconst postType = getPostType( getEditedPostAttribute( 'type' ) );\n\n\t\treturn {\n\t\t\ttitle: getEditedPostAttribute( 'title' ),\n\t\t\tblocks: getBlocks(),\n\t\t\tisTitleSupported: get( postType, [ 'supports', 'title' ], false ),\n\t\t};\n\t} )\n)( DocumentOutline );\n"]}