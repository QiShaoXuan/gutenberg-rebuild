{"version":3,"sources":["@wordpress/editor/src/components/post-publish-button/index.js"],"names":["PostPublishButton","props","buttonNode","focusOnMount","current","focus","forceIsDirty","forceIsSaving","hasPublishAction","isBeingScheduled","isOpen","isPostSavingLocked","isPublishable","isPublished","isSaveable","isSaving","isToggle","onSave","onStatusChange","onSubmit","noop","onToggle","visibility","isButtonDisabled","isToggleDisabled","publishStatus","onClickButton","onClickToggle","buttonProps","className","isBusy","isLarge","isPrimary","onClick","toggleProps","toggleChildren","buttonChildren","componentProps","componentChildren","Component","select","isSavingPost","isEditedPostBeingScheduled","getEditedPostVisibility","isCurrentPostPublished","isEditedPostSaveable","isEditedPostPublishable","getCurrentPost","getCurrentPostType","postType","dispatch","editPost","savePost","status"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { noop, get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Button } from '@wordpress/components';\nimport { Component, createRef } from '@wordpress/element';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { __ } from '@wordpress/i18n';\nimport { DotTip } from '@wordpress/nux';\n\n/**\n * Internal dependencies\n */\nimport PublishButtonLabel from './label';\nexport class PostPublishButton extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.buttonNode = createRef();\n\t}\n\tcomponentDidMount() {\n\t\tif ( this.props.focusOnMount ) {\n\t\t\tthis.buttonNode.current.focus();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tforceIsDirty,\n\t\t\tforceIsSaving,\n\t\t\thasPublishAction,\n\t\t\tisBeingScheduled,\n\t\t\tisOpen,\n\t\t\tisPostSavingLocked,\n\t\t\tisPublishable,\n\t\t\tisPublished,\n\t\t\tisSaveable,\n\t\t\tisSaving,\n\t\t\tisToggle,\n\t\t\tonSave,\n\t\t\tonStatusChange,\n\t\t\tonSubmit = noop,\n\t\t\tonToggle,\n\t\t\tvisibility,\n\t\t} = this.props;\n\t\tconst isButtonDisabled =\n\t\t\tisSaving ||\n\t\t\tforceIsSaving ||\n\t\t\t! isSaveable ||\n\t\t\tisPostSavingLocked ||\n\t\t\t( ! isPublishable && ! forceIsDirty );\n\n\t\tconst isToggleDisabled =\n\t\t\tisPublished ||\n\t\t\tisSaving ||\n\t\t\tforceIsSaving ||\n\t\t\t! isSaveable ||\n\t\t\t( ! isPublishable && ! forceIsDirty );\n\n\t\tlet publishStatus;\n\t\tif ( ! hasPublishAction ) {\n\t\t\tpublishStatus = 'pending';\n\t\t} else if ( isBeingScheduled ) {\n\t\t\tpublishStatus = 'future';\n\t\t} else if ( visibility === 'private' ) {\n\t\t\tpublishStatus = 'private';\n\t\t} else {\n\t\t\tpublishStatus = 'publish';\n\t\t}\n\n\t\tconst onClickButton = () => {\n\t\t\tif ( isButtonDisabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tonSubmit();\n\t\t\tonStatusChange( publishStatus );\n\t\t\tonSave();\n\t\t};\n\n\t\tconst onClickToggle = () => {\n\t\t\tif ( isToggleDisabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tonToggle();\n\t\t};\n\n\t\tconst buttonProps = {\n\t\t\t'aria-disabled': isButtonDisabled,\n\t\t\tclassName: 'editor-post-publish-button',\n\t\t\tisBusy: isSaving && isPublished,\n\t\t\tisLarge: true,\n\t\t\tisPrimary: true,\n\t\t\tonClick: onClickButton,\n\t\t};\n\n\t\tconst toggleProps = {\n\t\t\t'aria-disabled': isToggleDisabled,\n\t\t\t'aria-expanded': isOpen,\n\t\t\tclassName: 'editor-post-publish-panel__toggle',\n\t\t\tisBusy: isSaving && isPublished,\n\t\t\tisPrimary: true,\n\t\t\tonClick: onClickToggle,\n\t\t};\n\n\t\tconst toggleChildren = isBeingScheduled ? __( 'Schedule…' ) : __( 'Publish…' );\n\t\tconst buttonChildren = <PublishButtonLabel forceIsSaving={ forceIsSaving } />;\n\n\t\tconst componentProps = isToggle ? toggleProps : buttonProps;\n\t\tconst componentChildren = isToggle ? toggleChildren : buttonChildren;\n\t\treturn (\n\t\t\t<Button\n\t\t\t\tref={ this.buttonNode }\n\t\t\t\t{ ...componentProps }\n\t\t\t>\n\t\t\t\t{ componentChildren }\n\t\t\t\t<DotTip tipId=\"core/editor.publish\">\n\t\t\t\t\t{ __( 'Finished writing? That’s great, let’s get this published right now. Just click “Publish” and you’re good to go.' ) }\n\t\t\t\t</DotTip>\n\t\t\t</Button>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\tisSavingPost,\n\t\t\tisEditedPostBeingScheduled,\n\t\t\tgetEditedPostVisibility,\n\t\t\tisCurrentPostPublished,\n\t\t\tisEditedPostSaveable,\n\t\t\tisEditedPostPublishable,\n\t\t\tisPostSavingLocked,\n\t\t\tgetCurrentPost,\n\t\t\tgetCurrentPostType,\n\t\t} = select( 'core/editor' );\n\t\treturn {\n\t\t\tisSaving: isSavingPost(),\n\t\t\tisBeingScheduled: isEditedPostBeingScheduled(),\n\t\t\tvisibility: getEditedPostVisibility(),\n\t\t\tisSaveable: isEditedPostSaveable(),\n\t\t\tisPostSavingLocked: isPostSavingLocked(),\n\t\t\tisPublishable: isEditedPostPublishable(),\n\t\t\tisPublished: isCurrentPostPublished(),\n\t\t\thasPublishAction: get( getCurrentPost(), [ '_links', 'wp:action-publish' ], false ),\n\t\t\tpostType: getCurrentPostType(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { editPost, savePost } = dispatch( 'core/editor' );\n\t\treturn {\n\t\t\tonStatusChange: ( status ) => editPost( { status } ),\n\t\t\tonSave: savePost,\n\t\t};\n\t} ),\n] )( PostPublishButton );\n"]}