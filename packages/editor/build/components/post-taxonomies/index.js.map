{"version":3,"sources":["@wordpress/editor/src/components/post-taxonomies/index.js"],"names":["PostTaxonomies","postType","taxonomies","taxonomyWrapper","identity","availableTaxonomies","taxonomy","types","visibleTaxonomies","visibility","show_ui","map","TaxonomyComponent","hierarchical","HierarchicalTermSelector","FlatTermSelector","slug","select","getCurrentPostType","getTaxonomies","per_page"],"mappings":";;;;;;;;;;AAQA;;AALA;;AAMA;;AACA;;AAKA;;AACA;;AAhBA;;;;AAKA;;;;AAOA;;;AAMO,SAASA,cAAT,OAAgF;AAAA,MAArDC,QAAqD,QAArDA,QAAqD;AAAA,MAA3CC,UAA2C,QAA3CA,UAA2C;AAAA,kCAA/BC,eAA+B;AAAA,MAA/BA,eAA+B,qCAAbC,gBAAa;AACtF,MAAMC,mBAAmB,GAAG,oBAAQH,UAAR,EAAoB,UAAEI,QAAF;AAAA,WAAgB,sBAAUA,QAAQ,CAACC,KAAnB,EAA0BN,QAA1B,CAAhB;AAAA,GAApB,CAA5B;AACA,MAAMO,iBAAiB,GAAG,oBAAQH,mBAAR,EAA6B,UAAEC,QAAF;AAAA,WAAgBA,QAAQ,CAACG,UAAT,CAAoBC,OAApC;AAAA,GAA7B,CAA1B;AACA,SAAOF,iBAAiB,CAACG,GAAlB,CAAuB,UAAEL,QAAF,EAAgB;AAC7C,QAAMM,iBAAiB,GAAGN,QAAQ,CAACO,YAAT,GAAwBC,iCAAxB,GAAmDC,yBAA7E;AACA,WACC,4BAAC,iBAAD;AAAU,MAAA,GAAG,qBAAgBT,QAAQ,CAACU,IAAzB;AAAb,OAEEb,eAAe,CACd,4BAAC,iBAAD;AAAmB,MAAA,IAAI,EAAGG,QAAQ,CAACU;AAAnC,MADc,EAEdV,QAFc,CAFjB,CADD;AAUA,GAZM,CAAP;AAaA;;eAEc,sBAAS,CACvB,sBAAY,UAAEW,MAAF,EAAc;AACzB,SAAO;AACNhB,IAAAA,QAAQ,EAAEgB,MAAM,CAAE,aAAF,CAAN,CAAwBC,kBAAxB,EADJ;AAENhB,IAAAA,UAAU,EAAEe,MAAM,CAAE,MAAF,CAAN,CAAiBE,aAAjB,CAAgC;AAAEC,MAAAA,QAAQ,EAAE,CAAC;AAAb,KAAhC;AAFN,GAAP;AAIA,CALD,CADuB,CAAT,EAOVpB,cAPU,C","sourcesContent":["/**\n * External dependencies\n */\nimport { filter, identity, includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport HierarchicalTermSelector from './hierarchical-term-selector';\nimport FlatTermSelector from './flat-term-selector';\n\nexport function PostTaxonomies( { postType, taxonomies, taxonomyWrapper = identity } ) {\n\tconst availableTaxonomies = filter( taxonomies, ( taxonomy ) => includes( taxonomy.types, postType ) );\n\tconst visibleTaxonomies = filter( availableTaxonomies, ( taxonomy ) => taxonomy.visibility.show_ui );\n\treturn visibleTaxonomies.map( ( taxonomy ) => {\n\t\tconst TaxonomyComponent = taxonomy.hierarchical ? HierarchicalTermSelector : FlatTermSelector;\n\t\treturn (\n\t\t\t<Fragment key={ `taxonomy-${ taxonomy.slug }` }>\n\t\t\t\t{\n\t\t\t\t\ttaxonomyWrapper(\n\t\t\t\t\t\t<TaxonomyComponent slug={ taxonomy.slug } />,\n\t\t\t\t\t\ttaxonomy\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Fragment>\n\t\t);\n\t} );\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\treturn {\n\t\t\tpostType: select( 'core/editor' ).getCurrentPostType(),\n\t\t\ttaxonomies: select( 'core' ).getTaxonomies( { per_page: -1 } ),\n\t\t};\n\t} ),\n] )( PostTaxonomies );\n\n"]}