{"version":3,"sources":["@wordpress/editor/src/store/effects/utils.js"],"names":["resolveSelector","namespace","selectorName","args","Promise","resolve","hasFinished","hasFinishedResolution","getResult","apply","result","unsubscribe"],"mappings":";;;;;;;AAGA;;AAHA;;;;AAKA;;;;;;;;;AASO,SAASA,eAAT,CAA0BC,SAA1B,EAAqCC,YAArC,EAA6D;AAAA,oCAAPC,IAAO;AAAPA,IAAAA,IAAO;AAAA;;AACnE,SAAO,IAAIC,OAAJ,CAAa,UAAEC,OAAF,EAAe;AAClC,QAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,aAAM,kBAAQ,WAAR,EAAsBC,qBAAtB,CAA6CN,SAA7C,EAAwDC,YAAxD,EAAsEC,IAAtE,CAAN;AAAA,KAApB;;AACA,QAAMK,SAAS,GAAG,SAAZA,SAAY;AAAA,aAAM,kBAAQP,SAAR,EAAqBC,YAArB,EAAoCO,KAApC,CAA2C,IAA3C,EAAiDN,IAAjD,CAAN;AAAA,KAAlB,CAFkC,CAIlC;;;AACA,QAAMO,MAAM,GAAGF,SAAS,EAAxB;;AACA,QAAKF,WAAW,EAAhB,EAAqB;AACpB,aAAOD,OAAO,CAAEK,MAAF,CAAd;AACA;;AAED,QAAMC,WAAW,GAAG,qBAAW,YAAM;AACpC,UAAKL,WAAW,EAAhB,EAAqB;AACpBK,QAAAA,WAAW;AACXN,QAAAA,OAAO,CAAEG,SAAS,EAAX,CAAP;AACA;AACD,KALmB,CAApB;AAMA,GAhBM,CAAP;AAiBA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { select, subscribe } from '@wordpress/data';\n\n/**\n * Waits for the resolution of a selector before returning the selector's value.\n *\n * @param {string} namespace    Store namespace.\n * @param {string} selectorName Selector name.\n * @param {Array} args          Selector args.\n *\n * @return {Promise} Selector result.\n */\nexport function resolveSelector( namespace, selectorName, ...args ) {\n\treturn new Promise( ( resolve ) => {\n\t\tconst hasFinished = () => select( 'core/data' ).hasFinishedResolution( namespace, selectorName, args );\n\t\tconst getResult = () => select( namespace )[ selectorName ].apply( null, args );\n\n\t\t// We need to trigger the selector (to trigger the resolver)\n\t\tconst result = getResult();\n\t\tif ( hasFinished() ) {\n\t\t\treturn resolve( result );\n\t\t}\n\n\t\tconst unsubscribe = subscribe( () => {\n\t\t\tif ( hasFinished() ) {\n\t\t\t\tunsubscribe();\n\t\t\t\tresolve( getResult() );\n\t\t\t}\n\t\t} );\n\t} );\n}\n"]}