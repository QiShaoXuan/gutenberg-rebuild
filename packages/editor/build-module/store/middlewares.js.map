{"version":3,"sources":["@wordpress/editor/src/store/middlewares.js"],"names":["refx","effects","applyMiddlewares","store","enhancedDispatch","Error","middlewareAPI","getState","dispatch"],"mappings":"AAAA;;;AAGA,OAAOA,IAAP,MAAiB,MAAjB;AAEA;;;;AAGA,OAAOC,OAAP,MAAoB,WAApB;AAEA;;;;;;;;AAOA,SAASC,gBAAT,CAA2BC,KAA3B,EAAmC;AAClC,MAAIC,gBAAgB,GAAG,4BAAM;AAC5B,UAAM,IAAIC,KAAJ,CACL,oEACA,yDAFK,CAAN;AAIA,GALD;;AAOA,MAAMC,aAAa,GAAG;AACrBC,IAAAA,QAAQ,EAAEJ,KAAK,CAACI,QADK;AAErBC,IAAAA,QAAQ,EAAE;AAAA,aAAeJ,gBAAgB,MAAhB,mBAAf;AAAA;AAFW,GAAtB;AAKAA,EAAAA,gBAAgB,GAAGJ,IAAI,CAAEC,OAAF,CAAJ,CAAiBK,aAAjB,EAAkCH,KAAK,CAACK,QAAxC,CAAnB;AAEAL,EAAAA,KAAK,CAACK,QAAN,GAAiBJ,gBAAjB;AACA,SAAOD,KAAP;AACA;;AAED,eAAeD,gBAAf","sourcesContent":["/**\n * External dependencies\n */\nimport refx from 'refx';\n\n/**\n * Internal dependencies\n */\nimport effects from './effects';\n\n/**\n * Applies the custom middlewares used specifically in the editor module.\n *\n * @param {Object} store Store Object.\n *\n * @return {Object} Update Store Object.\n */\nfunction applyMiddlewares( store ) {\n\tlet enhancedDispatch = () => {\n\t\tthrow new Error(\n\t\t\t'Dispatching while constructing your middleware is not allowed. ' +\n\t\t\t'Other middleware would not be applied to this dispatch.'\n\t\t);\n\t};\n\n\tconst middlewareAPI = {\n\t\tgetState: store.getState,\n\t\tdispatch: ( ...args ) => enhancedDispatch( ...args ),\n\t};\n\n\tenhancedDispatch = refx( effects )( middlewareAPI )( store.dispatch );\n\n\tstore.dispatch = enhancedDispatch;\n\treturn store;\n}\n\nexport default applyMiddlewares;\n"]}