{"version":3,"sources":["@wordpress/editor/src/components/post-taxonomies/index.js"],"names":["filter","identity","includes","Fragment","withSelect","compose","HierarchicalTermSelector","FlatTermSelector","PostTaxonomies","postType","taxonomies","taxonomyWrapper","availableTaxonomies","taxonomy","types","visibleTaxonomies","visibility","show_ui","map","TaxonomyComponent","hierarchical","slug","select","getCurrentPostType","getTaxonomies","per_page"],"mappings":";;AAAA;;;AAGA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,QAA3B,QAA2C,QAA3C;AAEA;;;;AAGA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA;;;;AAGA,OAAOC,wBAAP,MAAqC,8BAArC;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AAEA,OAAO,SAASC,cAAT,OAAgF;AAAA,MAArDC,QAAqD,QAArDA,QAAqD;AAAA,MAA3CC,UAA2C,QAA3CA,UAA2C;AAAA,kCAA/BC,eAA+B;AAAA,MAA/BA,eAA+B,qCAAbV,QAAa;AACtF,MAAMW,mBAAmB,GAAGZ,MAAM,CAAEU,UAAF,EAAc,UAAEG,QAAF;AAAA,WAAgBX,QAAQ,CAAEW,QAAQ,CAACC,KAAX,EAAkBL,QAAlB,CAAxB;AAAA,GAAd,CAAlC;AACA,MAAMM,iBAAiB,GAAGf,MAAM,CAAEY,mBAAF,EAAuB,UAAEC,QAAF;AAAA,WAAgBA,QAAQ,CAACG,UAAT,CAAoBC,OAApC;AAAA,GAAvB,CAAhC;AACA,SAAOF,iBAAiB,CAACG,GAAlB,CAAuB,UAAEL,QAAF,EAAgB;AAC7C,QAAMM,iBAAiB,GAAGN,QAAQ,CAACO,YAAT,GAAwBd,wBAAxB,GAAmDC,gBAA7E;AACA,WACC,cAAC,QAAD;AAAU,MAAA,GAAG,qBAAgBM,QAAQ,CAACQ,IAAzB;AAAb,OAEEV,eAAe,CACd,cAAC,iBAAD;AAAmB,MAAA,IAAI,EAAGE,QAAQ,CAACQ;AAAnC,MADc,EAEdR,QAFc,CAFjB,CADD;AAUA,GAZM,CAAP;AAaA;AAED,eAAeR,OAAO,CAAE,CACvBD,UAAU,CAAE,UAAEkB,MAAF,EAAc;AACzB,SAAO;AACNb,IAAAA,QAAQ,EAAEa,MAAM,CAAE,aAAF,CAAN,CAAwBC,kBAAxB,EADJ;AAENb,IAAAA,UAAU,EAAEY,MAAM,CAAE,MAAF,CAAN,CAAiBE,aAAjB,CAAgC;AAAEC,MAAAA,QAAQ,EAAE,CAAC;AAAb,KAAhC;AAFN,GAAP;AAIA,CALS,CADa,CAAF,CAAP,CAOVjB,cAPU,CAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { filter, identity, includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport HierarchicalTermSelector from './hierarchical-term-selector';\nimport FlatTermSelector from './flat-term-selector';\n\nexport function PostTaxonomies( { postType, taxonomies, taxonomyWrapper = identity } ) {\n\tconst availableTaxonomies = filter( taxonomies, ( taxonomy ) => includes( taxonomy.types, postType ) );\n\tconst visibleTaxonomies = filter( availableTaxonomies, ( taxonomy ) => taxonomy.visibility.show_ui );\n\treturn visibleTaxonomies.map( ( taxonomy ) => {\n\t\tconst TaxonomyComponent = taxonomy.hierarchical ? HierarchicalTermSelector : FlatTermSelector;\n\t\treturn (\n\t\t\t<Fragment key={ `taxonomy-${ taxonomy.slug }` }>\n\t\t\t\t{\n\t\t\t\t\ttaxonomyWrapper(\n\t\t\t\t\t\t<TaxonomyComponent slug={ taxonomy.slug } />,\n\t\t\t\t\t\ttaxonomy\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Fragment>\n\t\t);\n\t} );\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\treturn {\n\t\t\tpostType: select( 'core/editor' ).getCurrentPostType(),\n\t\t\ttaxonomies: select( 'core' ).getTaxonomies( { per_page: -1 } ),\n\t\t};\n\t} ),\n] )( PostTaxonomies );\n\n"]}