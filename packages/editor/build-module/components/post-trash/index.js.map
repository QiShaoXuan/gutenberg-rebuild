{"version":3,"sources":["@wordpress/editor/src/components/post-trash/index.js"],"names":["__","Button","withSelect","withDispatch","compose","PostTrash","isNew","postId","postType","props","onClick","trashPost","select","isEditedPostNew","getCurrentPostId","getCurrentPostType","dispatch"],"mappings":";;;AAAA;;;AAGA,SAASA,EAAT,QAAmB,iBAAnB;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iBAAzC;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,SAASC,SAAT,OAA4D;AAAA,MAAtCC,KAAsC,QAAtCA,KAAsC;AAAA,MAA/BC,MAA+B,QAA/BA,MAA+B;AAAA,MAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,MAAVC,KAAU;;AAC3D,MAAKH,KAAK,IAAI,CAAEC,MAAhB,EAAyB;AACxB,WAAO,IAAP;AACA;;AAED,MAAMG,OAAO,GAAG,SAAVA,OAAU;AAAA,WAAMD,KAAK,CAACE,SAAN,CAAiBJ,MAAjB,EAAyBC,QAAzB,CAAN;AAAA,GAAhB;;AAEA,SACC,cAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,sCAAlB;AAAyD,IAAA,OAAO,EAAGE,OAAnE;AAA6E,IAAA,SAAS,MAAtF;AAAuF,IAAA,OAAO;AAA9F,KACGV,EAAE,CAAE,eAAF,CADL,CADD;AAKA;;AAED,eAAeI,OAAO,CAAE,CACvBF,UAAU,CAAE,UAAEU,MAAF,EAAc;AAAA,gBAKrBA,MAAM,CAAE,aAAF,CALe;AAAA,MAExBC,eAFwB,WAExBA,eAFwB;AAAA,MAGxBC,gBAHwB,WAGxBA,gBAHwB;AAAA,MAIxBC,kBAJwB,WAIxBA,kBAJwB;;AAMzB,SAAO;AACNT,IAAAA,KAAK,EAAEO,eAAe,EADhB;AAENN,IAAAA,MAAM,EAAEO,gBAAgB,EAFlB;AAGNN,IAAAA,QAAQ,EAAEO,kBAAkB;AAHtB,GAAP;AAKA,CAXS,CADa,EAavBZ,YAAY,CAAE,UAAEa,QAAF;AAAA,SAAkB;AAC/BL,IAAAA,SAAS,EAAEK,QAAQ,CAAE,aAAF,CAAR,CAA0BL;AADN,GAAlB;AAAA,CAAF,CAbW,CAAF,CAAP,CAgBVN,SAhBU,CAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Button } from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\nfunction PostTrash( { isNew, postId, postType, ...props } ) {\n\tif ( isNew || ! postId ) {\n\t\treturn null;\n\t}\n\n\tconst onClick = () => props.trashPost( postId, postType );\n\n\treturn (\n\t\t<Button className=\"editor-post-trash button-link-delete\" onClick={ onClick } isDefault isLarge>\n\t\t\t{ __( 'Move to Trash' ) }\n\t\t</Button>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\tisEditedPostNew,\n\t\t\tgetCurrentPostId,\n\t\t\tgetCurrentPostType,\n\t\t} = select( 'core/editor' );\n\t\treturn {\n\t\t\tisNew: isEditedPostNew(),\n\t\t\tpostId: getCurrentPostId(),\n\t\t\tpostType: getCurrentPostType(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => ( {\n\t\ttrashPost: dispatch( 'core/editor' ).trashPost,\n\t} ) ),\n] )( PostTrash );\n"]}