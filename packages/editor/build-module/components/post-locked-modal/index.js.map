{"version":3,"sources":["@wordpress/editor/src/components/post-locked-modal/index.js"],"names":["get","__","sprintf","Modal","Button","withSelect","withDispatch","addQueryArgs","Component","addAction","removeAction","compose","withGlobalEvents","withInstanceId","getWPAdminURL","PostPreviewButton","PostLockedModal","arguments","sendPostLock","bind","receivePostLock","releasePostLock","hookName","getHookName","instanceId","props","data","isLocked","activePostLock","postId","lock","post_id","autosave","updatePostLock","received","lock_error","isTakeover","user","avatar","avatar_src","new_lock","postLockUtils","window","FormData","append","unlockNonce","xhr","XMLHttpRequest","open","ajaxUrl","send","postType","userDisplayName","name","userAvatar","unlockUrl","lockKey","post","action","_wpnonce","nonce","allPostsUrl","post_type","allPostsLabel","select","isPostLocked","isPostLockTakeover","getPostLockUser","getCurrentPostId","getActivePostLock","getEditedPostAttribute","getEditorSettings","getPostType","dispatch","beforeunload"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Modal, Button } from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { addQueryArgs } from '@wordpress/url';\nimport { Component } from '@wordpress/element';\nimport { addAction, removeAction } from '@wordpress/hooks';\nimport { compose, withGlobalEvents, withInstanceId } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { getWPAdminURL } from '../../utils/url';\nimport PostPreviewButton from '../post-preview-button';\n\nclass PostLockedModal extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.sendPostLock = this.sendPostLock.bind( this );\n\t\tthis.receivePostLock = this.receivePostLock.bind( this );\n\t\tthis.releasePostLock = this.releasePostLock.bind( this );\n\t}\n\n\tcomponentDidMount() {\n\t\tconst hookName = this.getHookName();\n\n\t\t// Details on these events on the Heartbeat API docs\n\t\t// https://developer.wordpress.org/plugins/javascript/heartbeat-api/\n\t\taddAction( 'heartbeat.send', hookName, this.sendPostLock );\n\t\taddAction( 'heartbeat.tick', hookName, this.receivePostLock );\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconst hookName = this.getHookName();\n\n\t\tremoveAction( 'heartbeat.send', hookName );\n\t\tremoveAction( 'heartbeat.tick', hookName );\n\t}\n\n\t/**\n\t * Returns a `@wordpress/hooks` hook name specific to the instance of the\n\t * component.\n\t *\n\t * @return {string} Hook name prefix.\n\t */\n\tgetHookName() {\n\t\tconst { instanceId } = this.props;\n\t\treturn 'core/editor/post-locked-modal-' + instanceId;\n\t}\n\n\t/**\n\t * Keep the lock refreshed.\n\t *\n\t * When the user does not send a heartbeat in a heartbeat-tick\n\t * the user is no longer editing and another user can start editing.\n\t *\n\t * @param {Object} data Data to send in the heartbeat request.\n\t */\n\tsendPostLock( data ) {\n\t\tconst { isLocked, activePostLock, postId } = this.props;\n\t\tif ( isLocked ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdata[ 'wp-refresh-post-lock' ] = {\n\t\t\tlock: activePostLock,\n\t\t\tpost_id: postId,\n\t\t};\n\t}\n\n\t/**\n\t * Refresh post locks: update the lock string or show the dialog if somebody has taken over editing.\n\t *\n\t * @param {Object} data Data received in the heartbeat request\n\t */\n\treceivePostLock( data ) {\n\t\tif ( ! data[ 'wp-refresh-post-lock' ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { autosave, updatePostLock } = this.props;\n\t\tconst received = data[ 'wp-refresh-post-lock' ];\n\t\tif ( received.lock_error ) {\n\t\t\t// Auto save and display the takeover modal.\n\t\t\tautosave();\n\t\t\tupdatePostLock( {\n\t\t\t\tisLocked: true,\n\t\t\t\tisTakeover: true,\n\t\t\t\tuser: {\n\t\t\t\t\tavatar: received.lock_error.avatar_src,\n\t\t\t\t},\n\t\t\t} );\n\t\t} else if ( received.new_lock ) {\n\t\t\tupdatePostLock( {\n\t\t\t\tisLocked: false,\n\t\t\t\tactivePostLock: received.new_lock,\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Unlock the post before the window is exited.\n\t */\n\treleasePostLock() {\n\t\tconst { isLocked, activePostLock, postLockUtils, postId } = this.props;\n\t\tif ( isLocked || ! activePostLock ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst data = new window.FormData();\n\t\tdata.append( 'action', 'wp-remove-post-lock' );\n\t\tdata.append( '_wpnonce', postLockUtils.unlockNonce );\n\t\tdata.append( 'post_ID', postId );\n\t\tdata.append( 'active_post_lock', activePostLock );\n\n\t\tconst xhr = new window.XMLHttpRequest();\n\t\txhr.open( 'POST', postLockUtils.ajaxUrl, false );\n\t\txhr.send( data );\n\t}\n\n\trender() {\n\t\tconst { user, postId, isLocked, isTakeover, postLockUtils, postType } = this.props;\n\t\tif ( ! isLocked ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst userDisplayName = user.name;\n\t\tconst userAvatar = user.avatar;\n\n\t\tconst unlockUrl = addQueryArgs( 'post.php', {\n\t\t\t'get-post-lock': '1',\n\t\t\tlockKey: true,\n\t\t\tpost: postId,\n\t\t\taction: 'edit',\n\t\t\t_wpnonce: postLockUtils.nonce,\n\t\t} );\n\t\tconst allPostsUrl = getWPAdminURL( 'edit.php', {\n\t\t\tpost_type: get( postType, [ 'slug' ] ),\n\t\t} );\n\t\tconst allPostsLabel = __( 'Exit the Editor' );\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\ttitle={ isTakeover ? __( 'Someone else has taken over this post.' ) : __( 'This post is already being edited.' ) }\n\t\t\t\tfocusOnMount={ true }\n\t\t\t\tshouldCloseOnClickOutside={ false }\n\t\t\t\tshouldCloseOnEsc={ false }\n\t\t\t\tisDismissable={ false }\n\t\t\t\tclassName=\"editor-post-locked-modal\"\n\t\t\t>\n\t\t\t\t{ !! userAvatar && (\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={ userAvatar }\n\t\t\t\t\t\talt={ __( 'Avatar' ) }\n\t\t\t\t\t\tclassName=\"editor-post-locked-modal__avatar\"\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ !! isTakeover && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{ userDisplayName ?\n\t\t\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\t\t/* translators: %s: user's display name */\n\t\t\t\t\t\t\t\t\t__( '%s now has editing control of this post. Don’t worry, your changes up to this moment have been saved.' ),\n\t\t\t\t\t\t\t\t\tuserDisplayName\n\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t__( 'Another user now has editing control of this post. Don’t worry, your changes up to this moment have been saved.' )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"editor-post-locked-modal__buttons\">\n\t\t\t\t\t\t\t<Button isPrimary isLarge href={ allPostsUrl }>\n\t\t\t\t\t\t\t\t{ allPostsLabel }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t{ ! isTakeover && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{ userDisplayName ?\n\t\t\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\t\t/* translators: %s: user's display name */\n\t\t\t\t\t\t\t\t\t__( '%s is currently working on this post, which means you cannot make changes, unless you take over.' ),\n\t\t\t\t\t\t\t\t\tuserDisplayName\n\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t__( 'Another user is currently working on this post, which means you cannot make changes, unless you take over.' )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"editor-post-locked-modal__buttons\">\n\t\t\t\t\t\t\t<Button isDefault isLarge href={ allPostsUrl }>\n\t\t\t\t\t\t\t\t{ allPostsLabel }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<PostPreviewButton />\n\t\t\t\t\t\t\t<Button isPrimary isLarge href={ unlockUrl }>\n\t\t\t\t\t\t\t\t{ __( 'Take Over' ) }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t</Modal>\n\t\t);\n\t}\n}\n\nexport default compose(\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\tisPostLocked,\n\t\t\tisPostLockTakeover,\n\t\t\tgetPostLockUser,\n\t\t\tgetCurrentPostId,\n\t\t\tgetActivePostLock,\n\t\t\tgetEditedPostAttribute,\n\t\t\tgetEditorSettings,\n\t\t} = select( 'core/editor' );\n\t\tconst { getPostType } = select( 'core' );\n\t\treturn {\n\t\t\tisLocked: isPostLocked(),\n\t\t\tisTakeover: isPostLockTakeover(),\n\t\t\tuser: getPostLockUser(),\n\t\t\tpostId: getCurrentPostId(),\n\t\t\tpostLockUtils: getEditorSettings().postLockUtils,\n\t\t\tactivePostLock: getActivePostLock(),\n\t\t\tpostType: getPostType( getEditedPostAttribute( 'type' ) ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { autosave, updatePostLock } = dispatch( 'core/editor' );\n\t\treturn {\n\t\t\tautosave,\n\t\t\tupdatePostLock,\n\t\t};\n\t} ),\n\twithInstanceId,\n\twithGlobalEvents( {\n\t\tbeforeunload: 'releasePostLock',\n\t} )\n)( PostLockedModal );\n"]}