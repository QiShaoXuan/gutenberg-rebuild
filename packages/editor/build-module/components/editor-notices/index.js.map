{"version":3,"sources":["@wordpress/editor/src/components/editor-notices/index.js"],"names":["filter","NoticeList","withSelect","withDispatch","compose","TemplateValidationNotice","EditorNotices","dismissible","notices","props","undefined","isDismissible","select","getNotices","dispatch","onRemove","removeNotice"],"mappings":";;;;AAAA;;;AAGA,SAASA,MAAT,QAAuB,QAAvB;AAEA;;;;AAGA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iBAAzC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA;;;;AAGA,OAAOC,wBAAP,MAAqC,+BAArC;AAEA,OAAO,SAASC,aAAT,OAA6D;AAAA,MAAnCC,WAAmC,QAAnCA,WAAmC;AAAA,MAAtBC,OAAsB,QAAtBA,OAAsB;AAAA,MAAVC,KAAU;;AACnE,MAAKF,WAAW,KAAKG,SAArB,EAAiC;AAChCF,IAAAA,OAAO,GAAGR,MAAM,CAAEQ,OAAF,EAAW;AAAEG,MAAAA,aAAa,EAAEJ;AAAjB,KAAX,CAAhB;AACA;;AAED,SACC,cAAC,UAAD;AAAY,IAAA,OAAO,EAAGC;AAAtB,KAAqCC,KAArC,GACGF,WAAW,KAAK,KAAhB,IACD,cAAC,wBAAD,OAFF,CADD;AAOA;AAED,eAAeH,OAAO,CAAE,CACvBF,UAAU,CAAE,UAAEU,MAAF;AAAA,SAAgB;AAC3BJ,IAAAA,OAAO,EAAEI,MAAM,CAAE,cAAF,CAAN,CAAyBC,UAAzB;AADkB,GAAhB;AAAA,CAAF,CADa,EAIvBV,YAAY,CAAE,UAAEW,QAAF;AAAA,SAAkB;AAC/BC,IAAAA,QAAQ,EAAED,QAAQ,CAAE,cAAF,CAAR,CAA2BE;AADN,GAAlB;AAAA,CAAF,CAJW,CAAF,CAAP,CAOVV,aAPU,CAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { filter } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { NoticeList } from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport TemplateValidationNotice from '../template-validation-notice';\n\nexport function EditorNotices( { dismissible, notices, ...props } ) {\n\tif ( dismissible !== undefined ) {\n\t\tnotices = filter( notices, { isDismissible: dismissible } );\n\t}\n\n\treturn (\n\t\t<NoticeList notices={ notices } { ...props }>\n\t\t\t{ dismissible !== false && (\n\t\t\t\t<TemplateValidationNotice />\n\t\t\t) }\n\t\t</NoticeList>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select ) => ( {\n\t\tnotices: select( 'core/notices' ).getNotices(),\n\t} ) ),\n\twithDispatch( ( dispatch ) => ( {\n\t\tonRemove: dispatch( 'core/notices' ).removeNotice,\n\t} ) ),\n] )( EditorNotices );\n"]}