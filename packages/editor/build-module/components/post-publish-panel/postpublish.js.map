{"version":3,"sources":["@wordpress/editor/src/components/post-publish-panel/postpublish.js"],"names":["get","PanelBody","Button","ClipboardButton","TextControl","__","sprintf","Component","Fragment","createRef","withSelect","safeDecodeURIComponent","PostScheduleLabel","PostPublishPanelPostpublish","arguments","state","showCopyConfirmation","onCopy","bind","onSelectInput","postLink","props","focusOnMount","current","focus","clearTimeout","dismissCopyConfirmation","setState","setTimeout","event","target","select","children","isScheduled","post","postType","postLabel","viewPostLabel","postPublishNonLinkHeader","link","title","getEditedPostAttribute","getCurrentPost","isCurrentPostScheduled","getPostType"],"mappings":";;;;;;;;AAAA;;;AAGA,SAASA,GAAT,QAAoB,QAApB;AAEA;;;;AAGA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,eAA5B,EAA6CC,WAA7C,QAAgE,uBAAhE;AACA,SAASC,EAAT,EAAaC,OAAb,QAA4B,iBAA5B;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,oBAA/C;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,sBAAT,QAAuC,gBAAvC;AAEA;;;;AAGA,OAAOC,iBAAP,MAA8B,wBAA9B;;IAEMC,2B;;;;;AACL,yCAAc;AAAA;;AAAA;;AACb,sGAAUC,SAAV;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,oBAAoB,EAAE;AADV,KAAb;AAGA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,uDAAd;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,uDAArB;AACA,UAAKE,QAAL,GAAgBX,SAAS,EAAzB;AAPa;AAQb;;;;wCAEmB;AACnB,UAAK,KAAKY,KAAL,CAAWC,YAAhB,EAA+B;AAC9B,aAAKF,QAAL,CAAcG,OAAd,CAAsBC,KAAtB;AACA;AACD;;;2CAEsB;AACtBC,MAAAA,YAAY,CAAE,KAAKC,uBAAP,CAAZ;AACA;;;6BAEQ;AAAA;;AACR,WAAKC,QAAL,CAAe;AACdX,QAAAA,oBAAoB,EAAE;AADR,OAAf;AAIAS,MAAAA,YAAY,CAAE,KAAKC,uBAAP,CAAZ;AACA,WAAKA,uBAAL,GAA+BE,UAAU,CAAE,YAAM;AAChD,QAAA,MAAI,CAACD,QAAL,CAAe;AACdX,UAAAA,oBAAoB,EAAE;AADR,SAAf;AAGA,OAJwC,EAItC,IAJsC,CAAzC;AAKA;;;kCAEca,K,EAAQ;AACtBA,MAAAA,KAAK,CAACC,MAAN,CAAaC,MAAb;AACA;;;6BAEQ;AAAA,wBAC0C,KAAKV,KAD/C;AAAA,UACAW,QADA,eACAA,QADA;AAAA,UACUC,WADV,eACUA,WADV;AAAA,UACuBC,IADvB,eACuBA,IADvB;AAAA,UAC6BC,QAD7B,eAC6BA,QAD7B;AAER,UAAMC,SAAS,GAAGpC,GAAG,CAAEmC,QAAF,EAAY,CAAE,QAAF,EAAY,eAAZ,CAAZ,CAArB;AACA,UAAME,aAAa,GAAGrC,GAAG,CAAEmC,QAAF,EAAY,CAAE,QAAF,EAAY,WAAZ,CAAZ,CAAzB;AAEA,UAAMG,wBAAwB,GAAGL,WAAW,GAC3C,cAAC,QAAD,QAAY5B,EAAE,CAAE,sCAAF,CAAd,OAA2D,cAAC,iBAAD,OAA3D,MAD2C,GAE3CA,EAAE,CAAE,cAAF,CAFH;AAIA,aACC;AAAK,QAAA,SAAS,EAAC;AAAf,SACC,cAAC,SAAD;AAAW,QAAA,SAAS,EAAC;AAArB,SACC;AAAG,QAAA,GAAG,EAAG,KAAKe,QAAd;AAAyB,QAAA,IAAI,EAAGc,IAAI,CAACK;AAArC,SAA8CL,IAAI,CAACM,KAAL,IAAcnC,EAAE,CAAE,YAAF,CAA9D,CADD,OACwFiC,wBADxF,CADD,EAIC,cAAC,SAAD,QACC;AAAG,QAAA,SAAS,EAAC;AAAb,SACC,8BAAUjC,EAAE,CAAE,cAAF,CAAZ,CADD,CADD,EAIC,cAAC,WAAD;AACC,QAAA,SAAS,EAAC,8CADX;AAEC,QAAA,QAAQ,MAFT;AAGC,QAAA,KAAK,EAAGC,OAAO;AACd;AACAD,QAAAA,EAAE,CAAE,YAAF,CAFY,EAEM+B,SAFN,CAHhB;AAOC,QAAA,KAAK,EAAGzB,sBAAsB,CAAEuB,IAAI,CAACK,IAAP,CAP/B;AAQC,QAAA,OAAO,EAAG,KAAKpB;AARhB,QAJD,EAcC;AAAK,QAAA,SAAS,EAAC;AAAf,SACG,CAAEc,WAAF,IACD,cAAC,MAAD;AAAQ,QAAA,SAAS,MAAjB;AAAkB,QAAA,IAAI,EAAGC,IAAI,CAACK;AAA9B,SACGF,aADH,CAFF,EAOC,cAAC,eAAD;AAAiB,QAAA,SAAS,MAA1B;AAA2B,QAAA,IAAI,EAAGH,IAAI,CAACK,IAAvC;AAA8C,QAAA,MAAM,EAAG,KAAKtB;AAA5D,SACG,KAAKF,KAAL,CAAWC,oBAAX,GAAkCX,EAAE,CAAE,SAAF,CAApC,GAAoDA,EAAE,CAAE,WAAF,CADzD,CAPD,CAdD,CAJD,EA8BG2B,QA9BH,CADD;AAkCA;;;;EAjFwCzB,S;;AAoF1C,eAAeG,UAAU,CAAE,UAAEqB,MAAF,EAAc;AAAA,gBACmCA,MAAM,CAAE,aAAF,CADzC;AAAA,MAChCU,sBADgC,WAChCA,sBADgC;AAAA,MACRC,cADQ,WACRA,cADQ;AAAA,MACQC,sBADR,WACQA,sBADR;;AAAA,iBAEhBZ,MAAM,CAAE,MAAF,CAFU;AAAA,MAEhCa,WAFgC,YAEhCA,WAFgC;;AAIxC,SAAO;AACNV,IAAAA,IAAI,EAAEQ,cAAc,EADd;AAENP,IAAAA,QAAQ,EAAES,WAAW,CAAEH,sBAAsB,CAAE,MAAF,CAAxB,CAFf;AAGNR,IAAAA,WAAW,EAAEU,sBAAsB;AAH7B,GAAP;AAKA,CATwB,CAAV,CASV9B,2BATU,CAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { PanelBody, Button, ClipboardButton, TextControl } from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Component, Fragment, createRef } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\nimport { safeDecodeURIComponent } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport PostScheduleLabel from '../post-schedule/label';\n\nclass PostPublishPanelPostpublish extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.state = {\n\t\t\tshowCopyConfirmation: false,\n\t\t};\n\t\tthis.onCopy = this.onCopy.bind( this );\n\t\tthis.onSelectInput = this.onSelectInput.bind( this );\n\t\tthis.postLink = createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( this.props.focusOnMount ) {\n\t\t\tthis.postLink.current.focus();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout( this.dismissCopyConfirmation );\n\t}\n\n\tonCopy() {\n\t\tthis.setState( {\n\t\t\tshowCopyConfirmation: true,\n\t\t} );\n\n\t\tclearTimeout( this.dismissCopyConfirmation );\n\t\tthis.dismissCopyConfirmation = setTimeout( () => {\n\t\t\tthis.setState( {\n\t\t\t\tshowCopyConfirmation: false,\n\t\t\t} );\n\t\t}, 4000 );\n\t}\n\n\tonSelectInput( event ) {\n\t\tevent.target.select();\n\t}\n\n\trender() {\n\t\tconst { children, isScheduled, post, postType } = this.props;\n\t\tconst postLabel = get( postType, [ 'labels', 'singular_name' ] );\n\t\tconst viewPostLabel = get( postType, [ 'labels', 'view_item' ] );\n\n\t\tconst postPublishNonLinkHeader = isScheduled ?\n\t\t\t<Fragment>{ __( 'is now scheduled. It will go live on' ) } <PostScheduleLabel />.</Fragment> :\n\t\t\t__( 'is now live.' );\n\n\t\treturn (\n\t\t\t<div className=\"post-publish-panel__postpublish\">\n\t\t\t\t<PanelBody className=\"post-publish-panel__postpublish-header\">\n\t\t\t\t\t<a ref={ this.postLink } href={ post.link }>{ post.title || __( '(no title)' ) }</a> { postPublishNonLinkHeader }\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody>\n\t\t\t\t\t<p className=\"post-publish-panel__postpublish-subheader\">\n\t\t\t\t\t\t<strong>{ __( 'Whatâ€™s next?' ) }</strong>\n\t\t\t\t\t</p>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tclassName=\"post-publish-panel__postpublish-post-address\"\n\t\t\t\t\t\treadOnly\n\t\t\t\t\t\tlabel={ sprintf(\n\t\t\t\t\t\t\t/* translators: %s: post type singular name */\n\t\t\t\t\t\t\t__( '%s address' ), postLabel\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tvalue={ safeDecodeURIComponent( post.link ) }\n\t\t\t\t\t\tonFocus={ this.onSelectInput }\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"post-publish-panel__postpublish-buttons\">\n\t\t\t\t\t\t{ ! isScheduled && (\n\t\t\t\t\t\t\t<Button isDefault href={ post.link }>\n\t\t\t\t\t\t\t\t{ viewPostLabel }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) }\n\n\t\t\t\t\t\t<ClipboardButton isDefault text={ post.link } onCopy={ this.onCopy }>\n\t\t\t\t\t\t\t{ this.state.showCopyConfirmation ? __( 'Copied!' ) : __( 'Copy Link' ) }\n\t\t\t\t\t\t</ClipboardButton>\n\t\t\t\t\t</div>\n\t\t\t\t</PanelBody>\n\t\t\t\t{ children }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withSelect( ( select ) => {\n\tconst { getEditedPostAttribute, getCurrentPost, isCurrentPostScheduled } = select( 'core/editor' );\n\tconst { getPostType } = select( 'core' );\n\n\treturn {\n\t\tpost: getCurrentPost(),\n\t\tpostType: getPostType( getEditedPostAttribute( 'type' ) ),\n\t\tisScheduled: isCurrentPostScheduled(),\n\t};\n} )( PostPublishPanelPostpublish );\n"]}