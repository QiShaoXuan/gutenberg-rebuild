{"version":3,"sources":["@wordpress/editor/src/components/autocompleters/block.js"],"names":["select","createBlock","BlockIcon","defaultGetBlockInsertionParentClientId","getBlockInsertionPoint","rootClientId","defaultGetInserterItems","getInserterItems","defaultGetSelectedBlockName","getSelectedBlockClientId","getBlockName","selectedBlockClientId","createBlockCompleter","getBlockInsertionParentClientId","getSelectedBlockName","name","className","triggerPrefix","options","selectedBlockName","filter","inserterItem","getOptionKeywords","title","keywords","category","getOptionLabel","icon","allowContext","before","after","test","getOptionCompletion","initialAttributes","action","value","isOptionDisabled","isDisabled"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\nimport { createBlock } from '@wordpress/blocks';\nimport { BlockIcon } from '@wordpress/block-editor';\n\n/**\n * Returns the client ID of the parent where a newly inserted block would be\n * placed.\n *\n * @return {string} Client ID of the parent where a newly inserted block would\n *                  be placed.\n */\nfunction defaultGetBlockInsertionParentClientId() {\n\treturn select( 'core/block-editor' ).getBlockInsertionPoint().rootClientId;\n}\n\n/**\n * Returns the inserter items for the specified parent block.\n *\n * @param {string} rootClientId Client ID of the block for which to retrieve\n *                              inserter items.\n *\n * @return {Array<Editor.InserterItem>} The inserter items for the specified\n *                                      parent.\n */\nfunction defaultGetInserterItems( rootClientId ) {\n\treturn select( 'core/block-editor' ).getInserterItems( rootClientId );\n}\n\n/**\n * Returns the name of the currently selected block.\n *\n * @return {string?} The name of the currently selected block or `null` if no\n *                   block is selected.\n */\nfunction defaultGetSelectedBlockName() {\n\tconst { getSelectedBlockClientId, getBlockName } = select( 'core/block-editor' );\n\tconst selectedBlockClientId = getSelectedBlockClientId();\n\treturn selectedBlockClientId ? getBlockName( selectedBlockClientId ) : null;\n}\n\n/**\n * Creates a blocks repeater for replacing the current block with a selected block type.\n *\n * @return {Completer} A blocks completer.\n */\nexport function createBlockCompleter( {\n\t// Allow store-based selectors to be overridden for unit test.\n\tgetBlockInsertionParentClientId = defaultGetBlockInsertionParentClientId,\n\tgetInserterItems = defaultGetInserterItems,\n\tgetSelectedBlockName = defaultGetSelectedBlockName,\n} = {} ) {\n\treturn {\n\t\tname: 'blocks',\n\t\tclassName: 'editor-autocompleters__block',\n\t\ttriggerPrefix: '/',\n\t\toptions() {\n\t\t\tconst selectedBlockName = getSelectedBlockName();\n\t\t\treturn getInserterItems( getBlockInsertionParentClientId() ).filter(\n\t\t\t\t// Avoid offering to replace the current block with a block of the same type.\n\t\t\t\t( inserterItem ) => selectedBlockName !== inserterItem.name\n\t\t\t);\n\t\t},\n\t\tgetOptionKeywords( inserterItem ) {\n\t\t\tconst { title, keywords = [], category } = inserterItem;\n\t\t\treturn [ category, ...keywords, title ];\n\t\t},\n\t\tgetOptionLabel( inserterItem ) {\n\t\t\tconst { icon, title } = inserterItem;\n\t\t\treturn [\n\t\t\t\t<BlockIcon key=\"icon\" icon={ icon } showColors />,\n\t\t\t\ttitle,\n\t\t\t];\n\t\t},\n\t\tallowContext( before, after ) {\n\t\t\treturn ! ( /\\S/.test( before ) || /\\S/.test( after ) );\n\t\t},\n\t\tgetOptionCompletion( inserterItem ) {\n\t\t\tconst { name, initialAttributes } = inserterItem;\n\t\t\treturn {\n\t\t\t\taction: 'replace',\n\t\t\t\tvalue: createBlock( name, initialAttributes ),\n\t\t\t};\n\t\t},\n\t\tisOptionDisabled( inserterItem ) {\n\t\t\treturn inserterItem.isDisabled;\n\t\t},\n\t};\n}\n\n/**\n * Creates a blocks repeater for replacing the current block with a selected block type.\n *\n * @return {Completer} A blocks completer.\n */\nexport default createBlockCompleter();\n"]}