{"version":3,"sources":["@wordpress/annotations/src/store/actions.js"],"names":["uuid","__experimentalAddAnnotation","blockClientId","richTextIdentifier","range","selector","source","id","action","type","__experimentalRemoveAnnotation","annotationId","__experimentalUpdateAnnotationRange","start","end","__experimentalRemoveAnnotationsBySource"],"mappings":"AAAA;;;AAGA,OAAOA,IAAP,MAAiB,SAAjB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAO,SAASC,2BAAT,OAAwJ;AAAA,MAAhHC,aAAgH,QAAhHA,aAAgH;AAAA,mCAAjGC,kBAAiG;AAAA,MAAjGA,kBAAiG,sCAA5E,IAA4E;AAAA,wBAAtEC,KAAsE;AAAA,MAAtEA,KAAsE,2BAA9D,IAA8D;AAAA,2BAAxDC,QAAwD;AAAA,MAAxDA,QAAwD,8BAA7C,OAA6C;AAAA,yBAApCC,MAAoC;AAAA,MAApCA,MAAoC,4BAA3B,SAA2B;AAAA,qBAAhBC,EAAgB;AAAA,MAAhBA,EAAgB,wBAAXP,IAAI,EAAO;AAC9J,MAAMQ,MAAM,GAAG;AACdC,IAAAA,IAAI,EAAE,gBADQ;AAEdF,IAAAA,EAAE,EAAFA,EAFc;AAGdL,IAAAA,aAAa,EAAbA,aAHc;AAIdC,IAAAA,kBAAkB,EAAlBA,kBAJc;AAKdG,IAAAA,MAAM,EAANA,MALc;AAMdD,IAAAA,QAAQ,EAARA;AANc,GAAf;;AASA,MAAKA,QAAQ,KAAK,OAAlB,EAA4B;AAC3BG,IAAAA,MAAM,CAACJ,KAAP,GAAeA,KAAf;AACA;;AAED,SAAOI,MAAP;AACA;AAED;;;;;;;;AAOA,OAAO,SAASE,8BAAT,CAAyCC,YAAzC,EAAwD;AAC9D,SAAO;AACNF,IAAAA,IAAI,EAAE,mBADA;AAENE,IAAAA,YAAY,EAAZA;AAFM,GAAP;AAIA;AAED;;;;;;;;;;AASA,OAAO,SAASC,mCAAT,CAA8CD,YAA9C,EAA4DE,KAA5D,EAAmEC,GAAnE,EAAyE;AAC/E,SAAO;AACNL,IAAAA,IAAI,EAAE,yBADA;AAENE,IAAAA,YAAY,EAAZA,YAFM;AAGNE,IAAAA,KAAK,EAALA,KAHM;AAINC,IAAAA,GAAG,EAAHA;AAJM,GAAP;AAMA;AAED;;;;;;;;AAOA,OAAO,SAASC,uCAAT,CAAkDT,MAAlD,EAA2D;AACjE,SAAO;AACNG,IAAAA,IAAI,EAAE,0BADA;AAENH,IAAAA,MAAM,EAANA;AAFM,GAAP;AAIA","sourcesContent":["/**\n * External dependencies\n */\nimport uuid from 'uuid/v4';\n\n/**\n * Adds an annotation to a block.\n *\n * The `block` attribute refers to a block ID that needs to be annotated.\n * `isBlockAnnotation` controls whether or not the annotation is a block\n * annotation. The `source` is the source of the annotation, this will be used\n * to identity groups of annotations.\n *\n * The `range` property is only relevant if the selector is 'range'.\n *\n * @param {Object} annotation         The annotation to add.\n * @param {string} blockClientId      The blockClientId to add the annotation to.\n * @param {string} richTextIdentifier Identifier for the RichText instance the annotation applies to.\n * @param {Object} range              The range at which to apply this annotation.\n * @param {number} range.start        The offset where the annotation should start.\n * @param {number} range.end          The offset where the annotation should end.\n * @param {string} [selector=\"range\"] The way to apply this annotation.\n * @param {string} [source=\"default\"] The source that added the annotation.\n * @param {string} [id=uuid()]        The ID the annotation should have.\n *                                    Generates a UUID by default.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalAddAnnotation( { blockClientId, richTextIdentifier = null, range = null, selector = 'range', source = 'default', id = uuid() } ) {\n\tconst action = {\n\t\ttype: 'ANNOTATION_ADD',\n\t\tid,\n\t\tblockClientId,\n\t\trichTextIdentifier,\n\t\tsource,\n\t\tselector,\n\t};\n\n\tif ( selector === 'range' ) {\n\t\taction.range = range;\n\t}\n\n\treturn action;\n}\n\n/**\n * Removes an annotation with a specific ID.\n *\n * @param {string} annotationId The annotation to remove.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalRemoveAnnotation( annotationId ) {\n\treturn {\n\t\ttype: 'ANNOTATION_REMOVE',\n\t\tannotationId,\n\t};\n}\n\n/**\n * Updates the range of an annotation.\n *\n * @param {string} annotationId ID of the annotation to update.\n * @param {number} start The start of the new range.\n * @param {number} end The end of the new range.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalUpdateAnnotationRange( annotationId, start, end ) {\n\treturn {\n\t\ttype: 'ANNOTATION_UPDATE_RANGE',\n\t\tannotationId,\n\t\tstart,\n\t\tend,\n\t};\n}\n\n/**\n * Removes all annotations of a specific source.\n *\n * @param {string} source The source to remove.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalRemoveAnnotationsBySource( source ) {\n\treturn {\n\t\ttype: 'ANNOTATION_REMOVE_SOURCE',\n\t\tsource,\n\t};\n}\n"]}