{"version":3,"sources":["@wordpress/custom-templated-path-webpack-plugin/src/index.js"],"names":["escapeStringRegexp","require","CustomTemplatedPathPlugin","handlers","Object","entries","key","handler","regexp","RegExp","push","compiler","hooks","compilation","tap","mainTemplate","assetPath","path","data","i","length","test","replace","module","exports"],"mappings":";;;;;;;;;;AAAA;;;AAGA,IAAMA,kBAAkB,GAAGC,OAAO,CAAE,sBAAF,CAAlC;AAEA;;;;;;;;IAMMC,yB;;;AACL;;;;;;;;;AASA,qCAAaC,QAAb,EAAwB;AAAA;AACvB,SAAKA,QAAL,GAAgB,EAAhB;;AADuB,eAGSC,MAAM,CAACC,OAAP,CAAgBF,QAAhB,CAHT;;AAGvB,6CAA6D;AAAA;AAAA,UAA/CG,GAA+C;AAAA,UAA1CC,OAA0C;;AAC5D,UAAMC,MAAM,GAAG,IAAIC,MAAJ,cAAmBT,kBAAkB,CAAEM,GAAF,CAArC,UAAoD,IAApD,CAAf;AACA,WAAKH,QAAL,CAAcO,IAAd,CAAoB,CAAEF,MAAF,EAAUD,OAAV,CAApB;AACA;AACD;AAED;;;;;;;;;0BAKOI,Q,EAAW;AAAA;;AACjBA,MAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CAAgC,2BAAhC,EAA6D,UAAED,WAAF,EAAmB;AAC/EA,QAAAA,WAAW,CAACE,YAAZ,CAAyBH,KAAzB,CAA+BI,SAA/B,CAAyCF,GAAzC,CAA8C,2BAA9C,EAA2E,UAAEG,IAAF,EAAQC,IAAR,EAAkB;AAC5F,eAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,KAAI,CAAChB,QAAL,CAAciB,MAAnC,EAA2CD,CAAC,EAA5C,EAAiD;AAAA,gEACpB,KAAI,CAAChB,QAAL,CAAegB,CAAf,CADoB;AAAA,gBACxCX,MADwC;AAAA,gBAChCD,OADgC;;AAEhD,gBAAKC,MAAM,CAACa,IAAP,CAAaJ,IAAb,CAAL,EAA2B;AAC1B,qBAAOA,IAAI,CAACK,OAAL,CAAcd,MAAd,EAAsBD,OAAO,CAAEU,IAAF,EAAQC,IAAR,CAA7B,CAAP;AACA;AACD;;AAED,iBAAOD,IAAP;AACA,SATD;AAUA,OAXD;AAYA;;;;;AAGFM,MAAM,CAACC,OAAP,GAAiBtB,yBAAjB","sourcesContent":["/**\n * External dependencies\n */\nconst escapeStringRegexp = require( 'escape-string-regexp' );\n\n/**\n * Webpack plugin for handling specific template tags in Webpack configuration\n * values like those supported in the base Webpack functionality (e.g. `name`).\n *\n * @see webpack.TemplatedPathPlugin\n */\nclass CustomTemplatedPathPlugin {\n\t/**\n\t * CustomTemplatedPathPlugin constructor. Initializes handlers as a tuple\n\t * set of RegExp, handler, where the regular expression is used in matching\n\t * a Webpack asset path.\n\t *\n\t * @param {Object.<string,Function>} handlers Object keyed by tag to match,\n\t *                                            with function value returning\n\t *                                            replacement string.\n\t */\n\tconstructor( handlers ) {\n\t\tthis.handlers = [];\n\n\t\tfor ( const [ key, handler ] of Object.entries( handlers ) ) {\n\t\t\tconst regexp = new RegExp( `\\\\[${ escapeStringRegexp( key ) }\\\\]`, 'gi' );\n\t\t\tthis.handlers.push( [ regexp, handler ] );\n\t\t}\n\t}\n\n\t/**\n\t * Webpack plugin application logic.\n\t *\n\t * @param {Object} compiler Webpack compiler\n\t */\n\tapply( compiler ) {\n\t\tcompiler.hooks.compilation.tap( 'CustomTemplatedPathPlugin', ( compilation ) => {\n\t\t\tcompilation.mainTemplate.hooks.assetPath.tap( 'CustomTemplatedPathPlugin', ( path, data ) => {\n\t\t\t\tfor ( let i = 0; i < this.handlers.length; i++ ) {\n\t\t\t\t\tconst [ regexp, handler ] = this.handlers[ i ];\n\t\t\t\t\tif ( regexp.test( path ) ) {\n\t\t\t\t\t\treturn path.replace( regexp, handler( path, data ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn path;\n\t\t\t} );\n\t\t} );\n\t}\n}\n\nmodule.exports = CustomTemplatedPathPlugin;\n"]}