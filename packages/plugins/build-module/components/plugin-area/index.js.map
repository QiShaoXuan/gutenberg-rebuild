{"version":3,"sources":["@wordpress/plugins/src/components/plugin-area/index.js"],"names":["map","Component","addAction","removeAction","PluginContextProvider","getPlugins","PluginArea","arguments","setPlugins","bind","state","getCurrentPluginsState","plugins","icon","name","render","Plugin","context","setState","display"],"mappings":";;;;;;;;AAAA;;;AAGA,SAASA,GAAT,QAAoB,QAApB;AAEA;;;;AAGA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,kBAAxC;AAEA;;;;AAGA,SAASC,qBAAT,QAAsC,mBAAtC;AACA,SAASC,UAAT,QAA2B,WAA3B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAkCMC,U;;;;;AACL,wBAAc;AAAA;;AAAA;;AACb,qFAAUC,SAAV;AAEA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AACA,UAAKC,KAAL,GAAa,MAAKC,sBAAL,EAAb;AAJa;AAKb;;;;6CAEwB;AACxB,aAAO;AACNC,QAAAA,OAAO,EAAEZ,GAAG,CAAEK,UAAU,EAAZ,EAAgB,gBAA8B;AAAA,cAA1BQ,IAA0B,QAA1BA,IAA0B;AAAA,cAApBC,IAAoB,QAApBA,IAAoB;AAAA,cAAdC,MAAc,QAAdA,MAAc;AACzD,iBAAO;AACNC,YAAAA,MAAM,EAAED,MADF;AAENE,YAAAA,OAAO,EAAE;AACRH,cAAAA,IAAI,EAAJA,IADQ;AAERD,cAAAA,IAAI,EAAJA;AAFQ;AAFH,WAAP;AAOA,SARW;AADN,OAAP;AAWA;;;wCAEmB;AACnBX,MAAAA,SAAS,CAAE,0BAAF,EAA8B,6CAA9B,EAA6E,KAAKM,UAAlF,CAAT;AACAN,MAAAA,SAAS,CAAE,4BAAF,EAAgC,+CAAhC,EAAiF,KAAKM,UAAtF,CAAT;AACA;;;2CAEsB;AACtBL,MAAAA,YAAY,CAAE,0BAAF,EAA8B,6CAA9B,CAAZ;AACAA,MAAAA,YAAY,CAAE,4BAAF,EAAgC,+CAAhC,CAAZ;AACA;;;iCAEY;AACZ,WAAKe,QAAL,CAAe,KAAKP,sBAApB;AACA;;;6BAEQ;AACR,aACC;AAAK,QAAA,KAAK,EAAG;AAAEQ,UAAAA,OAAO,EAAE;AAAX;AAAb,SACGnB,GAAG,CAAE,KAAKU,KAAL,CAAWE,OAAb,EAAsB;AAAA,YAAIK,OAAJ,SAAIA,OAAJ;AAAA,YAAaD,MAAb,SAAaA,MAAb;AAAA,eAC1B,cAAC,qBAAD;AACC,UAAA,GAAG,EAAGC,OAAO,CAACH,IADf;AAEC,UAAA,KAAK,EAAGG;AAFT,WAIC,cAAC,MAAD,OAJD,CAD0B;AAAA,OAAtB,CADN,CADD;AAYA;;;;EAjDuBhB,S;;AAoDzB,eAAeK,UAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { map } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { addAction, removeAction } from '@wordpress/hooks';\n\n/**\n * Internal dependencies\n */\nimport { PluginContextProvider } from '../plugin-context';\nimport { getPlugins } from '../../api';\n\n/**\n * A component that renders all plugin fills in a hidden div.\n *\n * @example <caption>ES5</caption>\n * ```js\n * // Using ES5 syntax\n * var el = wp.element.createElement;\n * var PluginArea = wp.plugins.PluginArea;\n *\n * function Layout() {\n * \treturn el(\n * \t\t'div',\n * \t\t{},\n * \t\t'Content of the page',\n * \t\tPluginArea\n * \t);\n * }\n * ```\n *\n * @example <caption>ESNext</caption>\n * ```js\n * // Using ESNext syntax\n * const { PluginArea } = wp.plugins;\n *\n * const Layout = () => (\n * \t<div>\n * \t\tContent of the page\n * \t\t<PluginArea />\n * \t</div>\n * );\n * ```\n *\n * @return {WPElement} Plugin area.\n */\nclass PluginArea extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.setPlugins = this.setPlugins.bind( this );\n\t\tthis.state = this.getCurrentPluginsState();\n\t}\n\n\tgetCurrentPluginsState() {\n\t\treturn {\n\t\t\tplugins: map( getPlugins(), ( { icon, name, render } ) => {\n\t\t\t\treturn {\n\t\t\t\t\tPlugin: render,\n\t\t\t\t\tcontext: {\n\t\t\t\t\t\tname,\n\t\t\t\t\t\ticon,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} ),\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\taddAction( 'plugins.pluginRegistered', 'core/plugins/plugin-area/plugins-registered', this.setPlugins );\n\t\taddAction( 'plugins.pluginUnregistered', 'core/plugins/plugin-area/plugins-unregistered', this.setPlugins );\n\t}\n\n\tcomponentWillUnmount() {\n\t\tremoveAction( 'plugins.pluginRegistered', 'core/plugins/plugin-area/plugins-registered' );\n\t\tremoveAction( 'plugins.pluginUnregistered', 'core/plugins/plugin-area/plugins-unregistered' );\n\t}\n\n\tsetPlugins() {\n\t\tthis.setState( this.getCurrentPluginsState );\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={ { display: 'none' } }>\n\t\t\t\t{ map( this.state.plugins, ( { context, Plugin } ) => (\n\t\t\t\t\t<PluginContextProvider\n\t\t\t\t\t\tkey={ context.name }\n\t\t\t\t\t\tvalue={ context }\n\t\t\t\t\t>\n\t\t\t\t\t\t<Plugin />\n\t\t\t\t\t</PluginContextProvider>\n\t\t\t\t) ) }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PluginArea;\n"]}