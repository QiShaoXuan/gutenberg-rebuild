{"version":3,"sources":["@wordpress/block-editor/src/components/alignment-toolbar/index.js"],"names":["DEFAULT_ALIGNMENT_CONTROLS","icon","title","align","AlignmentToolbar","isCollapsed","value","onChange","alignmentControls","applyOrUnset","undefined","activeAlignment","control","map","isActive","onClick","clientId","isLargeViewport","select","getBlockRootClientId","getSettings","hasFixedToolbar"],"mappings":";;;;;;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AAKA;;AAjBA;;;;AAKA;;;;AASA;;;AAKA,IAAMA,0BAA0B,GAAG,CAClC;AACCC,EAAAA,IAAI,EAAE,kBADP;AAECC,EAAAA,KAAK,EAAE,cAAI,iBAAJ,CAFR;AAGCC,EAAAA,KAAK,EAAE;AAHR,CADkC,EAMlC;AACCF,EAAAA,IAAI,EAAE,oBADP;AAECC,EAAAA,KAAK,EAAE,cAAI,mBAAJ,CAFR;AAGCC,EAAAA,KAAK,EAAE;AAHR,CANkC,EAWlC;AACCF,EAAAA,IAAI,EAAE,mBADP;AAECC,EAAAA,KAAK,EAAE,cAAI,kBAAJ,CAFR;AAGCC,EAAAA,KAAK,EAAE;AAHR,CAXkC,CAAnC;;AAkBO,SAASC,gBAAT,OAA8G;AAAA,MAAjFC,WAAiF,QAAjFA,WAAiF;AAAA,MAApEC,KAAoE,QAApEA,KAAoE;AAAA,MAA7DC,QAA6D,QAA7DA,QAA6D;AAAA,mCAAnDC,iBAAmD;AAAA,MAAnDA,iBAAmD,sCAA/BR,0BAA+B;;AACpH,WAASS,YAAT,CAAuBN,KAAvB,EAA+B;AAC9B,WAAO;AAAA,aAAMI,QAAQ,CAAED,KAAK,KAAKH,KAAV,GAAkBO,SAAlB,GAA8BP,KAAhC,CAAd;AAAA,KAAP;AACA;;AAED,MAAMQ,eAAe,GAAG,kBAAMH,iBAAN,EAAyB,UAAEI,OAAF;AAAA,WAAeA,OAAO,CAACT,KAAR,KAAkBG,KAAjC;AAAA,GAAzB,CAAxB;AAEA,SACC,4BAAC,mBAAD;AACC,IAAA,WAAW,EAAGD,WADf;AAEC,IAAA,IAAI,EAAGM,eAAe,GAAGA,eAAe,CAACV,IAAnB,GAA0B,kBAFjD;AAGC,IAAA,KAAK,EAAG,cAAI,uBAAJ,CAHT;AAIC,IAAA,QAAQ,EAAGO,iBAAiB,CAACK,GAAlB,CAAuB,UAAED,OAAF,EAAe;AAAA,UACxCT,KADwC,GAC9BS,OAD8B,CACxCT,KADwC;AAEhD,UAAMW,QAAQ,GAAKR,KAAK,KAAKH,KAA7B;AAEA,6CACIS,OADJ;AAECE,QAAAA,QAAQ,EAARA,QAFD;AAGCC,QAAAA,OAAO,EAAEN,YAAY,CAAEN,KAAF;AAHtB;AAKA,KATU;AAJZ,IADD;AAiBA;;eAEc,sBACd,mCAAsB,iBAAoB;AAAA,MAAhBa,QAAgB,SAAhBA,QAAgB;AACzC,SAAO;AACNA,IAAAA,QAAQ,EAARA;AADM,GAAP;AAGA,CAJD,CADc,EAMd,iCAAmB;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAAnB,CANc,EAOd,sBAAY,UAAEC,MAAF,SAA0D;AAAA,MAA9CF,QAA8C,SAA9CA,QAA8C;AAAA,MAApCC,eAAoC,SAApCA,eAAoC;AAAA,MAAnBZ,WAAmB,SAAnBA,WAAmB;;AAAA,gBACvBa,MAAM,CAAE,mBAAF,CADiB;AAAA,MAC7DC,oBAD6D,WAC7DA,oBAD6D;AAAA,MACvCC,WADuC,WACvCA,WADuC;;AAErE,SAAO;AACNf,IAAAA,WAAW,EAAEA,WAAW,IAAI,CAAEY,eAAjB,IACZ,CAAEG,WAAW,GAAGC,eAAhB,IACAF,oBAAoB,CAAEH,QAAF;AAHf,GAAP;AAMA,CARD,CAPc,EAgBZZ,gBAhBY,C","sourcesContent":["/**\n * External dependencies\n */\nimport { find } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Toolbar } from '@wordpress/components';\nimport { withViewportMatch } from '@wordpress/viewport';\nimport { withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { withBlockEditContext } from '../block-edit/context';\n\nconst DEFAULT_ALIGNMENT_CONTROLS = [\n\t{\n\t\ticon: 'editor-alignleft',\n\t\ttitle: __( 'Align text left' ),\n\t\talign: 'left',\n\t},\n\t{\n\t\ticon: 'editor-aligncenter',\n\t\ttitle: __( 'Align text center' ),\n\t\talign: 'center',\n\t},\n\t{\n\t\ticon: 'editor-alignright',\n\t\ttitle: __( 'Align text right' ),\n\t\talign: 'right',\n\t},\n];\n\nexport function AlignmentToolbar( { isCollapsed, value, onChange, alignmentControls = DEFAULT_ALIGNMENT_CONTROLS } ) {\n\tfunction applyOrUnset( align ) {\n\t\treturn () => onChange( value === align ? undefined : align );\n\t}\n\n\tconst activeAlignment = find( alignmentControls, ( control ) => control.align === value );\n\n\treturn (\n\t\t<Toolbar\n\t\t\tisCollapsed={ isCollapsed }\n\t\t\ticon={ activeAlignment ? activeAlignment.icon : 'editor-alignleft' }\n\t\t\tlabel={ __( 'Change Text Alignment' ) }\n\t\t\tcontrols={ alignmentControls.map( ( control ) => {\n\t\t\t\tconst { align } = control;\n\t\t\t\tconst isActive = ( value === align );\n\n\t\t\t\treturn {\n\t\t\t\t\t...control,\n\t\t\t\t\tisActive,\n\t\t\t\t\tonClick: applyOrUnset( align ),\n\t\t\t\t};\n\t\t\t} ) }\n\t\t/>\n\t);\n}\n\nexport default compose(\n\twithBlockEditContext( ( { clientId } ) => {\n\t\treturn {\n\t\t\tclientId,\n\t\t};\n\t} ),\n\twithViewportMatch( { isLargeViewport: 'medium' } ),\n\twithSelect( ( select, { clientId, isLargeViewport, isCollapsed } ) => {\n\t\tconst { getBlockRootClientId, getSettings } = select( 'core/block-editor' );\n\t\treturn {\n\t\t\tisCollapsed: isCollapsed || ! isLargeViewport || (\n\t\t\t\t! getSettings().hasFixedToolbar &&\n\t\t\t\tgetBlockRootClientId( clientId )\n\t\t\t),\n\t\t};\n\t} ),\n)( AlignmentToolbar );\n"]}