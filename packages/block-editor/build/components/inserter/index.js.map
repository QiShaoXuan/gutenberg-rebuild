{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/index.js"],"names":["defaultRenderToggle","onToggle","disabled","isOpen","Inserter","arguments","bind","renderToggle","renderContent","props","onClose","rootClientId","clientId","isAppender","position","Component","select","hasInserterItems","hasItems"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Dropdown, IconButton } from '@wordpress/components';\nimport { Component } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\nimport { compose, ifCondition } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport InserterMenu from './menu';\n\nconst defaultRenderToggle = ( { onToggle, disabled, isOpen } ) => (\n\t<IconButton\n\t\ticon=\"insert\"\n\t\tlabel={ __( 'Add block' ) }\n\t\tlabelPosition=\"bottom\"\n\t\tonClick={ onToggle }\n\t\tclassName=\"editor-inserter__toggle block-editor-inserter__toggle\"\n\t\taria-haspopup=\"true\"\n\t\taria-expanded={ isOpen }\n\t\tdisabled={ disabled }\n\t/>\n);\n\nclass Inserter extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.onToggle = this.onToggle.bind( this );\n\t\tthis.renderToggle = this.renderToggle.bind( this );\n\t\tthis.renderContent = this.renderContent.bind( this );\n\t}\n\n\tonToggle( isOpen ) {\n\t\tconst { onToggle } = this.props;\n\n\t\t// Surface toggle callback to parent component\n\t\tif ( onToggle ) {\n\t\t\tonToggle( isOpen );\n\t\t}\n\t}\n\n\t/**\n\t * Render callback to display Dropdown toggle element.\n\t *\n\t * @param {Function} options.onToggle Callback to invoke when toggle is\n\t *                                    pressed.\n\t * @param {boolean}  options.isOpen   Whether dropdown is currently open.\n\t *\n\t * @return {WPElement} Dropdown toggle element.\n\t */\n\trenderToggle( { onToggle, isOpen } ) {\n\t\tconst {\n\t\t\tdisabled,\n\t\t\trenderToggle = defaultRenderToggle,\n\t\t} = this.props;\n\n\t\treturn renderToggle( { onToggle, isOpen, disabled } );\n\t}\n\n\t/**\n\t * Render callback to display Dropdown content element.\n\t *\n\t * @param {Function} options.onClose Callback to invoke when dropdown is\n\t *                                   closed.\n\t *\n\t * @return {WPElement} Dropdown content element.\n\t */\n\trenderContent( { onClose } ) {\n\t\tconst { rootClientId, clientId, isAppender } = this.props;\n\n\t\treturn (\n\t\t\t<InserterMenu\n\t\t\t\tonSelect={ onClose }\n\t\t\t\trootClientId={ rootClientId }\n\t\t\t\tclientId={ clientId }\n\t\t\t\tisAppender={ isAppender }\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst { position } = this.props;\n\n\t\treturn (\n\t\t\t<Dropdown\n\t\t\t\tclassName=\"editor-inserter block-editor-inserter\"\n\t\t\t\tcontentClassName=\"editor-inserter__popover block-editor-inserter__popover\"\n\t\t\t\tposition={ position }\n\t\t\t\tonToggle={ this.onToggle }\n\t\t\t\texpandOnMobile\n\t\t\t\theaderTitle={ __( 'Add a block' ) }\n\t\t\t\trenderToggle={ this.renderToggle }\n\t\t\t\trenderContent={ this.renderContent }\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select, { rootClientId } ) => {\n\t\tconst { hasInserterItems } = select( 'core/block-editor' );\n\n\t\treturn {\n\t\t\thasItems: hasInserterItems( rootClientId ),\n\t\t};\n\t} ),\n\tifCondition( ( { hasItems } ) => hasItems ),\n] )( Inserter );\n"]}