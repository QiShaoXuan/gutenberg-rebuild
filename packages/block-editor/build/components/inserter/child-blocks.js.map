{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/child-blocks.js"],"names":["ChildBlocks","rootBlockIcon","rootBlockTitle","items","props","length","select","rootClientId","getBlockType","getBlockName","rootBlockName","rootBlockType","title","icon"],"mappings":";;;;;;;;;;;;;;;AAGA;;AACA;;AAKA;;AACA;;AAVA;;;;AAMA;;;AAMA,SAASA,WAAT,OAA2E;AAAA,MAAnDC,aAAmD,QAAnDA,aAAmD;AAAA,MAApCC,cAAoC,QAApCA,cAAoC;AAAA,MAApBC,KAAoB,QAApBA,KAAoB;AAAA,MAAVC,KAAU;AAC1E,SACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACG,CAAEH,aAAa,IAAIC,cAAnB,KACD;AAAK,IAAA,SAAS,EAAC;AAAf,KACC,4BAAC,kBAAD;AAAW,IAAA,IAAI,EAAGD,aAAlB;AAAkC,IAAA,UAAU;AAA5C,IADD,EAEGC,cAAc,IAAI,wCAAMA,cAAN,CAFrB,CAFF,EAOC,4BAAC,uBAAD;AAAgB,IAAA,KAAK,EAAGC;AAAxB,KAAqCC,KAArC,EAPD,CADD;AAWA;;eAEc,sBACd,0BAAa;AAAA,MAAID,KAAJ,SAAIA,KAAJ;AAAA,SAAiBA,KAAK,IAAIA,KAAK,CAACE,MAAN,GAAe,CAAzC;AAAA,CAAb,CADc,EAEd,sBAAY,UAAEC,MAAF,SAAgC;AAAA,MAApBC,YAAoB,SAApBA,YAAoB;;AAAA,gBAGvCD,MAAM,CAAE,aAAF,CAHiC;AAAA,MAE1CE,YAF0C,WAE1CA,YAF0C;;AAAA,iBAMvCF,MAAM,CAAE,mBAAF,CANiC;AAAA,MAK1CG,YAL0C,YAK1CA,YAL0C;;AAO3C,MAAMC,aAAa,GAAGD,YAAY,CAAEF,YAAF,CAAlC;AACA,MAAMI,aAAa,GAAGH,YAAY,CAAEE,aAAF,CAAlC;AACA,SAAO;AACNR,IAAAA,cAAc,EAAES,aAAa,IAAIA,aAAa,CAACC,KADzC;AAENX,IAAAA,aAAa,EAAEU,aAAa,IAAIA,aAAa,CAACE;AAFxC,GAAP;AAIA,CAbD,CAFc,EAgBZb,WAhBY,C","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { withSelect } from '@wordpress/data';\nimport { ifCondition, compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport BlockTypesList from '../block-types-list';\nimport BlockIcon from '../block-icon';\n\nfunction ChildBlocks( { rootBlockIcon, rootBlockTitle, items, ...props } ) {\n\treturn (\n\t\t<div className=\"editor-inserter__child-blocks block-editor-inserter__child-blocks\">\n\t\t\t{ ( rootBlockIcon || rootBlockTitle ) && (\n\t\t\t\t<div className=\"editor-inserter__parent-block-header block-editor-inserter__parent-block-header\">\n\t\t\t\t\t<BlockIcon icon={ rootBlockIcon } showColors />\n\t\t\t\t\t{ rootBlockTitle && <h2>{ rootBlockTitle }</h2> }\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<BlockTypesList items={ items } { ...props } />\n\t\t</div>\n\t);\n}\n\nexport default compose(\n\tifCondition( ( { items } ) => items && items.length > 0 ),\n\twithSelect( ( select, { rootClientId } ) => {\n\t\tconst {\n\t\t\tgetBlockType,\n\t\t} = select( 'core/blocks' );\n\t\tconst {\n\t\t\tgetBlockName,\n\t\t} = select( 'core/block-editor' );\n\t\tconst rootBlockName = getBlockName( rootClientId );\n\t\tconst rootBlockType = getBlockType( rootBlockName );\n\t\treturn {\n\t\t\trootBlockTitle: rootBlockType && rootBlockType.title,\n\t\t\trootBlockIcon: rootBlockType && rootBlockType.icon,\n\t\t};\n\t} ),\n)( ChildBlocks );\n"]}