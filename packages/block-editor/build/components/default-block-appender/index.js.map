{"version":3,"sources":["@wordpress/block-editor/src/components/default-block-appender/index.js"],"names":["DefaultBlockAppender","isLocked","isVisible","onAppend","showPrompt","placeholder","rootClientId","hovered","setState","value","select","ownProps","getBlockCount","getBlockName","isBlockValid","getSettings","getTemplateLock","isEmpty","isLastBlockDefault","lastBlockClientId","isLastBlockValid","bodyPlaceholder","dispatch","insertDefaultBlock","startTyping","undefined"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport TextareaAutosize from 'react-autosize-textarea';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { compose, withState } from '@wordpress/compose';\nimport { getDefaultBlockName } from '@wordpress/blocks';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { withSelect, withDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport BlockDropZone from '../block-drop-zone';\nimport InserterWithShortcuts from '../inserter-with-shortcuts';\nimport Inserter from '../inserter';\n\nexport function DefaultBlockAppender( {\n\tisLocked,\n\tisVisible,\n\tonAppend,\n\tshowPrompt,\n\tplaceholder,\n\trootClientId,\n\thovered,\n\tsetState,\n} ) {\n\tif ( isLocked || ! isVisible ) {\n\t\treturn null;\n\t}\n\n\tconst value = decodeEntities( placeholder ) || __( 'Start writing or type / to choose a block' );\n\n\t// The appender \"button\" is in-fact a text field so as to support\n\t// transitions by WritingFlow occurring by arrow key press. WritingFlow\n\t// only supports tab transitions into text fields and to the block focus\n\t// boundary.\n\t//\n\t// See: https://github.com/WordPress/gutenberg/issues/4829#issuecomment-374213658\n\t//\n\t// If it were ever to be made to be a proper `button` element, it is\n\t// important to note that `onFocus` alone would not be sufficient to\n\t// capture click events, notably in Firefox.\n\t//\n\t// See: https://gist.github.com/cvrebert/68659d0333a578d75372\n\n\t// The wp-block className is important for editor styles.\n\n\treturn (\n\t\t<div\n\t\t\tdata-root-client-id={ rootClientId || '' }\n\t\t\tclassName=\"wp-block editor-default-block-appender block-editor-default-block-appender\"\n\t\t\tonMouseEnter={ () => setState( { hovered: true } ) }\n\t\t\tonMouseLeave={ () => setState( { hovered: false } ) }\n\t\t>\n\t\t\t<BlockDropZone rootClientId={ rootClientId } />\n\t\t\t<TextareaAutosize\n\t\t\t\trole=\"button\"\n\t\t\t\taria-label={ __( 'Add block' ) }\n\t\t\t\tclassName=\"editor-default-block-appender__content block-editor-default-block-appender__content\"\n\t\t\t\treadOnly\n\t\t\t\tonFocus={ onAppend }\n\t\t\t\tvalue={ showPrompt ? value : '' }\n\t\t\t/>\n\t\t\t{ hovered && <InserterWithShortcuts rootClientId={ rootClientId } /> }\n\t\t\t<Inserter rootClientId={ rootClientId } position=\"top right\" isAppender />\n\t\t</div>\n\t);\n}\nexport default compose(\n\twithState( { hovered: false } ),\n\twithSelect( ( select, ownProps ) => {\n\t\tconst { getBlockCount, getBlockName, isBlockValid, getSettings, getTemplateLock } = select( 'core/block-editor' );\n\n\t\tconst isEmpty = ! getBlockCount( ownProps.rootClientId );\n\t\tconst isLastBlockDefault = getBlockName( ownProps.lastBlockClientId ) === getDefaultBlockName();\n\t\tconst isLastBlockValid = isBlockValid( ownProps.lastBlockClientId );\n\t\tconst { bodyPlaceholder } = getSettings();\n\n\t\treturn {\n\t\t\tisVisible: isEmpty || ! isLastBlockDefault || ! isLastBlockValid,\n\t\t\tshowPrompt: isEmpty,\n\t\t\tisLocked: !! getTemplateLock( ownProps.rootClientId ),\n\t\t\tplaceholder: bodyPlaceholder,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps ) => {\n\t\tconst {\n\t\t\tinsertDefaultBlock,\n\t\t\tstartTyping,\n\t\t} = dispatch( 'core/block-editor' );\n\n\t\treturn {\n\t\t\tonAppend() {\n\t\t\t\tconst { rootClientId } = ownProps;\n\n\t\t\t\tinsertDefaultBlock( undefined, rootClientId );\n\t\t\t\tstartTyping();\n\t\t\t},\n\t\t};\n\t} ),\n)( DefaultBlockAppender );\n"]}