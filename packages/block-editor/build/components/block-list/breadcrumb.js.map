{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/breadcrumb.js"],"names":["BlockBreadcrumb","arguments","state","isFocused","onFocus","bind","onBlur","event","setState","stopPropagation","props","clientId","rootClientId","Component","select","ownProps","getBlockRootClientId"],"mappings":";;;;;;;;;AAGA;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AAKA;;AAXA;;;;AAQA;;;;AAKA;;;;;;;;;IASaA,e;;;;;AACZ,6BAAc;AAAA;;AAAA;AACb,sHAAUC,SAAV;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAE;AADC,KAAb;AAGA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,mFAAf;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,mFAAd;AANa;AAOb;;;;4BAEQE,K,EAAQ;AAChB,WAAKC,QAAL,CAAe;AACdL,QAAAA,SAAS,EAAE;AADG,OAAf,EADgB,CAKhB;AACA;AACA;;AACAI,MAAAA,KAAK,CAACE,eAAN;AACA;;;6BAEQ;AACR,WAAKD,QAAL,CAAe;AACdL,QAAAA,SAAS,EAAE;AADG,OAAf;AAGA;;;6BAEQ;AAAA,wBAC2B,KAAKO,KADhC;AAAA,UACAC,QADA,eACAA,QADA;AAAA,UACUC,YADV,eACUA,YADV;AAGR,aACC;AAAK,QAAA,SAAS,EAAG;AAAjB,SACC,4BAAC,mBAAD,QACGA,YAAY,IACb,4BAAC,iBAAD,QACC,4BAAC,mBAAD;AAAY,QAAA,QAAQ,EAAGA;AAAvB,QADD,EAEC;AAAM,QAAA,SAAS,EAAC;AAAhB,QAFD,CAFF,EAOC,4BAAC,mBAAD;AAAY,QAAA,QAAQ,EAAGD;AAAvB,QAPD,CADD,CADD;AAaA;;;EA3CmCE,kB;;;;eA8CtB,sBAAS,CACvB,sBAAY,UAAEC,MAAF,EAAUC,QAAV,EAAwB;AAAA,gBACFD,MAAM,CAAE,mBAAF,CADJ;AAAA,MAC3BE,oBAD2B,WAC3BA,oBAD2B;;AAAA,MAE3BL,QAF2B,GAEdI,QAFc,CAE3BJ,QAF2B;AAInC,SAAO;AACNC,IAAAA,YAAY,EAAEI,oBAAoB,CAAEL,QAAF;AAD5B,GAAP;AAGA,CAPD,CADuB,CAAT,EASVX,eATU,C","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Component, Fragment } from '@wordpress/element';\nimport { Toolbar } from '@wordpress/components';\nimport { withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport BlockTitle from '../block-title';\n\n/**\n * Block breadcrumb component, displaying the label of the block. If the block\n * descends from a root block, a button is displayed enabling the user to select\n * the root block.\n *\n * @param {string}   props.clientId        Client ID of block.\n * @param {string}   props.rootClientId    Client ID of block's root.\n * @param {Function} props.selectRootBlock Callback to select root block.\n */\nexport class BlockBreadcrumb extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.state = {\n\t\t\tisFocused: false,\n\t\t};\n\t\tthis.onFocus = this.onFocus.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t}\n\n\tonFocus( event ) {\n\t\tthis.setState( {\n\t\t\tisFocused: true,\n\t\t} );\n\n\t\t// This is used for improved interoperability\n\t\t// with the block's `onFocus` handler which selects the block, thus conflicting\n\t\t// with the intention to select the root block.\n\t\tevent.stopPropagation();\n\t}\n\n\tonBlur() {\n\t\tthis.setState( {\n\t\t\tisFocused: false,\n\t\t} );\n\t}\n\n\trender() {\n\t\tconst { clientId, rootClientId } = this.props;\n\n\t\treturn (\n\t\t\t<div className={ 'editor-block-list__breadcrumb block-editor-block-list__breadcrumb' }>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t{ rootClientId && (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<BlockTitle clientId={ rootClientId } />\n\t\t\t\t\t\t\t<span className=\"editor-block-list__descendant-arrow block-editor-block-list__descendant-arrow\" />\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t) }\n\t\t\t\t\t<BlockTitle clientId={ clientId } />\n\t\t\t\t</Toolbar>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select, ownProps ) => {\n\t\tconst { getBlockRootClientId } = select( 'core/block-editor' );\n\t\tconst { clientId } = ownProps;\n\n\t\treturn {\n\t\t\trootClientId: getBlockRootClientId( clientId ),\n\t\t};\n\t} ),\n] )( BlockBreadcrumb );\n"]}