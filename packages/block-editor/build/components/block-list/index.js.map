{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/index.js"],"names":["forceSyncUpdates","WrappedComponent","props","BlockList","onSelectionStart","bind","onSelectionEnd","setBlockRef","setLastClientY","onPointerMove","onScroll","clientY","lastClientY","nodes","window","addEventListener","removeEventListener","node","clientId","isMultiSelecting","onStartMultiSelect","blockContentBoundaries","selectionAtStart","getBoundingClientRect","top","bottom","y","key","coordMapKeys","coordY","onSelectionChange","coordMap","isSelectionEnabled","boundaries","clientIdToCoordMap","Object","values","onMultiSelect","selectionStart","selectionEnd","isAtStart","cancel","onStopMultiSelect","blockClientIds","rootClientId","isDraggable","selectedBlockClientId","multiSelectedBlockClientIds","hasMultiSelection","blockIndex","isBlockInSelection","includes","length","Component","select","ownProps","getBlockOrder","getMultiSelectedBlocksStartClientId","getMultiSelectedBlocksEndClientId","getSelectedBlockClientId","getMultiSelectedBlockClientIds","dispatch","startMultiSelect","stopMultiSelect","multiSelect"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tfindLast,\n\tmap,\n\tinvert,\n\tmapValues,\n\tsortBy,\n\tthrottle,\n} from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport {\n\twithSelect,\n\twithDispatch,\n\t__experimentalAsyncModeProvider as AsyncModeProvider,\n} from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport BlockListBlock from './block';\nimport BlockListAppender from '../block-list-appender';\nimport { getBlockDOMNode } from '../../utils/dom';\n\nconst forceSyncUpdates = ( WrappedComponent ) => ( props ) => {\n\treturn (\n\t\t<AsyncModeProvider value={ false }>\n\t\t\t<WrappedComponent { ...props } />\n\t\t</AsyncModeProvider>\n\t);\n};\nclass BlockList extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.onSelectionStart = this.onSelectionStart.bind( this );\n\t\tthis.onSelectionEnd = this.onSelectionEnd.bind( this );\n\t\tthis.setBlockRef = this.setBlockRef.bind( this );\n\t\tthis.setLastClientY = this.setLastClientY.bind( this );\n\t\tthis.onPointerMove = throttle( this.onPointerMove.bind( this ), 100 );\n\t\t// Browser does not fire `*move` event when the pointer position changes\n\t\t// relative to the document, so fire it with the last known position.\n\t\tthis.onScroll = () => this.onPointerMove( { clientY: this.lastClientY } );\n\n\t\tthis.lastClientY = 0;\n\t\tthis.nodes = {};\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener( 'mousemove', this.setLastClientY );\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener( 'mousemove', this.setLastClientY );\n\t}\n\n\tsetLastClientY( { clientY } ) {\n\t\tthis.lastClientY = clientY;\n\t}\n\n\tsetBlockRef( node, clientId ) {\n\t\tif ( node === null ) {\n\t\t\tdelete this.nodes[ clientId ];\n\t\t} else {\n\t\t\tthis.nodes = {\n\t\t\t\t...this.nodes,\n\t\t\t\t[ clientId ]: node,\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Handles a pointer move event to update the extent of the current cursor\n\t * multi-selection.\n\t *\n\t * @param {MouseEvent} event A mousemove event object.\n\t *\n\t * @return {void}\n\t */\n\tonPointerMove( { clientY } ) {\n\t\t// We don't start multi-selection until the mouse starts moving, so as\n\t\t// to avoid dispatching multi-selection actions on an in-place click.\n\t\tif ( ! this.props.isMultiSelecting ) {\n\t\t\tthis.props.onStartMultiSelect();\n\t\t}\n\n\t\tconst blockContentBoundaries = getBlockDOMNode( this.selectionAtStart ).getBoundingClientRect();\n\n\t\t// prevent multi-selection from triggering when the selected block is a float\n\t\t// and the cursor is still between the top and the bottom of the block.\n\t\tif ( clientY >= blockContentBoundaries.top && clientY <= blockContentBoundaries.bottom ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst y = clientY - blockContentBoundaries.top;\n\t\tconst key = findLast( this.coordMapKeys, ( coordY ) => coordY < y );\n\n\t\tthis.onSelectionChange( this.coordMap[ key ] );\n\t}\n\n\t/**\n\t * Binds event handlers to the document for tracking a pending multi-select\n\t * in response to a mousedown event occurring in a rendered block.\n\t *\n\t * @param {string} clientId Client ID of block where mousedown occurred.\n\t *\n\t * @return {void}\n\t */\n\tonSelectionStart( clientId ) {\n\t\tif ( ! this.props.isSelectionEnabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst boundaries = this.nodes[ clientId ].getBoundingClientRect();\n\n\t\t// Create a clientId to Y coÃ¶rdinate map.\n\t\tconst clientIdToCoordMap = mapValues( this.nodes, ( node ) =>\n\t\t\tnode.getBoundingClientRect().top - boundaries.top );\n\n\t\t// Cache a Y coÃ¶rdinate to clientId map for use in `onPointerMove`.\n\t\tthis.coordMap = invert( clientIdToCoordMap );\n\t\t// Cache an array of the Y coÃ¶rdinates for use in `onPointerMove`.\n\t\t// Sort the coÃ¶rdinates, as `this.nodes` will not necessarily reflect\n\t\t// the current block sequence.\n\t\tthis.coordMapKeys = sortBy( Object.values( clientIdToCoordMap ) );\n\t\tthis.selectionAtStart = clientId;\n\n\t\twindow.addEventListener( 'mousemove', this.onPointerMove );\n\t\t// Capture scroll on all elements.\n\t\twindow.addEventListener( 'scroll', this.onScroll, true );\n\t\twindow.addEventListener( 'mouseup', this.onSelectionEnd );\n\t}\n\n\t/**\n\t * Handles multi-selection changes in response to pointer move.\n\t *\n\t * @param {string} clientId Client ID of block under cursor in multi-select\n\t *                          drag.\n\t */\n\tonSelectionChange( clientId ) {\n\t\tconst { onMultiSelect, selectionStart, selectionEnd } = this.props;\n\t\tconst { selectionAtStart } = this;\n\t\tconst isAtStart = selectionAtStart === clientId;\n\n\t\tif ( ! selectionAtStart || ! this.props.isSelectionEnabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If multi-selecting and cursor extent returns to the start of\n\t\t// selection, cancel multi-select.\n\t\tif ( isAtStart && selectionStart ) {\n\t\t\tonMultiSelect( null, null );\n\t\t}\n\n\t\t// Expand multi-selection to block under cursor.\n\t\tif ( ! isAtStart && selectionEnd !== clientId ) {\n\t\t\tonMultiSelect( selectionAtStart, clientId );\n\t\t}\n\t}\n\n\t/**\n\t * Handles a mouseup event to end the current cursor multi-selection.\n\t *\n\t * @return {void}\n\t */\n\tonSelectionEnd() {\n\t\t// Cancel throttled calls.\n\t\tthis.onPointerMove.cancel();\n\n\t\tdelete this.coordMap;\n\t\tdelete this.coordMapKeys;\n\t\tdelete this.selectionAtStart;\n\n\t\twindow.removeEventListener( 'mousemove', this.onPointerMove );\n\t\twindow.removeEventListener( 'scroll', this.onScroll, true );\n\t\twindow.removeEventListener( 'mouseup', this.onSelectionEnd );\n\n\t\t// We may or may not be in a multi-selection when mouseup occurs (e.g.\n\t\t// an in-place mouse click), so only trigger stop if multi-selecting.\n\t\tif ( this.props.isMultiSelecting ) {\n\t\t\tthis.props.onStopMultiSelect();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tblockClientIds,\n\t\t\trootClientId,\n\t\t\tisDraggable,\n\t\t\tselectedBlockClientId,\n\t\t\tmultiSelectedBlockClientIds,\n\t\t\thasMultiSelection,\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"editor-block-list__layout block-editor-block-list__layout\">\n\t\t\t\t{ map( blockClientIds, ( clientId, blockIndex ) => {\n\t\t\t\t\tconst isBlockInSelection = hasMultiSelection ?\n\t\t\t\t\t\tmultiSelectedBlockClientIds.includes( clientId ) :\n\t\t\t\t\t\tselectedBlockClientId === clientId;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<AsyncModeProvider\n\t\t\t\t\t\t\tkey={ 'block-' + clientId }\n\t\t\t\t\t\t\tvalue={ ! isBlockInSelection }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<BlockListBlock\n\t\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t\t\tblockRef={ this.setBlockRef }\n\t\t\t\t\t\t\t\tonSelectionStart={ this.onSelectionStart }\n\t\t\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t\t\t\tisFirst={ blockIndex === 0 }\n\t\t\t\t\t\t\t\tisLast={ blockIndex === blockClientIds.length - 1 }\n\t\t\t\t\t\t\t\tisDraggable={ isDraggable }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</AsyncModeProvider>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t\t<BlockListAppender rootClientId={ rootClientId } />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\t// This component needs to always be synchronous\n\t// as it's the one changing the async mode\n\t// depending on the block selection.\n\tforceSyncUpdates,\n\twithSelect( ( select, ownProps ) => {\n\t\tconst {\n\t\t\tgetBlockOrder,\n\t\t\tisSelectionEnabled,\n\t\t\tisMultiSelecting,\n\t\t\tgetMultiSelectedBlocksStartClientId,\n\t\t\tgetMultiSelectedBlocksEndClientId,\n\t\t\tgetSelectedBlockClientId,\n\t\t\tgetMultiSelectedBlockClientIds,\n\t\t\thasMultiSelection,\n\t\t} = select( 'core/block-editor' );\n\t\tconst { rootClientId } = ownProps;\n\n\t\treturn {\n\t\t\tblockClientIds: getBlockOrder( rootClientId ),\n\t\t\tselectionStart: getMultiSelectedBlocksStartClientId(),\n\t\t\tselectionEnd: getMultiSelectedBlocksEndClientId(),\n\t\t\tisSelectionEnabled: isSelectionEnabled(),\n\t\t\tisMultiSelecting: isMultiSelecting(),\n\t\t\tselectedBlockClientId: getSelectedBlockClientId(),\n\t\t\tmultiSelectedBlockClientIds: getMultiSelectedBlockClientIds(),\n\t\t\thasMultiSelection: hasMultiSelection(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst {\n\t\t\tstartMultiSelect,\n\t\t\tstopMultiSelect,\n\t\t\tmultiSelect,\n\t\t} = dispatch( 'core/block-editor' );\n\n\t\treturn {\n\t\t\tonStartMultiSelect: startMultiSelect,\n\t\t\tonStopMultiSelect: stopMultiSelect,\n\t\t\tonMultiSelect: multiSelect,\n\t\t};\n\t} ),\n] )( BlockList );\n"]}