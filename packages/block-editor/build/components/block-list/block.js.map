{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/block.js"],"names":["BlockListBlock","arguments","setBlockListRef","bind","bindBlockNode","setAttributes","maybeHover","forceFocusedContextualToolbar","hideHoverEffects","onFocus","preventDrag","onPointerDown","deleteOrInsertAfterWrapper","onBlockError","onTouchStart","onClick","onDragStart","onDragEnd","selectOnOpen","hadTouchStart","state","error","dragging","isHovered","isForcingContextualToolbar","props","isSelected","focusTabbable","prevProps","isTypingWithinBlock","isFirstMultiSelected","wrapperNode","focus","node","blockRef","clientId","forceUpdate","ignoreInnerBlocks","initialPosition","contains","document","activeElement","textInputs","tabbable","find","filter","isTextField","isReverse","target","last","first","attributes","name","onChange","type","metaAttributes","result","value","key","meta","onMetaChange","isPartOfMultiSelection","setState","onSelect","event","preventDefault","button","shiftKey","onShiftSelection","onSelectionStart","keyCode","isLocked","ENTER","onInsertDefaultBlockAfter","BACKSPACE","DELETE","onRemove","open","hoverArea","mode","isFocusMode","hasFixedToolbar","isFirst","isLast","rootClientId","isCaretWithinFormattedText","isEmptyDefaultBlock","isMovable","isParentOfSelectedBlock","isDraggable","className","isValid","blockType","blockLabel","title","isUnregisteredBlock","showEmptyBlockSideInserter","shouldAppearSelected","shouldAppearHovered","shouldRenderMovers","shouldShowBreadcrumb","shouldShowContextualToolbar","shouldShowMobileToolbar","shouldShowInsertionPoint","wrapperClassName","onReplace","wrapperProps","getEditWrapperProps","blockElementId","blockEdit","undefined","onInsertBlocksAfter","onMerge","isSelectionEnabled","toggleSelection","display","Component","applyWithSelect","select","isLargeViewport","isBlockSelected","isAncestorMultiSelected","isBlockMultiSelected","isFirstMultiSelectedBlock","isTyping","getBlockMode","getSelectedBlocksInitialCaretPosition","getSettings","hasSelectedInnerBlock","getTemplateLock","__unstableGetBlockWithoutInnerBlocks","block","focusMode","templateLock","applyWithDispatch","dispatch","ownProps","updateBlockAttributes","selectBlock","multiSelect","insertBlocks","insertDefaultBlock","removeBlock","mergeBlocks","replaceBlocks","onInsertBlocks","blocks","index","getBlockIndex","forward","getPreviousBlockClientId","getNextBlockClientId","nextBlockClientId","previousBlockClientId","updatedMeta","onChangeMeta","__experimentalMetaSource","getBlockSelectionStart","selectionEnabled","pure"],"mappings":";;;;;;;;;AASA;;;;;;;;;;;;;;;;;;AANA;;AACA;;AAMA;;AAMA;;AACA;;AAOA;;AACA;;AACA;;AACA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAjDA;;;;AAMA;;;;AAwBA;;;IAqBaA,c;;;;;AACZ,4BAAc;AAAA;;AAAA;AACb,qHAAUC,SAAV;AAEA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,mFAAvB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,mFAArB;AACA,UAAKE,aAAL,GAAqB,MAAKA,aAAL,CAAmBF,IAAnB,mFAArB;AACA,UAAKG,UAAL,GAAkB,MAAKA,UAAL,CAAgBH,IAAhB,mFAAlB;AACA,UAAKI,6BAAL,GAAqC,MAAKA,6BAAL,CAAmCJ,IAAnC,mFAArC;AACA,UAAKK,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBL,IAAtB,mFAAxB;AACA,UAAKM,OAAL,GAAe,MAAKA,OAAL,CAAaN,IAAb,mFAAf;AACA,UAAKO,WAAL,GAAmB,MAAKA,WAAL,CAAiBP,IAAjB,mFAAnB;AACA,UAAKQ,aAAL,GAAqB,MAAKA,aAAL,CAAmBR,IAAnB,mFAArB;AACA,UAAKS,0BAAL,GAAkC,MAAKA,0BAAL,CAAgCT,IAAhC,mFAAlC;AACA,UAAKU,YAAL,GAAoB,MAAKA,YAAL,CAAkBV,IAAlB,mFAApB;AACA,UAAKW,YAAL,GAAoB,MAAKA,YAAL,CAAkBX,IAAlB,mFAApB;AACA,UAAKY,OAAL,GAAe,MAAKA,OAAL,CAAaZ,IAAb,mFAAf;AACA,UAAKa,WAAL,GAAmB,MAAKA,WAAL,CAAiBb,IAAjB,mFAAnB;AACA,UAAKc,SAAL,GAAiB,MAAKA,SAAL,CAAed,IAAf,mFAAjB;AACA,UAAKe,YAAL,GAAoB,MAAKA,YAAL,CAAkBf,IAAlB,mFAApB;AACA,UAAKgB,aAAL,GAAqB,KAArB;AAEA,UAAKC,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE,IADK;AAEZC,MAAAA,QAAQ,EAAE,KAFE;AAGZC,MAAAA,SAAS,EAAE;AAHC,KAAb;AAKA,UAAKC,0BAAL,GAAkC,KAAlC;AA1Ba;AA2Bb;;;;wCAEmB;AACnB,UAAK,KAAKC,KAAL,CAAWC,UAAhB,EAA6B;AAC5B,aAAKC,aAAL;AACA;AACD;;;uCAEmBC,S,EAAY;AAC/B,UAAK,KAAKJ,0BAAV,EAAuC;AACtC;AACA;AACA,aAAKA,0BAAL,GAAkC,KAAlC;AACA;;AACD,UAAK,KAAKC,KAAL,CAAWI,mBAAX,IAAkC,KAAKJ,KAAL,CAAWC,UAAlD,EAA+D;AAC9D,aAAKlB,gBAAL;AACA;;AAED,UAAK,KAAKiB,KAAL,CAAWC,UAAX,IAAyB,CAAEE,SAAS,CAACF,UAA1C,EAAuD;AACtD,aAAKC,aAAL,CAAoB,IAApB;AACA,OAZ8B,CAc/B;AACA;AACA;;;AACA,UAAK,KAAKF,KAAL,CAAWK,oBAAX,IAAmC,CAAEF,SAAS,CAACE,oBAApD,EAA2E;AAC1E,aAAKC,WAAL,CAAiBC,KAAjB;AACA;AACD;;;oCAEgBC,I,EAAO;AACvB,WAAKF,WAAL,GAAmBE,IAAnB;AACA,WAAKR,KAAL,CAAWS,QAAX,CAAqBD,IAArB,EAA2B,KAAKR,KAAL,CAAWU,QAAtC,EAFuB,CAIvB;AACA;AACA;;AACA,WAAKC,WAAL;AACA;;;kCAEcH,I,EAAO;AACrB,WAAKA,IAAL,GAAYA,IAAZ;AACA;AAED;;;;;;;;kCAKeI,iB,EAAoB;AAAA;;AAAA,UAC1BC,eAD0B,GACN,KAAKb,KADC,CAC1Ba,eAD0B,EAGlC;AACA;AACA;AACA;;AACA,UAAK,KAAKP,WAAL,CAAiBQ,QAAjB,CAA2BC,QAAQ,CAACC,aAApC,CAAL,EAA2D;AAC1D;AACA,OATiC,CAWlC;;;AACA,UAAMC,UAAU,GAAGV,WAAMW,QAAN,CACjBC,IADiB,CACX,KAAKX,IADM,EAEjBY,MAFiB,CAETC,gBAFS,EAGlB;AAHkB,OAIjBD,MAJiB,CAIT,UAAEZ,IAAF;AAAA,eAAY,CAAEI,iBAAF,IAAuB,6BAAmB,MAAI,CAACJ,IAAxB,EAA8BA,IAA9B,CAAnC;AAAA,OAJS,CAAnB,CAZkC,CAkBlC;AACA;;;AACA,UAAMc,SAAS,GAAG,CAAC,CAAD,KAAOT,eAAzB;AACA,UAAMU,MAAM,GAAG,CAAED,SAAS,GAAGE,YAAH,GAAUC,aAArB,EAA8BR,UAA9B,CAAf;;AAEA,UAAK,CAAEM,MAAP,EAAgB;AACf,aAAKjB,WAAL,CAAiBC,KAAjB;AACA;AACA;;AAEDgB,MAAAA,MAAM,CAAChB,KAAP,GA5BkC,CA8BlC;;AACA,UAAKe,SAAL,EAAiB;AAChB,6CAA4BC,MAA5B,EAAoC,IAApC;AACA,2CAA0BA,MAA1B,EAAkC,IAAlC;AACA;AACD;;;kCAEcG,U,EAAa;AAAA,wBACU,KAAK1B,KADf;AAAA,UACnBU,QADmB,eACnBA,QADmB;AAAA,UACTiB,IADS,eACTA,IADS;AAAA,UACHC,QADG,eACHA,QADG;AAE3B,UAAMC,IAAI,GAAG,0BAAcF,IAAd,CAAb;AACAC,MAAAA,QAAQ,CAAElB,QAAF,EAAYgB,UAAZ,CAAR;AAEA,UAAMI,cAAc,GAAG,oBACtBJ,UADsB,EAEtB,UAAEK,MAAF,EAAUC,KAAV,EAAiBC,GAAjB,EAA0B;AACzB,YAAK,iBAAKJ,IAAL,EAAW,CAAE,YAAF,EAAgBI,GAAhB,EAAqB,QAArB,CAAX,MAAiD,MAAtD,EAA+D;AAC9DF,UAAAA,MAAM,CAAEF,IAAI,CAACH,UAAL,CAAiBO,GAAjB,EAAuBC,IAAzB,CAAN,GAAwCF,KAAxC;AACA;;AAED,eAAOD,MAAP;AACA,OARqB,EAStB,EATsB,CAAvB;;AAYA,UAAK,kBAAMD,cAAN,CAAL,EAA8B;AAC7B,aAAK9B,KAAL,CAAWmC,YAAX,CAAyBL,cAAzB;AACA;AACD;;;mCAEc;AACd;AACA,WAAKpC,aAAL,GAAqB,IAArB;AACA;;;8BAES;AACT;AACA;AACA,WAAKA,aAAL,GAAqB,KAArB;AACA;AAED;;;;;;;;;;;;;iCAUa;AAAA,yBACmC,KAAKM,KADxC;AAAA,UACJoC,sBADI,gBACJA,sBADI;AAAA,UACoBnC,UADpB,gBACoBA,UADpB;AAAA,UAEJH,SAFI,GAEU,KAAKH,KAFf,CAEJG,SAFI;;AAIZ,UACCA,SAAS,IACTsC,sBADA,IAEAnC,UAFA,IAGA,KAAKP,aAJN,EAKE;AACD;AACA;;AAED,WAAK2C,QAAL,CAAe;AAAEvC,QAAAA,SAAS,EAAE;AAAb,OAAf;AACA;AAED;;;;;;;;uCAKmB;AAClB,UAAK,KAAKH,KAAL,CAAWG,SAAhB,EAA4B;AAC3B,aAAKuC,QAAL,CAAe;AAAEvC,UAAAA,SAAS,EAAE;AAAb,SAAf;AACA;AACD;AAED;;;;;;;;;;8BAOU;AACT,UAAK,CAAE,KAAKE,KAAL,CAAWC,UAAb,IAA2B,CAAE,KAAKD,KAAL,CAAWoC,sBAA7C,EAAsE;AACrE,aAAKpC,KAAL,CAAWsC,QAAX;AACA;AACD;AAED;;;;;;;;;;;gCAQaC,K,EAAQ;AACpBA,MAAAA,KAAK,CAACC,cAAN;AACA;AAED;;;;;;;;;;kCAOeD,K,EAAQ;AACtB;AACA;AACA,UAAKA,KAAK,CAACE,MAAN,KAAiB,CAAtB,EAA0B;AACzB;AACA;;AAED,UAAKF,KAAK,CAACG,QAAX,EAAsB;AACrB,YAAK,CAAE,KAAK1C,KAAL,CAAWC,UAAlB,EAA+B;AAC9B,eAAKD,KAAL,CAAW2C,gBAAX;AACAJ,UAAAA,KAAK,CAACC,cAAN;AACA;AACD,OALD,MAKO;AACN,aAAKxC,KAAL,CAAW4C,gBAAX,CAA6B,KAAK5C,KAAL,CAAWU,QAAxC,EADM,CAGN;AACA;AACA;AACA;AACA;;AACA,YAAK,KAAKV,KAAL,CAAWoC,sBAAhB,EAAyC;AACxC,eAAKpC,KAAL,CAAWsC,QAAX;AACA;AACD;AACD;AAED;;;;;;;;;;;+CAQ4BC,K,EAAQ;AAAA,UAC3BM,OAD2B,GACPN,KADO,CAC3BM,OAD2B;AAAA,UAClBtB,MADkB,GACPgB,KADO,CAClBhB,MADkB,EAGnC;AACA;;AACA,UACC,CAAE,KAAKvB,KAAL,CAAWC,UAAb,IACAsB,MAAM,KAAK,KAAKjB,WADhB,IAEA,KAAKN,KAAL,CAAW8C,QAHZ,EAIE;AACD;AACA;;AAED,cAASD,OAAT;AACC,aAAKE,eAAL;AACC;AACA;AACA,eAAK/C,KAAL,CAAWgD,yBAAX;AACAT,UAAAA,KAAK,CAACC,cAAN;AACA;;AAED,aAAKS,mBAAL;AACA,aAAKC,gBAAL;AACC;AADD,6BAEgC,KAAKlD,KAFrC;AAAA,cAESU,QAFT,gBAESA,QAFT;AAAA,cAEmByC,QAFnB,gBAEmBA,QAFnB;AAGCA,UAAAA,QAAQ,CAAEzC,QAAF,CAAR;AACA6B,UAAAA,KAAK,CAACC,cAAN;AACA;AAdF;AAgBA;;;iCAEa5C,K,EAAQ;AACrB,WAAKyC,QAAL,CAAe;AAAEzC,QAAAA,KAAK,EAALA;AAAF,OAAf;AACA;;;kCAEa;AACb,WAAKyC,QAAL,CAAe;AAAExC,QAAAA,QAAQ,EAAE;AAAZ,OAAf;AACA;;;gCAEW;AACX,WAAKwC,QAAL,CAAe;AAAExC,QAAAA,QAAQ,EAAE;AAAZ,OAAf;AACA;;;iCAEauD,I,EAAO;AACpB,UAAKA,IAAI,IAAI,CAAE,KAAKpD,KAAL,CAAWC,UAA1B,EAAuC;AACtC,aAAKD,KAAL,CAAWsC,QAAX;AACA;AACD;;;oDAE+B;AAC/B,WAAKvC,0BAAL,GAAkC,IAAlC,CAD+B,CAE/B;;AACA,WAAKsC,QAAL,CAAe;AAAA,eAAQ,EAAR;AAAA,OAAf;AACA;;;6BAEQ;AAAA;;AACR,aACC,4BAAC,kBAAD;AAAW,QAAA,SAAS,EAAG,KAAK/B;AAA5B,SACG,gBAAqB;AAAA,YAAjB+C,SAAiB,QAAjBA,SAAiB;AAAA,2BAuBlB,MAAI,CAACrD,KAvBa;AAAA,YAErBsD,IAFqB,gBAErBA,IAFqB;AAAA,YAGrBC,WAHqB,gBAGrBA,WAHqB;AAAA,YAIrBC,eAJqB,gBAIrBA,eAJqB;AAAA,YAKrBV,QALqB,gBAKrBA,QALqB;AAAA,YAMrBW,OANqB,gBAMrBA,OANqB;AAAA,YAOrBC,MAPqB,gBAOrBA,MAPqB;AAAA,YAQrBhD,QARqB,gBAQrBA,QARqB;AAAA,YASrBiD,YATqB,gBASrBA,YATqB;AAAA,YAUrB1D,UAVqB,gBAUrBA,UAVqB;AAAA,YAWrBmC,sBAXqB,gBAWrBA,sBAXqB;AAAA,YAYrB/B,oBAZqB,gBAYrBA,oBAZqB;AAAA,YAarBD,mBAbqB,gBAarBA,mBAbqB;AAAA,YAcrBwD,0BAdqB,gBAcrBA,0BAdqB;AAAA,YAerBC,mBAfqB,gBAerBA,mBAfqB;AAAA,YAgBrBC,SAhBqB,gBAgBrBA,SAhBqB;AAAA,YAiBrBC,uBAjBqB,gBAiBrBA,uBAjBqB;AAAA,YAkBrBC,WAlBqB,gBAkBrBA,WAlBqB;AAAA,YAmBrBC,SAnBqB,gBAmBrBA,SAnBqB;AAAA,YAoBrBtC,IApBqB,gBAoBrBA,IApBqB;AAAA,YAqBrBuC,OArBqB,gBAqBrBA,OArBqB;AAAA,YAsBrBxC,UAtBqB,gBAsBrBA,UAtBqB;AAwBtB,YAAM5B,SAAS,GAAG,MAAI,CAACH,KAAL,CAAWG,SAAX,IAAwB,CAAEsC,sBAA5C;AACA,YAAM+B,SAAS,GAAG,0BAAcxC,IAAd,CAAlB,CAzBsB,CA0BtB;;AACA,YAAMyC,UAAU,GAAG,mBAAS,cAAI,WAAJ,CAAT,EAA4BD,SAAS,CAACE,KAAtC,CAAnB,CA3BsB,CA4BtB;AACA;;AAEA,YAAMC,mBAAmB,GAAG3C,IAAI,KAAK,6CAArC,CA/BsB,CAiCtB;AACA;;AACA,YAAM4C,0BAA0B,GAC/B,CAAEtE,UAAU,IAAIH,SAAhB,KAA+B+D,mBAA/B,IAAsDK,OADvD;AAEA,YAAMM,oBAAoB,GACzB,CAAEjB,WAAF,IACA,CAAEgB,0BADF,IAEAtE,UAFA,IAGA,CAAEG,mBAJH;AAKA,YAAMqE,mBAAmB,GACxB,CAAElB,WAAF,IACA,CAAEC,eADF,IAEA1D,SAFA,IAGA,CAAE+D,mBAJH,CA1CsB,CA+CtB;;AACA,YAAMa,kBAAkB,GACvB,CAAEnB,WAAF,KACEtD,UAAU,IAAIoD,SAAS,KAAK,MAD9B,KAEA,CAAEkB,0BAFF,IAGA,CAAEnC,sBAHF,IAIA,CAAEhC,mBALH;AAMA,YAAMuE,oBAAoB,GACzB,CAAEpB,WAAF,IAAiBzD,SAAjB,IAA8B,CAAE+D,mBADjC;AAEA,YAAMe,2BAA2B,GAChC,CAAEpB,eAAF,IACA,CAAEe,0BADF,KAEItE,UAAU,KACX,CAAEG,mBAAF,IAAyBwD,0BADd,CAAZ,IAEDvD,oBAJD,CADD;AAMA,YAAMwE,uBAAuB,GAAGL,oBAAhC;AA9DsB,2BA+DM,MAAI,CAAC7E,KA/DX;AAAA,YA+DdC,KA/Dc,gBA+DdA,KA/Dc;AAAA,YA+DPC,QA/DO,gBA+DPA,QA/DO,EAiEtB;AACA;;AACA,YAAMiF,wBAAwB,GAC3B1C,sBAAsB,IAAI/B,oBAA5B,IACA,CAAE+B,sBAFH,CAnEsB,CAuEtB;AACA;;AACA,YAAM2C,gBAAgB,GAAG,yBACxB,kEADwB,EAExB;AACC,yBAAe,CAAEb,OAAF,IAAa,CAAC,CAAEtE,KAAhB,IAAyB0E,mBADzC;AAEC,yBAAeE,oBAFhB;AAGC,+BAAqBpC,sBAHtB;AAIC,wBAAcqC,mBAJf;AAKC,yBAAe,6BAAiBN,SAAjB,CALhB;AAMC,yBAAetE,QANhB;AAOC,uBAAaO,mBAPd;AAQC,wBACCmD,WAAW,KAAMtD,UAAU,IAAI8D,uBAApB,CATb;AAUC,2BAAiBR;AAVlB,SAFwB,EAcxBU,SAdwB,CAAzB;AAzEsB,YA0Fde,SA1Fc,GA0FA,MAAI,CAAChF,KA1FL,CA0FdgF,SA1Fc,EA4FtB;;AACA,YAAIC,YAAY,GAAG,MAAI,CAACjF,KAAL,CAAWiF,YAA9B;;AACA,YAAKd,SAAS,CAACe,mBAAf,EAAqC;AACpCD,UAAAA,YAAY,mCACRA,YADQ,EAERd,SAAS,CAACe,mBAAV,CAA+BxD,UAA/B,CAFQ,CAAZ;AAIA;;AACD,YAAMyD,cAAc,mBAAazE,QAAb,CAApB,CApGsB,CAsGtB;AACA;AACA;AACA;;AACA,YAAI0E,SAAS,GACZ,4BAAC,kBAAD;AACC,UAAA,IAAI,EAAGzD,IADR;AAEC,UAAA,UAAU,EAAG1B,UAFd;AAGC,UAAA,UAAU,EAAGyB,UAHd;AAIC,UAAA,aAAa,EAAG,MAAI,CAAC9C,aAJtB;AAKC,UAAA,iBAAiB,EAAGkE,QAAQ,GAAGuC,SAAH,GAAe,MAAI,CAACrF,KAAL,CAAWsF,mBALvD;AAMC,UAAA,SAAS,EAAGxC,QAAQ,GAAGuC,SAAH,GAAeL,SANpC;AAOC,UAAA,WAAW,EAAGlC,QAAQ,GAAGuC,SAAH,GAAe,MAAI,CAACrF,KAAL,CAAWuF,OAPjD;AAQC,UAAA,QAAQ,EAAG7E,QARZ;AASC,UAAA,kBAAkB,EAAG,MAAI,CAACV,KAAL,CAAWwF,kBATjC;AAUC,UAAA,eAAe,EAAG,MAAI,CAACxF,KAAL,CAAWyF;AAV9B,UADD;;AAcA,YAAKnC,IAAI,KAAK,QAAd,EAAyB;AACxB8B,UAAAA,SAAS,GAAG;AAAK,YAAA,KAAK,EAAG;AAAEM,cAAAA,OAAO,EAAE;AAAX;AAAb,aAAqCN,SAArC,CAAZ;AACA,SA1HqB,CA4HtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAEA,eACC,4BAAC,2BAAD;AACC,UAAA,EAAE,EAAGD,cADN;AAEC,UAAA,GAAG,EAAG,MAAI,CAAC1G,eAFZ;AAGC,UAAA,WAAW,EAAG,MAAI,CAACI,UAHpB;AAIC,UAAA,kBAAkB,EAAG,MAAI,CAACE,gBAJ3B;AAKC,UAAA,YAAY,EAAG,MAAI,CAACA,gBALrB;AAMC,UAAA,SAAS,EAAGgG,gBANb;AAOC,uBAAYpD,IAPb;AAQC,UAAA,YAAY,EAAG,MAAI,CAACtC,YARrB;AASC,UAAA,OAAO,EAAG,MAAI,CAACL,OAThB;AAUC,UAAA,OAAO,EAAG,MAAI,CAACM,OAVhB;AAWC,UAAA,SAAS,EAAG,MAAI,CAACH,0BAXlB;AAYC,UAAA,QAAQ,EAAC,GAZV;AAaC,wBAAaiF,UAbd;AAcC,UAAA,kBAAkB,EAAG,CAAE,aAAF,EAAiB,aAAjB;AAdtB,WAeMa,YAfN,GAiBGH,wBAAwB,IACzB,4BAAC,uBAAD;AACC,UAAA,QAAQ,EAAGpE,QADZ;AAEC,UAAA,YAAY,EAAGiD;AAFhB,UAlBF,EAuBC,4BAAC,sBAAD;AACC,UAAA,QAAQ,EAAGjD,QADZ;AAEC,UAAA,YAAY,EAAGiD;AAFhB,UAvBD,EA2BGtD,oBAAoB,IACrB,4BAAC,sBAAD;AAAoB,UAAA,YAAY,EAAGsD;AAAnC,UA5BF,EA8BC;AAAK,UAAA,SAAS,EAAC;AAAf,WACGe,kBAAkB,IACnB,4BAAC,mBAAD;AACC,UAAA,SAAS,EAAGhE,QADb;AAEC,UAAA,cAAc,EAAGyE,cAFlB;AAGC,UAAA,OAAO,EAAG1B,OAHX;AAIC,UAAA,MAAM,EAAGC,MAJV;AAKC,UAAA,QAAQ,EAAG,EAAI5D,SAAS,IAAIG,UAAjB,KAAiCoD,SAAS,KAAK,MAL3D;AAMC,UAAA,WAAW,EACVW,WAAW,KAAK,KAAhB,IACE,CAAE5B,sBAAF,IAA4B0B,SARhC;AAUC,UAAA,WAAW,EAAG,MAAI,CAACvE,WAVpB;AAWC,UAAA,SAAS,EAAG,MAAI,CAACC;AAXlB,UAFF,EAgBGmF,oBAAoB,IACrB,4BAAC,mBAAD;AACC,UAAA,QAAQ,EAAGjE,QADZ;AAEC,UAAA,QAAQ,EACP,EAAIZ,SAAS,IAAIG,UAAjB,KAAiCoD,SAAS,KAAK;AAHjD,UAjBF,EAwBG,CAAEuB,2BAA2B,IAC9B,MAAI,CAAC7E,0BADJ,KAED,4BAAC,+BAAD,CACC;AACA;AAFD;AAGC,UAAA,YAAY,EAAG,MAAI,CAACA;AAHrB,UA1BF,EAgCG,CAAE6E,2BAAF,IACD3E,UADC,IAED,CAAEuD,eAFD,IAGD,CAAEK,mBAHD,IAID,4BAAC,6BAAD;AACC,UAAA,UAAU,MADX;AAEC,UAAA,SAAS,EAAC,SAFX;AAGC,UAAA,SAAS,EAAG;AACX,uBAAW,MAAI,CAAC/E;AADL;AAHb,UApCF,EA4CC,4BAAC,2BAAD;AACC,UAAA,GAAG,EAAG,MAAI,CAACH,aADZ;AAEC,UAAA,WAAW,EAAG,MAAI,CAACM,WAFpB;AAGC,UAAA,WAAW,EAAG,MAAI,CAACC,aAHpB;AAIC,wBAAawB;AAJd,WAMC,4BAAC,2BAAD;AAAoB,UAAA,OAAO,EAAG,MAAI,CAACtB;AAAnC,WACG8E,OAAO,IAAIkB,SADd,EAEGlB,OAAO,IAAIZ,IAAI,KAAK,MAApB,IACD,4BAAC,kBAAD;AAAW,UAAA,QAAQ,EAAG5C;AAAtB,UAHF,EAKG,CAAEwD,OAAF,IAAa,CACd,4BAAC,4BAAD;AACC,UAAA,GAAG,EAAC,iBADL;AAEC,UAAA,QAAQ,EAAGxD;AAFZ,UADc,EAKd;AAAK,UAAA,GAAG,EAAC;AAAT,WACG,4BAAgByD,SAAhB,EAA2BzC,UAA3B,CADH,CALc,CALhB,CAND,EAqBGmD,uBAAuB,IACxB,4BAAC,2BAAD;AAAoB,UAAA,QAAQ,EAAGnE;AAA/B,UAtBF,EAwBG,CAAC,CAAEd,KAAH,IAAY,4BAAC,0BAAD,OAxBf,CA5CD,CA9BD,EAqGG2E,0BAA0B,IAC3B,4BAAC,iBAAD,QACC;AAAK,UAAA,SAAS,EAAC;AAAf,WACC,4BAAC,8BAAD;AACC,UAAA,QAAQ,EAAG7D,QADZ;AAEC,UAAA,YAAY,EAAGiD,YAFhB;AAGC,UAAA,QAAQ,EAAG,MAAI,CAAClE;AAHjB,UADD,CADD,EAQC;AAAK,UAAA,SAAS,EAAC;AAAf,WACC,4BAAC,iBAAD;AACC,UAAA,QAAQ,EAAC,WADV;AAEC,UAAA,QAAQ,EAAG,MAAI,CAACA,YAFjB;AAGC,UAAA,YAAY,EAAGkE,YAHhB;AAIC,UAAA,QAAQ,EAAGjD;AAJZ,UADD,CARD,CAtGF,CADD;AA2HA;AACA,OAnQF,CADD;AAuQA;;;EAzjBkCiF,kB;;;AA4jBpC,IAAMC,eAAe,GAAG,sBACvB,UAAEC,MAAF,SAA2D;AAAA,MAA/CnF,QAA+C,SAA/CA,QAA+C;AAAA,MAArCiD,YAAqC,SAArCA,YAAqC;AAAA,MAAvBmC,eAAuB,SAAvBA,eAAuB;;AAAA,gBAetDD,MAAM,CAAE,mBAAF,CAfgD;AAAA,MAEzDE,eAFyD,WAEzDA,eAFyD;AAAA,MAGzDC,uBAHyD,WAGzDA,uBAHyD;AAAA,MAIzDC,oBAJyD,WAIzDA,oBAJyD;AAAA,MAKzDC,yBALyD,WAKzDA,yBALyD;AAAA,MAMzDC,QANyD,WAMzDA,QANyD;AAAA,MAOzDvC,0BAPyD,WAOzDA,0BAPyD;AAAA,MAQzDwC,YARyD,WAQzDA,YARyD;AAAA,MASzDZ,kBATyD,WASzDA,kBATyD;AAAA,MAUzDa,qCAVyD,WAUzDA,qCAVyD;AAAA,MAWzDC,WAXyD,WAWzDA,WAXyD;AAAA,MAYzDC,qBAZyD,WAYzDA,qBAZyD;AAAA,MAazDC,eAbyD,WAazDA,eAbyD;AAAA,MAczDC,oCAdyD,WAczDA,oCAdyD;;AAgB1D,MAAMC,KAAK,GAAGD,oCAAoC,CAAE/F,QAAF,CAAlD;;AACA,MAAMT,UAAU,GAAG8F,eAAe,CAAErF,QAAF,CAAlC;;AAjB0D,qBAkBnB4F,WAAW,EAlBQ;AAAA,MAkBlD9C,eAlBkD,gBAkBlDA,eAlBkD;AAAA,MAkBjCmD,SAlBiC,gBAkBjCA,SAlBiC;;AAmB1D,MAAMC,YAAY,GAAGJ,eAAe,CAAE7C,YAAF,CAApC;AACA,MAAMI,uBAAuB,GAAGwC,qBAAqB,CAAE7F,QAAF,EAAY,IAAZ,CAArD,CApB0D,CAsB1D;AACA;AACA;;AAxB0D,cAyBpBgG,KAAK,IAAI,EAzBW;AAAA,MAyBlD/E,IAzBkD,SAyBlDA,IAzBkD;AAAA,MAyB5CD,UAzB4C,SAyB5CA,UAzB4C;AAAA,MAyBhCwC,OAzBgC,SAyBhCA,OAzBgC;;AA2B1D,SAAO;AACN9B,IAAAA,sBAAsB,EACrB6D,oBAAoB,CAAEvF,QAAF,CAApB,IAAoCsF,uBAAuB,CAAEtF,QAAF,CAFtD;AAGNL,IAAAA,oBAAoB,EAAE6F,yBAAyB,CAAExF,QAAF,CAHzC;AAIN;AACA;AACAN,IAAAA,mBAAmB,EAClB,CAAEH,UAAU,IAAI8D,uBAAhB,KAA6CoC,QAAQ,EAPhD;AAQNvC,IAAAA,0BAA0B,EAAEA,0BAA0B,EARhD;AASNN,IAAAA,IAAI,EAAE8C,YAAY,CAAE1F,QAAF,CATZ;AAUN8E,IAAAA,kBAAkB,EAAEA,kBAAkB,EAVhC;AAWN3E,IAAAA,eAAe,EAAEZ,UAAU,GAAGoG,qCAAqC,EAAxC,GAA6C,IAXlE;AAYNxC,IAAAA,mBAAmB,EAClBlC,IAAI,IAAI,sCAA0B;AAAEA,MAAAA,IAAI,EAAJA,IAAF;AAAQD,MAAAA,UAAU,EAAVA;AAAR,KAA1B,CAbH;AAcNoC,IAAAA,SAAS,EAAE,UAAU8C,YAdf;AAeN9D,IAAAA,QAAQ,EAAE,CAAC,CAAE8D,YAfP;AAgBNrD,IAAAA,WAAW,EAAEoD,SAAS,IAAIb,eAhBpB;AAiBNtC,IAAAA,eAAe,EAAEA,eAAe,IAAIsC,eAjB9B;AAmBN;AACA;AACA;AACAY,IAAAA,KAAK,EAALA,KAtBM;AAwBN/E,IAAAA,IAAI,EAAJA,IAxBM;AAyBND,IAAAA,UAAU,EAAVA,UAzBM;AA0BNwC,IAAAA,OAAO,EAAPA,OA1BM;AA2BNjE,IAAAA,UAAU,EAAVA,UA3BM;AA4BN8D,IAAAA,uBAAuB,EAAvBA;AA5BM,GAAP;AA8BA,CA1DsB,CAAxB;AA6DA,IAAM8C,iBAAiB,GAAG,wBAAc,UAAEC,QAAF,EAAYC,QAAZ,SAAsC;AAAA,MAAdlB,MAAc,SAAdA,MAAc;;AAAA,kBAWzEiB,QAAQ,CAAE,mBAAF,CAXiE;AAAA,MAE5EE,qBAF4E,aAE5EA,qBAF4E;AAAA,MAG5EC,WAH4E,aAG5EA,WAH4E;AAAA,MAI5EC,WAJ4E,aAI5EA,WAJ4E;AAAA,MAK5EC,YAL4E,aAK5EA,YAL4E;AAAA,MAM5EC,kBAN4E,aAM5EA,kBAN4E;AAAA,MAO5EC,WAP4E,aAO5EA,WAP4E;AAAA,MAQ5EC,WAR4E,aAQ5EA,WAR4E;AAAA,MAS5EC,aAT4E,aAS5EA,aAT4E;AAAA,MAU5E9B,gBAV4E,aAU5EA,eAV4E;;AAa7E,SAAO;AACN7D,IAAAA,QADM,oBACIlB,QADJ,EACcgB,UADd,EAC2B;AAChCsF,MAAAA,qBAAqB,CAAEtG,QAAF,EAAYgB,UAAZ,CAArB;AACA,KAHK;AAINY,IAAAA,QAJM,sBAIoD;AAAA,UAAhD5B,QAAgD,uEAArCqG,QAAQ,CAACrG,QAA4B;AAAA,UAAlBG,eAAkB;AACzDoG,MAAAA,WAAW,CAAEvG,QAAF,EAAYG,eAAZ,CAAX;AACA,KANK;AAON2G,IAAAA,cAPM,0BAOUC,MAPV,EAOkBC,KAPlB,EAO0B;AAAA,UACvB/D,YADuB,GACNoD,QADM,CACvBpD,YADuB;AAE/BwD,MAAAA,YAAY,CAAEM,MAAF,EAAUC,KAAV,EAAiB/D,YAAjB,CAAZ;AACA,KAVK;AAWNX,IAAAA,yBAXM,uCAWsB;AAAA,UACnBtC,QADmB,GACQqG,QADR,CACnBrG,QADmB;AAAA,UACTiD,YADS,GACQoD,QADR,CACTpD,YADS;;AAAA,qBAIvBkC,MAAM,CAAE,mBAAF,CAJiB;AAAA,UAG1B8B,aAH0B,YAG1BA,aAH0B;;AAK3B,UAAMD,KAAK,GAAGC,aAAa,CAAEjH,QAAF,EAAYiD,YAAZ,CAA3B;AACAyD,MAAAA,kBAAkB,CAAE,EAAF,EAAMzD,YAAN,EAAoB+D,KAAK,GAAG,CAA5B,CAAlB;AACA,KAlBK;AAmBNpC,IAAAA,mBAnBM,+BAmBemC,MAnBf,EAmBwB;AAAA,UACrB/G,QADqB,GACMqG,QADN,CACrBrG,QADqB;AAAA,UACXiD,YADW,GACMoD,QADN,CACXpD,YADW;;AAAA,qBAIzBkC,MAAM,CAAE,mBAAF,CAJmB;AAAA,UAG5B8B,aAH4B,YAG5BA,aAH4B;;AAK7B,UAAMD,KAAK,GAAGC,aAAa,CAAEjH,QAAF,EAAYiD,YAAZ,CAA3B;AACAwD,MAAAA,YAAY,CAAEM,MAAF,EAAUC,KAAK,GAAG,CAAlB,EAAqB/D,YAArB,CAAZ;AACA,KA1BK;AA2BNR,IAAAA,QA3BM,oBA2BIzC,QA3BJ,EA2Be;AACpB2G,MAAAA,WAAW,CAAE3G,QAAF,CAAX;AACA,KA7BK;AA8BN6E,IAAAA,OA9BM,mBA8BGqC,OA9BH,EA8Ba;AAAA,UACVlH,QADU,GACGqG,QADH,CACVrG,QADU;;AAAA,qBAKdmF,MAAM,CAAE,mBAAF,CALQ;AAAA,UAGjBgC,wBAHiB,YAGjBA,wBAHiB;AAAA,UAIjBC,oBAJiB,YAIjBA,oBAJiB;;AAOlB,UAAKF,OAAL,EAAe;AACd,YAAMG,iBAAiB,GAAGD,oBAAoB,CAAEpH,QAAF,CAA9C;;AACA,YAAKqH,iBAAL,EAAyB;AACxBT,UAAAA,WAAW,CAAE5G,QAAF,EAAYqH,iBAAZ,CAAX;AACA;AACD,OALD,MAKO;AACN,YAAMC,qBAAqB,GAAGH,wBAAwB,CAAEnH,QAAF,CAAtD;;AACA,YAAKsH,qBAAL,EAA6B;AAC5BV,UAAAA,WAAW,CAAEU,qBAAF,EAAyBtH,QAAzB,CAAX;AACA;AACD;AACD,KAhDK;AAiDNsE,IAAAA,SAjDM,qBAiDKyC,MAjDL,EAiDc;AACnBF,MAAAA,aAAa,CAAE,CAAER,QAAQ,CAACrG,QAAX,CAAF,EAAyB+G,MAAzB,CAAb;AACA,KAnDK;AAoDNtF,IAAAA,YApDM,wBAoDQ8F,WApDR,EAoDsB;AAAA,qBACHpC,MAAM,CAAE,mBAAF,CADH;AAAA,UACnBS,WADmB,YACnBA,WADmB;;AAE3B,UAAM4B,YAAY,GAAG5B,WAAW,GAAG6B,wBAAd,CAAuCvG,QAA5D;;AACAsG,MAAAA,YAAY,CAAED,WAAF,CAAZ;AACA,KAxDK;AAyDNtF,IAAAA,gBAzDM,8BAyDa;AAClB,UAAK,CAAEoE,QAAQ,CAACvB,kBAAhB,EAAqC;AACpC;AACA;;AAHiB,qBAOdK,MAAM,CAAE,mBAAF,CAPQ;AAAA,UAMjBuC,sBANiB,YAMjBA,sBANiB;;AASlB,UAAKA,sBAAsB,EAA3B,EAAgC;AAC/BlB,QAAAA,WAAW,CAAEkB,sBAAsB,EAAxB,EAA4BrB,QAAQ,CAACrG,QAArC,CAAX;AACA,OAFD,MAEO;AACNuG,QAAAA,WAAW,CAAEF,QAAQ,CAACrG,QAAX,CAAX;AACA;AACD,KAvEK;AAwEN+E,IAAAA,eAxEM,2BAwEW4C,gBAxEX,EAwE8B;AACnC5C,MAAAA,gBAAe,CAAE4C,gBAAF,CAAf;AACA;AA1EK,GAAP;AA4EA,CAzFyB,CAA1B;;eA2Fe,sBACdC,aADc,EAEd,iCAAmB;AAAExC,EAAAA,eAAe,EAAE;AAAnB,CAAnB,CAFc,EAGdF,eAHc,EAIdiB,iBAJc,EAKd,6BAAa,uBAAb,CALc,EAMZtI,cANY,C","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { get, reduce, size, first, last } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component, Fragment } from '@wordpress/element';\nimport {\n\tfocus,\n\tisTextField,\n\tplaceCaretAtHorizontalEdge,\n\tplaceCaretAtVerticalEdge,\n} from '@wordpress/dom';\nimport { BACKSPACE, DELETE, ENTER } from '@wordpress/keycodes';\nimport {\n\tgetBlockType,\n\tgetSaveElement,\n\tisReusableBlock,\n\tisUnmodifiedDefaultBlock,\n\tgetUnregisteredTypeHandlerName,\n} from '@wordpress/blocks';\nimport { KeyboardShortcuts, withFilters } from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { withViewportMatch } from '@wordpress/viewport';\nimport { compose, pure } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport BlockEdit from '../block-edit';\nimport BlockMover from '../block-mover';\nimport BlockDropZone from '../block-drop-zone';\nimport BlockInvalidWarning from './block-invalid-warning';\nimport BlockCrashWarning from './block-crash-warning';\nimport BlockCrashBoundary from './block-crash-boundary';\nimport BlockHtml from './block-html';\nimport BlockBreadcrumb from './breadcrumb';\nimport BlockContextualToolbar from './block-contextual-toolbar';\nimport BlockMultiControls from './multi-controls';\nimport BlockMobileToolbar from './block-mobile-toolbar';\nimport BlockInsertionPoint from './insertion-point';\nimport IgnoreNestedEvents from '../ignore-nested-events';\nimport InserterWithShortcuts from '../inserter-with-shortcuts';\nimport Inserter from '../inserter';\nimport HoverArea from './hover-area';\nimport { isInsideRootBlock } from '../../utils/dom';\n\nexport class BlockListBlock extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.setBlockListRef = this.setBlockListRef.bind( this );\n\t\tthis.bindBlockNode = this.bindBlockNode.bind( this );\n\t\tthis.setAttributes = this.setAttributes.bind( this );\n\t\tthis.maybeHover = this.maybeHover.bind( this );\n\t\tthis.forceFocusedContextualToolbar = this.forceFocusedContextualToolbar.bind( this );\n\t\tthis.hideHoverEffects = this.hideHoverEffects.bind( this );\n\t\tthis.onFocus = this.onFocus.bind( this );\n\t\tthis.preventDrag = this.preventDrag.bind( this );\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.deleteOrInsertAfterWrapper = this.deleteOrInsertAfterWrapper.bind( this );\n\t\tthis.onBlockError = this.onBlockError.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onClick = this.onClick.bind( this );\n\t\tthis.onDragStart = this.onDragStart.bind( this );\n\t\tthis.onDragEnd = this.onDragEnd.bind( this );\n\t\tthis.selectOnOpen = this.selectOnOpen.bind( this );\n\t\tthis.hadTouchStart = false;\n\n\t\tthis.state = {\n\t\t\terror: null,\n\t\t\tdragging: false,\n\t\t\tisHovered: false,\n\t\t};\n\t\tthis.isForcingContextualToolbar = false;\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( this.props.isSelected ) {\n\t\t\tthis.focusTabbable();\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( this.isForcingContextualToolbar ) {\n\t\t\t// The forcing of contextual toolbar should only be true during one update,\n\t\t\t// after the first update normal conditions should apply.\n\t\t\tthis.isForcingContextualToolbar = false;\n\t\t}\n\t\tif ( this.props.isTypingWithinBlock || this.props.isSelected ) {\n\t\t\tthis.hideHoverEffects();\n\t\t}\n\n\t\tif ( this.props.isSelected && ! prevProps.isSelected ) {\n\t\t\tthis.focusTabbable( true );\n\t\t}\n\n\t\t// When triggering a multi-selection, move the focus to the wrapper of the first selected block.\n\t\t// This ensures that it is not possible to continue editing the initially selected block\n\t\t// when a multi-selection is triggered.\n\t\tif ( this.props.isFirstMultiSelected && ! prevProps.isFirstMultiSelected ) {\n\t\t\tthis.wrapperNode.focus();\n\t\t}\n\t}\n\n\tsetBlockListRef( node ) {\n\t\tthis.wrapperNode = node;\n\t\tthis.props.blockRef( node, this.props.clientId );\n\n\t\t// We need to rerender to trigger a rerendering of HoverArea\n\t\t// it depents on this.wrapperNode but we can't keep this.wrapperNode in state\n\t\t// Because we need it to be immediately availeble for `focusableTabbable` to work.\n\t\tthis.forceUpdate();\n\t}\n\n\tbindBlockNode( node ) {\n\t\tthis.node = node;\n\t}\n\n\t/**\n\t * When a block becomes selected, transition focus to an inner tabbable.\n\t *\n\t * @param {boolean} ignoreInnerBlocks Should not focus inner blocks.\n\t */\n\tfocusTabbable( ignoreInnerBlocks ) {\n\t\tconst { initialPosition } = this.props;\n\n\t\t// Focus is captured by the wrapper node, so while focus transition\n\t\t// should only consider tabbables within editable display, since it\n\t\t// may be the wrapper itself or a side control which triggered the\n\t\t// focus event, don't unnecessary transition to an inner tabbable.\n\t\tif ( this.wrapperNode.contains( document.activeElement ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Find all tabbables within node.\n\t\tconst textInputs = focus.tabbable\n\t\t\t.find( this.node )\n\t\t\t.filter( isTextField )\n\t\t\t// Exclude inner blocks\n\t\t\t.filter( ( node ) => ! ignoreInnerBlocks || isInsideRootBlock( this.node, node ) );\n\n\t\t// If reversed (e.g. merge via backspace), use the last in the set of\n\t\t// tabbables.\n\t\tconst isReverse = -1 === initialPosition;\n\t\tconst target = ( isReverse ? last : first )( textInputs );\n\n\t\tif ( ! target ) {\n\t\t\tthis.wrapperNode.focus();\n\t\t\treturn;\n\t\t}\n\n\t\ttarget.focus();\n\n\t\t// In reverse case, need to explicitly place caret position.\n\t\tif ( isReverse ) {\n\t\t\tplaceCaretAtHorizontalEdge( target, true );\n\t\t\tplaceCaretAtVerticalEdge( target, true );\n\t\t}\n\t}\n\n\tsetAttributes( attributes ) {\n\t\tconst { clientId, name, onChange } = this.props;\n\t\tconst type = getBlockType( name );\n\t\tonChange( clientId, attributes );\n\n\t\tconst metaAttributes = reduce(\n\t\t\tattributes,\n\t\t\t( result, value, key ) => {\n\t\t\t\tif ( get( type, [ 'attributes', key, 'source' ] ) === 'meta' ) {\n\t\t\t\t\tresult[ type.attributes[ key ].meta ] = value;\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\t{}\n\t\t);\n\n\t\tif ( size( metaAttributes ) ) {\n\t\t\tthis.props.onMetaChange( metaAttributes );\n\t\t}\n\t}\n\n\tonTouchStart() {\n\t\t// Detect touchstart to disable hover on iOS\n\t\tthis.hadTouchStart = true;\n\t}\n\n\tonClick() {\n\t\t// Clear touchstart detection\n\t\t// Browser will try to emulate mouse events also see https://www.html5rocks.com/en/mobile/touchandmouse/\n\t\tthis.hadTouchStart = false;\n\t}\n\n\t/**\n\t * A mouseover event handler to apply hover effect when a pointer device is\n\t * placed within the bounds of the block. The mouseover event is preferred\n\t * over mouseenter because it may be the case that a previous mouseenter\n\t * event was blocked from being handled by a IgnoreNestedEvents component,\n\t * therefore transitioning out of a nested block to the bounds of the block\n\t * would otherwise not trigger a hover effect.\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/Events/mouseenter\n\t */\n\tmaybeHover() {\n\t\tconst { isPartOfMultiSelection, isSelected } = this.props;\n\t\tconst { isHovered } = this.state;\n\n\t\tif (\n\t\t\tisHovered ||\n\t\t\tisPartOfMultiSelection ||\n\t\t\tisSelected ||\n\t\t\tthis.hadTouchStart\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState( { isHovered: true } );\n\t}\n\n\t/**\n\t * Sets the block state as unhovered if currently hovering. There are cases\n\t * where mouseleave may occur but the block is not hovered (multi-select),\n\t * so to avoid unnecesary renders, the state is only set if hovered.\n\t */\n\thideHoverEffects() {\n\t\tif ( this.state.isHovered ) {\n\t\t\tthis.setState( { isHovered: false } );\n\t\t}\n\t}\n\n\t/**\n\t * Marks the block as selected when focused and not already selected. This\n\t * specifically handles the case where block does not set focus on its own\n\t * (via `setFocus`), typically if there is no focusable input in the block.\n\t *\n\t * @return {void}\n\t */\n\tonFocus() {\n\t\tif ( ! this.props.isSelected && ! this.props.isPartOfMultiSelection ) {\n\t\t\tthis.props.onSelect();\n\t\t}\n\t}\n\n\t/**\n\t * Prevents default dragging behavior within a block to allow for multi-\n\t * selection to take effect unhampered.\n\t *\n\t * @param {DragEvent} event Drag event.\n\t *\n\t * @return {void}\n\t */\n\tpreventDrag( event ) {\n\t\tevent.preventDefault();\n\t}\n\n\t/**\n\t * Begins tracking cursor multi-selection when clicking down within block.\n\t *\n\t * @param {MouseEvent} event A mousedown event.\n\t *\n\t * @return {void}\n\t */\n\tonPointerDown( event ) {\n\t\t// Not the main button.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n\t\tif ( event.button !== 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( event.shiftKey ) {\n\t\t\tif ( ! this.props.isSelected ) {\n\t\t\t\tthis.props.onShiftSelection();\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.props.onSelectionStart( this.props.clientId );\n\n\t\t\t// Allow user to escape out of a multi-selection to a singular\n\t\t\t// selection of a block via click. This is handled here since\n\t\t\t// onFocus excludes blocks involved in a multiselection, as\n\t\t\t// focus can be incurred by starting a multiselection (focus\n\t\t\t// moved to first block's multi-controls).\n\t\t\tif ( this.props.isPartOfMultiSelection ) {\n\t\t\t\tthis.props.onSelect();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Interprets keydown event intent to remove or insert after block if key\n\t * event occurs on wrapper node. This can occur when the block has no text\n\t * fields of its own, particularly after initial insertion, to allow for\n\t * easy deletion and continuous writing flow to add additional content.\n\t *\n\t * @param {KeyboardEvent} event Keydown event.\n\t */\n\tdeleteOrInsertAfterWrapper( event ) {\n\t\tconst { keyCode, target } = event;\n\n\t\t// These block shortcuts should only trigger if the wrapper of the block is selected\n\t\t// And when it's not a multi-selection to avoid conflicting with RichText/Inputs and multiselection.\n\t\tif (\n\t\t\t! this.props.isSelected ||\n\t\t\ttarget !== this.wrapperNode ||\n\t\t\tthis.props.isLocked\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch ( keyCode ) {\n\t\t\tcase ENTER:\n\t\t\t\t// Insert default block after current block if enter and event\n\t\t\t\t// not already handled by descendant.\n\t\t\t\tthis.props.onInsertDefaultBlockAfter();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\n\t\t\tcase BACKSPACE:\n\t\t\tcase DELETE:\n\t\t\t\t// Remove block on backspace.\n\t\t\t\tconst { clientId, onRemove } = this.props;\n\t\t\t\tonRemove( clientId );\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tonBlockError( error ) {\n\t\tthis.setState( { error } );\n\t}\n\n\tonDragStart() {\n\t\tthis.setState( { dragging: true } );\n\t}\n\n\tonDragEnd() {\n\t\tthis.setState( { dragging: false } );\n\t}\n\n\tselectOnOpen( open ) {\n\t\tif ( open && ! this.props.isSelected ) {\n\t\t\tthis.props.onSelect();\n\t\t}\n\t}\n\n\tforceFocusedContextualToolbar() {\n\t\tthis.isForcingContextualToolbar = true;\n\t\t// trigger a re-render\n\t\tthis.setState( () => ( {} ) );\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<HoverArea container={ this.wrapperNode }>\n\t\t\t\t{ ( { hoverArea } ) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tmode,\n\t\t\t\t\t\tisFocusMode,\n\t\t\t\t\t\thasFixedToolbar,\n\t\t\t\t\t\tisLocked,\n\t\t\t\t\t\tisFirst,\n\t\t\t\t\t\tisLast,\n\t\t\t\t\t\tclientId,\n\t\t\t\t\t\trootClientId,\n\t\t\t\t\t\tisSelected,\n\t\t\t\t\t\tisPartOfMultiSelection,\n\t\t\t\t\t\tisFirstMultiSelected,\n\t\t\t\t\t\tisTypingWithinBlock,\n\t\t\t\t\t\tisCaretWithinFormattedText,\n\t\t\t\t\t\tisEmptyDefaultBlock,\n\t\t\t\t\t\tisMovable,\n\t\t\t\t\t\tisParentOfSelectedBlock,\n\t\t\t\t\t\tisDraggable,\n\t\t\t\t\t\tclassName,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tisValid,\n\t\t\t\t\t\tattributes,\n\t\t\t\t\t} = this.props;\n\t\t\t\t\tconst isHovered = this.state.isHovered && ! isPartOfMultiSelection;\n\t\t\t\t\tconst blockType = getBlockType( name );\n\t\t\t\t\t// translators: %s: Type of block (i.e. Text, Image etc)\n\t\t\t\t\tconst blockLabel = sprintf( __( 'Block: %s' ), blockType.title );\n\t\t\t\t\t// The block as rendered in the editor is composed of general block UI\n\t\t\t\t\t// (mover, toolbar, wrapper) and the display of the block content.\n\n\t\t\t\t\tconst isUnregisteredBlock = name === getUnregisteredTypeHandlerName();\n\n\t\t\t\t\t// If the block is selected and we're typing the block should not appear.\n\t\t\t\t\t// Empty paragraph blocks should always show up as unselected.\n\t\t\t\t\tconst showEmptyBlockSideInserter =\n\t\t\t\t\t\t( isSelected || isHovered ) && isEmptyDefaultBlock && isValid;\n\t\t\t\t\tconst shouldAppearSelected =\n\t\t\t\t\t\t! isFocusMode &&\n\t\t\t\t\t\t! showEmptyBlockSideInserter &&\n\t\t\t\t\t\tisSelected &&\n\t\t\t\t\t\t! isTypingWithinBlock;\n\t\t\t\t\tconst shouldAppearHovered =\n\t\t\t\t\t\t! isFocusMode &&\n\t\t\t\t\t\t! hasFixedToolbar &&\n\t\t\t\t\t\tisHovered &&\n\t\t\t\t\t\t! isEmptyDefaultBlock;\n\t\t\t\t\t// We render block movers and block settings to keep them tabbale even if hidden\n\t\t\t\t\tconst shouldRenderMovers =\n\t\t\t\t\t\t! isFocusMode &&\n\t\t\t\t\t\t( isSelected || hoverArea === 'left' ) &&\n\t\t\t\t\t\t! showEmptyBlockSideInserter &&\n\t\t\t\t\t\t! isPartOfMultiSelection &&\n\t\t\t\t\t\t! isTypingWithinBlock;\n\t\t\t\t\tconst shouldShowBreadcrumb =\n\t\t\t\t\t\t! isFocusMode && isHovered && ! isEmptyDefaultBlock;\n\t\t\t\t\tconst shouldShowContextualToolbar =\n\t\t\t\t\t\t! hasFixedToolbar &&\n\t\t\t\t\t\t! showEmptyBlockSideInserter &&\n\t\t\t\t\t\t( ( isSelected &&\n\t\t\t\t\t\t\t( ! isTypingWithinBlock || isCaretWithinFormattedText ) ) ||\n\t\t\t\t\t\t\tisFirstMultiSelected );\n\t\t\t\t\tconst shouldShowMobileToolbar = shouldAppearSelected;\n\t\t\t\t\tconst { error, dragging } = this.state;\n\n\t\t\t\t\t// Insertion point can only be made visible if the block is at the\n\t\t\t\t\t// the extent of a multi-selection, or not in a multi-selection.\n\t\t\t\t\tconst shouldShowInsertionPoint =\n\t\t\t\t\t\t( isPartOfMultiSelection && isFirstMultiSelected ) ||\n\t\t\t\t\t\t! isPartOfMultiSelection;\n\n\t\t\t\t\t// The wp-block className is important for editor styles.\n\t\t\t\t\t// Generate the wrapper class names handling the different states of the block.\n\t\t\t\t\tconst wrapperClassName = classnames(\n\t\t\t\t\t\t'wp-block editor-block-list__block block-editor-block-list__block',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'has-warning': ! isValid || !! error || isUnregisteredBlock,\n\t\t\t\t\t\t\t'is-selected': shouldAppearSelected,\n\t\t\t\t\t\t\t'is-multi-selected': isPartOfMultiSelection,\n\t\t\t\t\t\t\t'is-hovered': shouldAppearHovered,\n\t\t\t\t\t\t\t'is-reusable': isReusableBlock( blockType ),\n\t\t\t\t\t\t\t'is-dragging': dragging,\n\t\t\t\t\t\t\t'is-typing': isTypingWithinBlock,\n\t\t\t\t\t\t\t'is-focused':\n\t\t\t\t\t\t\t\tisFocusMode && ( isSelected || isParentOfSelectedBlock ),\n\t\t\t\t\t\t\t'is-focus-mode': isFocusMode,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclassName\n\t\t\t\t\t);\n\n\t\t\t\t\tconst { onReplace } = this.props;\n\n\t\t\t\t\t// Determine whether the block has props to apply to the wrapper.\n\t\t\t\t\tlet wrapperProps = this.props.wrapperProps;\n\t\t\t\t\tif ( blockType.getEditWrapperProps ) {\n\t\t\t\t\t\twrapperProps = {\n\t\t\t\t\t\t\t...wrapperProps,\n\t\t\t\t\t\t\t...blockType.getEditWrapperProps( attributes ),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tconst blockElementId = `block-${ clientId }`;\n\n\t\t\t\t\t// We wrap the BlockEdit component in a div that hides it when editing in\n\t\t\t\t\t// HTML mode. This allows us to render all of the ancillary pieces\n\t\t\t\t\t// (InspectorControls, etc.) which are inside `BlockEdit` but not\n\t\t\t\t\t// `BlockHTML`, even in HTML mode.\n\t\t\t\t\tlet blockEdit = (\n\t\t\t\t\t\t<BlockEdit\n\t\t\t\t\t\t\tname={ name }\n\t\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\t\tattributes={ attributes }\n\t\t\t\t\t\t\tsetAttributes={ this.setAttributes }\n\t\t\t\t\t\t\tinsertBlocksAfter={ isLocked ? undefined : this.props.onInsertBlocksAfter }\n\t\t\t\t\t\t\tonReplace={ isLocked ? undefined : onReplace }\n\t\t\t\t\t\t\tmergeBlocks={ isLocked ? undefined : this.props.onMerge }\n\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t\tisSelectionEnabled={ this.props.isSelectionEnabled }\n\t\t\t\t\t\t\ttoggleSelection={ this.props.toggleSelection }\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t\tif ( mode !== 'visual' ) {\n\t\t\t\t\t\tblockEdit = <div style={ { display: 'none' } }>{ blockEdit }</div>;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Disable reasons:\n\t\t\t\t\t//\n\t\t\t\t\t//  jsx-a11y/mouse-events-have-key-events:\n\t\t\t\t\t//   - onMouseOver is explicitly handling hover effects\n\t\t\t\t\t//\n\t\t\t\t\t//  jsx-a11y/no-static-element-interactions:\n\t\t\t\t\t//   - Each block can be selected by clicking on it\n\n\t\t\t\t\t/* eslint-disable jsx-a11y/mouse-events-have-key-events, jsx-a11y/no-static-element-interactions, jsx-a11y/onclick-has-role, jsx-a11y/click-events-have-key-events */\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<IgnoreNestedEvents\n\t\t\t\t\t\t\tid={ blockElementId }\n\t\t\t\t\t\t\tref={ this.setBlockListRef }\n\t\t\t\t\t\t\tonMouseOver={ this.maybeHover }\n\t\t\t\t\t\t\tonMouseOverHandled={ this.hideHoverEffects }\n\t\t\t\t\t\t\tonMouseLeave={ this.hideHoverEffects }\n\t\t\t\t\t\t\tclassName={ wrapperClassName }\n\t\t\t\t\t\t\tdata-type={ name }\n\t\t\t\t\t\t\tonTouchStart={ this.onTouchStart }\n\t\t\t\t\t\t\tonFocus={ this.onFocus }\n\t\t\t\t\t\t\tonClick={ this.onClick }\n\t\t\t\t\t\t\tonKeyDown={ this.deleteOrInsertAfterWrapper }\n\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\taria-label={ blockLabel }\n\t\t\t\t\t\t\tchildHandledEvents={ [ 'onDragStart', 'onMouseDown' ] }\n\t\t\t\t\t\t\t{ ...wrapperProps }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ shouldShowInsertionPoint && (\n\t\t\t\t\t\t\t\t<BlockInsertionPoint\n\t\t\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t<BlockDropZone\n\t\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ isFirstMultiSelected && (\n\t\t\t\t\t\t\t\t<BlockMultiControls rootClientId={ rootClientId } />\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t<div className=\"editor-block-list__block-edit block-editor-block-list__block-edit\">\n\t\t\t\t\t\t\t\t{ shouldRenderMovers && (\n\t\t\t\t\t\t\t\t\t<BlockMover\n\t\t\t\t\t\t\t\t\t\tclientIds={ clientId }\n\t\t\t\t\t\t\t\t\t\tblockElementId={ blockElementId }\n\t\t\t\t\t\t\t\t\t\tisFirst={ isFirst }\n\t\t\t\t\t\t\t\t\t\tisLast={ isLast }\n\t\t\t\t\t\t\t\t\t\tisHidden={ ! ( isHovered || isSelected ) || hoverArea !== 'left' }\n\t\t\t\t\t\t\t\t\t\tisDraggable={\n\t\t\t\t\t\t\t\t\t\t\tisDraggable !== false &&\n\t\t\t\t\t\t\t\t\t\t\t( ! isPartOfMultiSelection && isMovable )\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonDragStart={ this.onDragStart }\n\t\t\t\t\t\t\t\t\t\tonDragEnd={ this.onDragEnd }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t{ shouldShowBreadcrumb && (\n\t\t\t\t\t\t\t\t\t<BlockBreadcrumb\n\t\t\t\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t\t\t\t\tisHidden={\n\t\t\t\t\t\t\t\t\t\t\t! ( isHovered || isSelected ) || hoverArea !== 'left'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t{ ( shouldShowContextualToolbar ||\n\t\t\t\t\t\t\t\t\tthis.isForcingContextualToolbar ) && (\n\t\t\t\t\t\t\t\t\t<BlockContextualToolbar\n\t\t\t\t\t\t\t\t\t\t// If the toolbar is being shown because of being forced\n\t\t\t\t\t\t\t\t\t\t// it should focus the toolbar right after the mount.\n\t\t\t\t\t\t\t\t\t\tfocusOnMount={ this.isForcingContextualToolbar }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t{ ! shouldShowContextualToolbar &&\n\t\t\t\t\t\t\t\t\tisSelected &&\n\t\t\t\t\t\t\t\t\t! hasFixedToolbar &&\n\t\t\t\t\t\t\t\t\t! isEmptyDefaultBlock && (\n\t\t\t\t\t\t\t\t\t<KeyboardShortcuts\n\t\t\t\t\t\t\t\t\t\tbindGlobal\n\t\t\t\t\t\t\t\t\t\teventName=\"keydown\"\n\t\t\t\t\t\t\t\t\t\tshortcuts={ {\n\t\t\t\t\t\t\t\t\t\t\t'alt+f10': this.forceFocusedContextualToolbar,\n\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t<IgnoreNestedEvents\n\t\t\t\t\t\t\t\t\tref={ this.bindBlockNode }\n\t\t\t\t\t\t\t\t\tonDragStart={ this.preventDrag }\n\t\t\t\t\t\t\t\t\tonMouseDown={ this.onPointerDown }\n\t\t\t\t\t\t\t\t\tdata-block={ clientId }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<BlockCrashBoundary onError={ this.onBlockError }>\n\t\t\t\t\t\t\t\t\t\t{ isValid && blockEdit }\n\t\t\t\t\t\t\t\t\t\t{ isValid && mode === 'html' && (\n\t\t\t\t\t\t\t\t\t\t\t<BlockHtml clientId={ clientId } />\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t{ ! isValid && [\n\t\t\t\t\t\t\t\t\t\t\t<BlockInvalidWarning\n\t\t\t\t\t\t\t\t\t\t\t\tkey=\"invalid-warning\"\n\t\t\t\t\t\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t\t\t\t\t\t<div key=\"invalid-preview\">\n\t\t\t\t\t\t\t\t\t\t\t\t{ getSaveElement( blockType, attributes ) }\n\t\t\t\t\t\t\t\t\t\t\t</div>,\n\t\t\t\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\t\t\t</BlockCrashBoundary>\n\t\t\t\t\t\t\t\t\t{ shouldShowMobileToolbar && (\n\t\t\t\t\t\t\t\t\t\t<BlockMobileToolbar clientId={ clientId } />\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t{ !! error && <BlockCrashWarning /> }\n\t\t\t\t\t\t\t\t</IgnoreNestedEvents>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{ showEmptyBlockSideInserter && (\n\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t<div className=\"editor-block-list__side-inserter block-editor-block-list__side-inserter\">\n\t\t\t\t\t\t\t\t\t\t<InserterWithShortcuts\n\t\t\t\t\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t\t\t\t\t\t\tonToggle={ this.selectOnOpen }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"editor-block-list__empty-block-inserter block-editor-block-list__empty-block-inserter\">\n\t\t\t\t\t\t\t\t\t\t<Inserter\n\t\t\t\t\t\t\t\t\t\t\tposition=\"top right\"\n\t\t\t\t\t\t\t\t\t\t\tonToggle={ this.selectOnOpen }\n\t\t\t\t\t\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</IgnoreNestedEvents>\n\t\t\t\t\t);\n\t\t\t\t\t/* eslint-enable jsx-a11y/no-static-element-interactions, jsx-a11y/onclick-has-role, jsx-a11y/click-events-have-key-events */\n\t\t\t\t} }\n\t\t\t</HoverArea>\n\t\t);\n\t}\n}\n\nconst applyWithSelect = withSelect(\n\t( select, { clientId, rootClientId, isLargeViewport } ) => {\n\t\tconst {\n\t\t\tisBlockSelected,\n\t\t\tisAncestorMultiSelected,\n\t\t\tisBlockMultiSelected,\n\t\t\tisFirstMultiSelectedBlock,\n\t\t\tisTyping,\n\t\t\tisCaretWithinFormattedText,\n\t\t\tgetBlockMode,\n\t\t\tisSelectionEnabled,\n\t\t\tgetSelectedBlocksInitialCaretPosition,\n\t\t\tgetSettings,\n\t\t\thasSelectedInnerBlock,\n\t\t\tgetTemplateLock,\n\t\t\t__unstableGetBlockWithoutInnerBlocks,\n\t\t} = select( 'core/block-editor' );\n\t\tconst block = __unstableGetBlockWithoutInnerBlocks( clientId );\n\t\tconst isSelected = isBlockSelected( clientId );\n\t\tconst { hasFixedToolbar, focusMode } = getSettings();\n\t\tconst templateLock = getTemplateLock( rootClientId );\n\t\tconst isParentOfSelectedBlock = hasSelectedInnerBlock( clientId, true );\n\n\t\t// The fallback to `{}` is a temporary fix.\n\t\t// This function should never be called when a block is not present in the state.\n\t\t// It happens now because the order in withSelect rendering is not correct.\n\t\tconst { name, attributes, isValid } = block || {};\n\n\t\treturn {\n\t\t\tisPartOfMultiSelection:\n\t\t\t\tisBlockMultiSelected( clientId ) || isAncestorMultiSelected( clientId ),\n\t\t\tisFirstMultiSelected: isFirstMultiSelectedBlock( clientId ),\n\t\t\t// We only care about this prop when the block is selected\n\t\t\t// Thus to avoid unnecessary rerenders we avoid updating the prop if the block is not selected.\n\t\t\tisTypingWithinBlock:\n\t\t\t\t( isSelected || isParentOfSelectedBlock ) && isTyping(),\n\t\t\tisCaretWithinFormattedText: isCaretWithinFormattedText(),\n\t\t\tmode: getBlockMode( clientId ),\n\t\t\tisSelectionEnabled: isSelectionEnabled(),\n\t\t\tinitialPosition: isSelected ? getSelectedBlocksInitialCaretPosition() : null,\n\t\t\tisEmptyDefaultBlock:\n\t\t\t\tname && isUnmodifiedDefaultBlock( { name, attributes } ),\n\t\t\tisMovable: 'all' !== templateLock,\n\t\t\tisLocked: !! templateLock,\n\t\t\tisFocusMode: focusMode && isLargeViewport,\n\t\t\thasFixedToolbar: hasFixedToolbar && isLargeViewport,\n\n\t\t\t// Users of the editor.BlockListBlock filter used to be able to access the block prop\n\t\t\t// Ideally these blocks would rely on the clientId prop only.\n\t\t\t// This is kept for backward compatibility reasons.\n\t\t\tblock,\n\n\t\t\tname,\n\t\t\tattributes,\n\t\t\tisValid,\n\t\t\tisSelected,\n\t\t\tisParentOfSelectedBlock,\n\t\t};\n\t}\n);\n\nconst applyWithDispatch = withDispatch( ( dispatch, ownProps, { select } ) => {\n\tconst {\n\t\tupdateBlockAttributes,\n\t\tselectBlock,\n\t\tmultiSelect,\n\t\tinsertBlocks,\n\t\tinsertDefaultBlock,\n\t\tremoveBlock,\n\t\tmergeBlocks,\n\t\treplaceBlocks,\n\t\ttoggleSelection,\n\t} = dispatch( 'core/block-editor' );\n\n\treturn {\n\t\tonChange( clientId, attributes ) {\n\t\t\tupdateBlockAttributes( clientId, attributes );\n\t\t},\n\t\tonSelect( clientId = ownProps.clientId, initialPosition ) {\n\t\t\tselectBlock( clientId, initialPosition );\n\t\t},\n\t\tonInsertBlocks( blocks, index ) {\n\t\t\tconst { rootClientId } = ownProps;\n\t\t\tinsertBlocks( blocks, index, rootClientId );\n\t\t},\n\t\tonInsertDefaultBlockAfter() {\n\t\t\tconst { clientId, rootClientId } = ownProps;\n\t\t\tconst {\n\t\t\t\tgetBlockIndex,\n\t\t\t} = select( 'core/block-editor' );\n\t\t\tconst index = getBlockIndex( clientId, rootClientId );\n\t\t\tinsertDefaultBlock( {}, rootClientId, index + 1 );\n\t\t},\n\t\tonInsertBlocksAfter( blocks ) {\n\t\t\tconst { clientId, rootClientId } = ownProps;\n\t\t\tconst {\n\t\t\t\tgetBlockIndex,\n\t\t\t} = select( 'core/block-editor' );\n\t\t\tconst index = getBlockIndex( clientId, rootClientId );\n\t\t\tinsertBlocks( blocks, index + 1, rootClientId );\n\t\t},\n\t\tonRemove( clientId ) {\n\t\t\tremoveBlock( clientId );\n\t\t},\n\t\tonMerge( forward ) {\n\t\t\tconst { clientId } = ownProps;\n\t\t\tconst {\n\t\t\t\tgetPreviousBlockClientId,\n\t\t\t\tgetNextBlockClientId,\n\t\t\t} = select( 'core/block-editor' );\n\n\t\t\tif ( forward ) {\n\t\t\t\tconst nextBlockClientId = getNextBlockClientId( clientId );\n\t\t\t\tif ( nextBlockClientId ) {\n\t\t\t\t\tmergeBlocks( clientId, nextBlockClientId );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst previousBlockClientId = getPreviousBlockClientId( clientId );\n\t\t\t\tif ( previousBlockClientId ) {\n\t\t\t\t\tmergeBlocks( previousBlockClientId, clientId );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonReplace( blocks ) {\n\t\t\treplaceBlocks( [ ownProps.clientId ], blocks );\n\t\t},\n\t\tonMetaChange( updatedMeta ) {\n\t\t\tconst { getSettings } = select( 'core/block-editor' );\n\t\t\tconst onChangeMeta = getSettings().__experimentalMetaSource.onChange;\n\t\t\tonChangeMeta( updatedMeta );\n\t\t},\n\t\tonShiftSelection() {\n\t\t\tif ( ! ownProps.isSelectionEnabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst {\n\t\t\t\tgetBlockSelectionStart,\n\t\t\t} = select( 'core/block-editor' );\n\n\t\t\tif ( getBlockSelectionStart() ) {\n\t\t\t\tmultiSelect( getBlockSelectionStart(), ownProps.clientId );\n\t\t\t} else {\n\t\t\t\tselectBlock( ownProps.clientId );\n\t\t\t}\n\t\t},\n\t\ttoggleSelection( selectionEnabled ) {\n\t\t\ttoggleSelection( selectionEnabled );\n\t\t},\n\t};\n} );\n\nexport default compose(\n\tpure,\n\twithViewportMatch( { isLargeViewport: 'medium' } ),\n\tapplyWithSelect,\n\tapplyWithDispatch,\n\twithFilters( 'editor.BlockListBlock' )\n)( BlockListBlock );\n"]}