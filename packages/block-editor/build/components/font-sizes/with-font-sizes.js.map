{"version":3,"sources":["@wordpress/block-editor/src/components/font-sizes/with-font-sizes.js"],"names":["fontSizeNames","fontSizeAttributeNames","fontSizeAttributeNamesAccumulator","fontSizeAttributeName","select","getSettings","fontSizes","WrappedComponent","props","setters","createSetters","state","settersAccumulator","customFontSizeAttributeName","upperFirstFontSizeAttributeName","createSetFontSize","fontSizeValue","fontSizeObject","size","setAttributes","slug","undefined","previousState","attributes","didAttributesChange","newState","newStateAccumulator","fontSizeAttributeValue","class","Component"],"mappings":";;;;;;;;;AASA;;;;;;;;;;;;;;;;AANA;;AAKA;;AAEA;;AAKA;;AAfA;;;;AAKA;;;;AAOA;;;;AAKA;;;;;;;;;eASe,oBAAwB;AAAA,oCAAnBA,aAAmB;AAAnBA,IAAAA,aAAmB;AAAA;;AACtC;;;;;AAKA,MAAMC,sBAAsB,GAAG,oBAAQD,aAAR,EAAuB,UAAEE,iCAAF,EAAqCC,qBAArC,EAAgE;AACrHD,IAAAA,iCAAiC,CAAEC,qBAAF,CAAjC,mBAAuE,wBAAYA,qBAAZ,CAAvE;AACA,WAAOD,iCAAP;AACA,GAH8B,EAG5B,EAH4B,CAA/B;AAKA,SAAO,yCACN,sBAAS,CACR,sBAAY,UAAEE,MAAF,EAAc;AAAA,8BACHA,MAAM,CAAE,mBAAF,CAAN,CAA8BC,WAA9B,EADG;AAAA,QACjBC,SADiB,uBACjBA,SADiB;;AAEzB,WAAO;AACNA,MAAAA,SAAS,EAATA;AADM,KAAP;AAGA,GALD,CADQ,EAOR,UAAEC,gBAAF,EAAwB;AACvB;AAAA;AAAA;AAAA;;AACC,wBAAaC,KAAb,EAAqB;AAAA;;AAAA;AACpB,kHAAOA,KAAP;AAEA,gBAAKC,OAAL,GAAe,MAAKC,aAAL,EAAf;AAEA,gBAAKC,KAAL,GAAa,EAAb;AALoB;AAMpB;;AAPF;AAAA;AAAA,0CASiB;AAAA;;AACf,mBAAO,oBAAQV,sBAAR,EAAgC,UAAEW,kBAAF,EAAsBC,2BAAtB,EAAmDV,qBAAnD,EAA8E;AACpH,kBAAMW,+BAA+B,GAAG,wBAAYX,qBAAZ,CAAxC;AACAS,cAAAA,kBAAkB,cAASE,+BAAT,EAAlB,GACC,MAAI,CAACC,iBAAL,CAAwBZ,qBAAxB,EAA+CU,2BAA/C,CADD;AAEA,qBAAOD,kBAAP;AACA,aALM,EAKJ,EALI,CAAP;AAMA;AAhBF;AAAA;AAAA,4CAkBoBT,qBAlBpB,EAkB2CU,2BAlB3C,EAkByE;AAAA;;AACvE,mBAAO,UAAEG,aAAF,EAAqB;AAAA;;AAC3B,kBAAMC,cAAc,GAAG,kBAAM,MAAI,CAACT,KAAL,CAAWF,SAAjB,EAA4B;AAAEY,gBAAAA,IAAI,EAAEF;AAAR,eAA5B,CAAvB;;AACA,cAAA,MAAI,CAACR,KAAL,CAAWW,aAAX,mFACGhB,qBADH,EAC4Bc,cAAc,IAAIA,cAAc,CAACG,IAAjC,GAAwCH,cAAc,CAACG,IAAvD,GAA8DC,SAD1F,wDAEGR,2BAFH,EAEkCI,cAAc,IAAIA,cAAc,CAACG,IAAjC,GAAwCC,SAAxC,GAAoDL,aAFtF;AAIA,aAND;AAOA;AA1BF;AAAA;AAAA,mCAsEU;AACR,mBACC,4BAAC,gBAAD,kCAEK,KAAKR,KAFV;AAGEF,cAAAA,SAAS,EAAEe;AAHb,eAIK,KAAKV,KAJV,EAKK,KAAKF,OALV,EADD;AAUA;AAjFF;AAAA;AAAA,yDA4B6Da,aA5B7D,EA4B6E;AAAA,gBAAzCC,UAAyC,QAAzCA,UAAyC;AAAA,gBAA7BjB,SAA6B,QAA7BA,SAA6B;;AAC3E,gBAAMkB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAEX,2BAAF,EAA+BV,qBAA/B,EAA0D;AACrF,kBAAKmB,aAAa,CAAEnB,qBAAF,CAAlB,EAA8C;AAC7C;AACA,oBAAKoB,UAAU,CAAEpB,qBAAF,CAAf,EAA2C;AAC1C,yBAAOoB,UAAU,CAAEpB,qBAAF,CAAV,KAAwCmB,aAAa,CAAEnB,qBAAF,CAAb,CAAuCiB,IAAtF;AACA,iBAJ4C,CAK7C;;;AACA,uBAAOE,aAAa,CAAEnB,qBAAF,CAAb,CAAuCe,IAAvC,KAAgDK,UAAU,CAAEV,2BAAF,CAAjE;AACA,eARoF,CASrF;;;AACA,qBAAO,IAAP;AACA,aAXD;;AAaA,gBAAK,CAAE,kBAAMZ,sBAAN,EAA8BuB,mBAA9B,CAAP,EAA6D;AAC5D,qBAAO,IAAP;AACA;;AAED,gBAAMC,QAAQ,GAAG,oBAChB,oBAAQxB,sBAAR,EAAgCuB,mBAAhC,CADgB,EAEhB,UAAEE,mBAAF,EAAuBb,2BAAvB,EAAoDV,qBAApD,EAA+E;AAC9E,kBAAMwB,sBAAsB,GAAGJ,UAAU,CAAEpB,qBAAF,CAAzC;AACA,kBAAMc,cAAc,GAAG,wBACtBX,SADsB,EAEtBqB,sBAFsB,EAGtBJ,UAAU,CAAEV,2BAAF,CAHY,CAAvB;AAKAa,cAAAA,mBAAmB,CAAEvB,qBAAF,CAAnB,mCACIc,cADJ;AAECW,gBAAAA,KAAK,EAAE,6BAAkBD,sBAAlB;AAFR;AAIA,qBAAOD,mBAAP;AACA,aAde,EAehB,EAfgB,CAAjB;AAkBA,mDACIJ,aADJ,EAEIG,QAFJ;AAIA;AApEF;AAAA;AAAA,QAAqBI,kBAArB;AAAA;AAmFA,GA3FO,CAAT,CADM,EA8FN,eA9FM,CAAP;AAgGA,C","sourcesContent":["/**\n * External dependencies\n */\nimport { find, pickBy, reduce, some, upperFirst } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { createHigherOrderComponent, compose } from '@wordpress/compose';\nimport { Component } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { getFontSize, getFontSizeClass } from './utils';\n\n/**\n * Higher-order component, which handles font size logic for class generation,\n * font size value retrieval, and font size change handling.\n *\n * @param {...(object|string)} args The arguments should all be strings\n *                                  Each string contains the font size attribute name e.g: 'fontSize'.\n *\n * @return {Function} Higher-order component.\n */\nexport default ( ...fontSizeNames ) => {\n\t/*\n\t* Computes an object whose key is the font size attribute name as passed in the array,\n\t* and the value is the custom font size attribute name.\n\t* Custom font size is automatically compted by appending custom followed by the font size attribute name in with the first letter capitalized.\n\t*/\n\tconst fontSizeAttributeNames = reduce( fontSizeNames, ( fontSizeAttributeNamesAccumulator, fontSizeAttributeName ) => {\n\t\tfontSizeAttributeNamesAccumulator[ fontSizeAttributeName ] = `custom${ upperFirst( fontSizeAttributeName ) }`;\n\t\treturn fontSizeAttributeNamesAccumulator;\n\t}, {} );\n\n\treturn createHigherOrderComponent(\n\t\tcompose( [\n\t\t\twithSelect( ( select ) => {\n\t\t\t\tconst { fontSizes } = select( 'core/block-editor' ).getSettings();\n\t\t\t\treturn {\n\t\t\t\t\tfontSizes,\n\t\t\t\t};\n\t\t\t} ),\n\t\t\t( WrappedComponent ) => {\n\t\t\t\treturn class extends Component {\n\t\t\t\t\tconstructor( props ) {\n\t\t\t\t\t\tsuper( props );\n\n\t\t\t\t\t\tthis.setters = this.createSetters();\n\n\t\t\t\t\t\tthis.state = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tcreateSetters() {\n\t\t\t\t\t\treturn reduce( fontSizeAttributeNames, ( settersAccumulator, customFontSizeAttributeName, fontSizeAttributeName ) => {\n\t\t\t\t\t\t\tconst upperFirstFontSizeAttributeName = upperFirst( fontSizeAttributeName );\n\t\t\t\t\t\t\tsettersAccumulator[ `set${ upperFirstFontSizeAttributeName }` ] =\n\t\t\t\t\t\t\t\tthis.createSetFontSize( fontSizeAttributeName, customFontSizeAttributeName );\n\t\t\t\t\t\t\treturn settersAccumulator;\n\t\t\t\t\t\t}, {} );\n\t\t\t\t\t}\n\n\t\t\t\t\tcreateSetFontSize( fontSizeAttributeName, customFontSizeAttributeName ) {\n\t\t\t\t\t\treturn ( fontSizeValue ) => {\n\t\t\t\t\t\t\tconst fontSizeObject = find( this.props.fontSizes, { size: fontSizeValue } );\n\t\t\t\t\t\t\tthis.props.setAttributes( {\n\t\t\t\t\t\t\t\t[ fontSizeAttributeName ]: fontSizeObject && fontSizeObject.slug ? fontSizeObject.slug : undefined,\n\t\t\t\t\t\t\t\t[ customFontSizeAttributeName ]: fontSizeObject && fontSizeObject.slug ? undefined : fontSizeValue,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tstatic getDerivedStateFromProps( { attributes, fontSizes }, previousState ) {\n\t\t\t\t\t\tconst didAttributesChange = ( customFontSizeAttributeName, fontSizeAttributeName ) => {\n\t\t\t\t\t\t\tif ( previousState[ fontSizeAttributeName ] ) {\n\t\t\t\t\t\t\t\t// if new font size is name compare with the previous slug\n\t\t\t\t\t\t\t\tif ( attributes[ fontSizeAttributeName ] ) {\n\t\t\t\t\t\t\t\t\treturn attributes[ fontSizeAttributeName ] !== previousState[ fontSizeAttributeName ].slug;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// if font size is not named, update when the font size value changes.\n\t\t\t\t\t\t\t\treturn previousState[ fontSizeAttributeName ].size !== attributes[ customFontSizeAttributeName ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// in this case we need to build the font size object\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif ( ! some( fontSizeAttributeNames, didAttributesChange ) ) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst newState = reduce(\n\t\t\t\t\t\t\tpickBy( fontSizeAttributeNames, didAttributesChange ),\n\t\t\t\t\t\t\t( newStateAccumulator, customFontSizeAttributeName, fontSizeAttributeName ) => {\n\t\t\t\t\t\t\t\tconst fontSizeAttributeValue = attributes[ fontSizeAttributeName ];\n\t\t\t\t\t\t\t\tconst fontSizeObject = getFontSize(\n\t\t\t\t\t\t\t\t\tfontSizes,\n\t\t\t\t\t\t\t\t\tfontSizeAttributeValue,\n\t\t\t\t\t\t\t\t\tattributes[ customFontSizeAttributeName ]\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tnewStateAccumulator[ fontSizeAttributeName ] = {\n\t\t\t\t\t\t\t\t\t...fontSizeObject,\n\t\t\t\t\t\t\t\t\tclass: getFontSizeClass( fontSizeAttributeValue ),\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\treturn newStateAccumulator;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...previousState,\n\t\t\t\t\t\t\t...newState,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\trender() {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<WrappedComponent\n\t\t\t\t\t\t\t\t{ ...{\n\t\t\t\t\t\t\t\t\t...this.props,\n\t\t\t\t\t\t\t\t\tfontSizes: undefined,\n\t\t\t\t\t\t\t\t\t...this.state,\n\t\t\t\t\t\t\t\t\t...this.setters,\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t] ),\n\t\t'withFontSizes'\n\t);\n};\n"]}