{"version":3,"sources":["@wordpress/block-editor/src/components/multi-select-scroll-into-view/index.js"],"names":["MultiSelectScrollIntoView","scrollIntoView","extentClientId","props","extentNode","scrollContainer","onlyScrollIfNeeded","Component","select","getLastMultiSelectedBlockClientId"],"mappings":";;;;;;;;;;;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AAKA;;AAfA;;;;AAKA;;;;AAOA;;;IAKMA,yB;;;;;;;;;;;;yCACgB;AACpB;AACA;AACA,WAAKC,cAAL;AACA;AAED;;;;;;;;;qCAMiB;AAAA,UACRC,cADQ,GACW,KAAKC,KADhB,CACRD,cADQ;;AAEhB,UAAK,CAAEA,cAAP,EAAwB;AACvB;AACA;;AAED,UAAME,UAAU,GAAG,2BAAiBF,cAAjB,CAAnB;;AACA,UAAK,CAAEE,UAAP,EAAoB;AACnB;AACA;;AAED,UAAMC,eAAe,GAAG,6BAAoBD,UAApB,CAAxB,CAXgB,CAahB;AACA;;AACA,UAAK,CAAEC,eAAP,EAAyB;AACxB;AACA;;AAED,sCAAgBD,UAAhB,EAA4BC,eAA5B,EAA6C;AAC5CC,QAAAA,kBAAkB,EAAE;AADwB,OAA7C;AAGA;;;6BAEQ;AACR,aAAO,IAAP;AACA;;;EAvCsCC,kB;;eA0CzB,sBAAY,UAAEC,MAAF,EAAc;AAAA,gBACMA,MAAM,CAAE,mBAAF,CADZ;AAAA,MAChCC,iCADgC,WAChCA,iCADgC;;AAGxC,SAAO;AACNP,IAAAA,cAAc,EAAEO,iCAAiC;AAD3C,GAAP;AAGA,CANc,EAMVT,yBANU,C","sourcesContent":["/**\n * External dependencies\n */\nimport scrollIntoView from 'dom-scroll-into-view';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\nimport { getScrollContainer } from '@wordpress/dom';\n\n/**\n * Internal dependencies\n */\nimport { getBlockDOMNode } from '../../utils/dom';\n\nclass MultiSelectScrollIntoView extends Component {\n\tcomponentDidUpdate() {\n\t\t// Relies on expectation that `componentDidUpdate` will only be called\n\t\t// if value of `extentClientId` changes.\n\t\tthis.scrollIntoView();\n\t}\n\n\t/**\n\t * Ensures that if a multi-selection exists, the extent of the selection is\n\t * visible within the nearest scrollable container.\n\t *\n\t * @return {void}\n\t */\n\tscrollIntoView() {\n\t\tconst { extentClientId } = this.props;\n\t\tif ( ! extentClientId ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst extentNode = getBlockDOMNode( extentClientId );\n\t\tif ( ! extentNode ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst scrollContainer = getScrollContainer( extentNode );\n\n\t\t// If there's no scroll container, it follows that there's no scrollbar\n\t\t// and thus there's no need to try to scroll into view.\n\t\tif ( ! scrollContainer ) {\n\t\t\treturn;\n\t\t}\n\n\t\tscrollIntoView( extentNode, scrollContainer, {\n\t\t\tonlyScrollIfNeeded: true,\n\t\t} );\n\t}\n\n\trender() {\n\t\treturn null;\n\t}\n}\n\nexport default withSelect( ( select ) => {\n\tconst { getLastMultiSelectedBlockClientId } = select( 'core/block-editor' );\n\n\treturn {\n\t\textentClientId: getLastMultiSelectedBlockClientId(),\n\t};\n} )( MultiSelectScrollIntoView );\n"]}