{"version":3,"sources":["@wordpress/block-editor/src/components/color-palette/control.js"],"names":["colorIndicatorAriaLabel","ColorPaletteControl","colors","disableCustomColors","label","onChange","value","colorObject","colorName","name","ariaLabel","toLowerCase","labelElement","withColorContext","hasColorsToChoose"],"mappings":";;;;;;;;;;AAKA;;;;AAFA;;AACA;;AAEA;;AAKA;;AACA;;AACA;;AAbA;;;;AAQA;;;AAOA;AACA,IAAMA,uBAAuB,GAAG,cAAI,kBAAJ,CAAhC;;AAEO,SAASC,mBAAT,OAMH;AAAA,MALHC,MAKG,QALHA,MAKG;AAAA,MAJHC,mBAIG,QAJHA,mBAIG;AAAA,MAHHC,KAGG,QAHHA,KAGG;AAAA,MAFHC,QAEG,QAFHA,QAEG;AAAA,MADHC,KACG,QADHA,KACG;AACH,MAAMC,WAAW,GAAG,wCAA4BL,MAA5B,EAAoCI,KAApC,CAApB;AACA,MAAME,SAAS,GAAGD,WAAW,IAAIA,WAAW,CAACE,IAA7C;AACA,MAAMC,SAAS,GAAG,mBAASV,uBAAT,EAAkCI,KAAK,CAACO,WAAN,EAAlC,EAAuDH,SAAS,IAAIF,KAApE,CAAlB;AAEA,MAAMM,YAAY,GACjB,4BAAC,iBAAD,QACGR,KADH,EAEGE,KAAK,IACN,4BAAC,0BAAD;AACC,IAAA,UAAU,EAAGA,KADd;AAEC,kBAAaI;AAFd,IAHF,CADD;AAYA,SACC,4BAAC,uBAAD;AACC,IAAA,SAAS,EAAC,iEADX;AAEC,IAAA,KAAK,EAAGE;AAFT,KAGC,4BAAC,SAAD;AACC,IAAA,SAAS,EAAC,+FADX;AAEC,IAAA,KAAK,EAAGN,KAFT;AAGC,IAAA,QAAQ,EAAGD;AAHZ,KAIO;AAAEH,IAAAA,MAAM,EAANA,MAAF;AAAUC,IAAAA,mBAAmB,EAAnBA;AAAV,GAJP,EAHD,CADD;AAYA;;eAEc,sBAAS,CACvBU,yBADuB,EAEvB,0BAAa;AAAA,MAAIC,iBAAJ,SAAIA,iBAAJ;AAAA,SAA6BA,iBAA7B;AAAA,CAAb,CAFuB,CAAT,EAGVb,mBAHU,C","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { BaseControl, ColorIndicator } from '@wordpress/components';\nimport { ifCondition, compose } from '@wordpress/compose';\nimport { Fragment } from '@wordpress/element';\nimport { sprintf, __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport ColorPalette from './';\nimport withColorContext from './with-color-context';\nimport { getColorObjectByColorValue } from '../colors';\n\n// translators: first %s: The type of color (e.g. background color), second %s: the color name or value (e.g. red or #ff0000)\nconst colorIndicatorAriaLabel = __( '(current %s: %s)' );\n\nexport function ColorPaletteControl( {\n\tcolors,\n\tdisableCustomColors,\n\tlabel,\n\tonChange,\n\tvalue,\n} ) {\n\tconst colorObject = getColorObjectByColorValue( colors, value );\n\tconst colorName = colorObject && colorObject.name;\n\tconst ariaLabel = sprintf( colorIndicatorAriaLabel, label.toLowerCase(), colorName || value );\n\n\tconst labelElement = (\n\t\t<Fragment>\n\t\t\t{ label }\n\t\t\t{ value && (\n\t\t\t\t<ColorIndicator\n\t\t\t\t\tcolorValue={ value }\n\t\t\t\t\taria-label={ ariaLabel }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</Fragment>\n\t);\n\n\treturn (\n\t\t<BaseControl\n\t\t\tclassName=\"editor-color-palette-control block-editor-color-palette-control\"\n\t\t\tlabel={ labelElement }>\n\t\t\t<ColorPalette\n\t\t\t\tclassName=\"editor-color-palette-control__color-palette block-editor-color-palette-control__color-palette\"\n\t\t\t\tvalue={ value }\n\t\t\t\tonChange={ onChange }\n\t\t\t\t{ ... { colors, disableCustomColors } }\n\t\t\t/>\n\t\t</BaseControl>\n\t);\n}\n\nexport default compose( [\n\twithColorContext,\n\tifCondition( ( { hasColorsToChoose } ) => hasColorsToChoose ),\n] )( ColorPaletteControl );\n"]}