{"version":3,"sources":["@wordpress/block-editor/src/components/block-alignment-toolbar/index.js"],"names":["__","Toolbar","withViewportMatch","withSelect","compose","withBlockEditContext","BLOCK_ALIGNMENTS_CONTROLS","left","icon","title","center","right","wide","full","DEFAULT_CONTROLS","WIDE_CONTROLS","BlockAlignmentToolbar","isCollapsed","value","onChange","controls","wideControlsEnabled","applyOrUnset","align","undefined","enabledControls","filter","control","indexOf","activeAlignment","map","isActive","onClick","clientId","isLargeViewport","select","getBlockRootClientId","getSettings","settings","alignWide","hasFixedToolbar"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Toolbar } from '@wordpress/components';\nimport { withViewportMatch } from '@wordpress/viewport';\nimport { withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { withBlockEditContext } from '../block-edit/context';\n\nconst BLOCK_ALIGNMENTS_CONTROLS = {\n\tleft: {\n\t\ticon: 'align-left',\n\t\ttitle: __( 'Align left' ),\n\t},\n\tcenter: {\n\t\ticon: 'align-center',\n\t\ttitle: __( 'Align center' ),\n\t},\n\tright: {\n\t\ticon: 'align-right',\n\t\ttitle: __( 'Align right' ),\n\t},\n\twide: {\n\t\ticon: 'align-wide',\n\t\ttitle: __( 'Wide width' ),\n\t},\n\tfull: {\n\t\ticon: 'align-full-width',\n\t\ttitle: __( 'Full width' ),\n\t},\n};\n\nconst DEFAULT_CONTROLS = [ 'left', 'center', 'right', 'wide', 'full' ];\nconst WIDE_CONTROLS = [ 'wide', 'full' ];\n\nexport function BlockAlignmentToolbar( { isCollapsed, value, onChange, controls = DEFAULT_CONTROLS, wideControlsEnabled = false } ) {\n\tfunction applyOrUnset( align ) {\n\t\treturn () => onChange( value === align ? undefined : align );\n\t}\n\n\tconst enabledControls = wideControlsEnabled ?\n\t\tcontrols :\n\t\tcontrols.filter( ( control ) => WIDE_CONTROLS.indexOf( control ) === -1 );\n\n\tconst activeAlignment = BLOCK_ALIGNMENTS_CONTROLS[ value ];\n\n\treturn (\n\t\t<Toolbar\n\t\t\tisCollapsed={ isCollapsed }\n\t\t\ticon={ activeAlignment ? activeAlignment.icon : 'align-left' }\n\t\t\tlabel={ __( 'Change Alignment' ) }\n\t\t\tcontrols={\n\t\t\t\tenabledControls.map( ( control ) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...BLOCK_ALIGNMENTS_CONTROLS[ control ],\n\t\t\t\t\t\tisActive: value === control,\n\t\t\t\t\t\tonClick: applyOrUnset( control ),\n\t\t\t\t\t};\n\t\t\t\t} )\n\t\t\t}\n\t\t/>\n\t);\n}\n\nexport default compose(\n\twithBlockEditContext( ( { clientId } ) => {\n\t\treturn {\n\t\t\tclientId,\n\t\t};\n\t} ),\n\twithViewportMatch( { isLargeViewport: 'medium' } ),\n\twithSelect( ( select, { clientId, isLargeViewport, isCollapsed } ) => {\n\t\tconst { getBlockRootClientId, getSettings } = select( 'core/block-editor' );\n\t\tconst settings = getSettings();\n\t\treturn {\n\t\t\twideControlsEnabled: settings.alignWide,\n\t\t\tisCollapsed: isCollapsed || ! isLargeViewport || (\n\t\t\t\t! settings.hasFixedToolbar &&\n\t\t\t\tgetBlockRootClientId( clientId )\n\t\t\t),\n\t\t};\n\t} ),\n)( BlockAlignmentToolbar );\n"]}