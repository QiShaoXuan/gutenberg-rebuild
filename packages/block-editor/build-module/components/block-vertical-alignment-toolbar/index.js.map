{"version":3,"sources":["@wordpress/block-editor/src/components/block-vertical-alignment-toolbar/index.js"],"names":["_x","Toolbar","withViewportMatch","withSelect","compose","withBlockEditContext","alignTop","alignCenter","alignBottom","BLOCK_ALIGNMENTS_CONTROLS","top","icon","title","center","bottom","DEFAULT_CONTROLS","DEFAULT_CONTROL","BlockVerticalAlignmentToolbar","isCollapsed","value","onChange","controls","applyOrUnset","align","undefined","activeAlignment","defaultAlignmentControl","map","control","isActive","onClick","clientId","isLargeViewport","select","getBlockRootClientId","getEditorSettings","hasFixedToolbar"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { _x } from '@wordpress/i18n';\nimport { Toolbar } from '@wordpress/components';\nimport { withViewportMatch } from '@wordpress/viewport';\nimport { withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { withBlockEditContext } from '../block-edit/context';\nimport { alignTop, alignCenter, alignBottom } from './icons';\n\nconst BLOCK_ALIGNMENTS_CONTROLS = {\n\ttop: {\n\t\ticon: alignTop,\n\t\ttitle: _x( 'Vertically Align Top', 'Block vertical alignment setting' ),\n\t},\n\tcenter: {\n\t\ticon: alignCenter,\n\t\ttitle: _x( 'Vertically Align Middle', 'Block vertical alignment setting' ),\n\t},\n\tbottom: {\n\t\ticon: alignBottom,\n\t\ttitle: _x( 'Vertically Align Bottom', 'Block vertical alignment setting' ),\n\t},\n};\n\nconst DEFAULT_CONTROLS = [ 'top', 'center', 'bottom' ];\nconst DEFAULT_CONTROL = 'top';\n\nexport function BlockVerticalAlignmentToolbar( { isCollapsed, value, onChange, controls = DEFAULT_CONTROLS } ) {\n\tfunction applyOrUnset( align ) {\n\t\treturn () => onChange( value === align ? undefined : align );\n\t}\n\n\tconst activeAlignment = BLOCK_ALIGNMENTS_CONTROLS[ value ];\n\tconst defaultAlignmentControl = BLOCK_ALIGNMENTS_CONTROLS[ DEFAULT_CONTROL ];\n\n\treturn (\n\t\t<Toolbar\n\t\t\tisCollapsed={ isCollapsed }\n\t\t\ticon={ activeAlignment ? activeAlignment.icon : defaultAlignmentControl.icon }\n\t\t\tlabel={ _x( 'Change Alignment', 'Block vertical alignment setting label' ) }\n\t\t\tcontrols={\n\t\t\t\tcontrols.map( ( control ) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...BLOCK_ALIGNMENTS_CONTROLS[ control ],\n\t\t\t\t\t\tisActive: value === control,\n\t\t\t\t\t\tonClick: applyOrUnset( control ),\n\t\t\t\t\t};\n\t\t\t\t} )\n\t\t\t}\n\t\t/>\n\t);\n}\n\nexport default compose(\n\twithBlockEditContext( ( { clientId } ) => {\n\t\treturn {\n\t\t\tclientId,\n\t\t};\n\t} ),\n\twithViewportMatch( { isLargeViewport: 'medium' } ),\n\twithSelect( ( select, { clientId, isLargeViewport, isCollapsed } ) => {\n\t\tconst { getBlockRootClientId, getEditorSettings } = select( 'core/editor' );\n\t\treturn {\n\t\t\tisCollapsed: isCollapsed || ! isLargeViewport || (\n\t\t\t\t! getEditorSettings().hasFixedToolbar &&\n\t\t\t\tgetBlockRootClientId( clientId )\n\t\t\t),\n\t\t};\n\t} ),\n)( BlockVerticalAlignmentToolbar );\n"]}