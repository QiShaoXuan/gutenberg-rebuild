{"version":3,"sources":["@wordpress/block-editor/src/components/provider/with-registry-provider.js"],"names":["useState","useEffect","withRegistry","createRegistry","RegistryProvider","createHigherOrderComponent","storeConfig","applyMiddlewares","withRegistryProvider","WrappedComponent","useSubRegistry","registry","props","subRegistry","setSubRegistry","newRegistry","store","registerStore"],"mappings":";;;;;AAAA;;;AAGA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,gBAAvC,QAA+D,iBAA/D;AACA,SAASC,0BAAT,QAA2C,oBAA3C;AAEA;;;;AAGA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AAEA,IAAMC,oBAAoB,GAAGH,0BAA0B,CAAE,UAAEI,gBAAF,EAAwB;AAChF,SAAOP,YAAY,CAAE,gBAAqD;AAAA,mCAAjDQ,cAAiD;AAAA,QAAjDA,cAAiD,oCAAhC,IAAgC;AAAA,QAA1BC,QAA0B,QAA1BA,QAA0B;AAAA,QAAbC,KAAa;;AACzE,QAAK,CAAEF,cAAP,EAAwB;AACvB,aAAO,cAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAGC;AAA7B,SAA6CC,KAA7C,EAAP;AACA;;AAHwE,oBAKjCZ,QAAQ,CAAE,IAAF,CALyB;AAAA;AAAA,QAKjEa,WALiE;AAAA,QAKpDC,cALoD;;AAMzEb,IAAAA,SAAS,CAAE,YAAM;AAChB,UAAMc,WAAW,GAAGZ,cAAc,CAAE,EAAF,EAAMQ,QAAN,CAAlC;AACA,UAAMK,KAAK,GAAGD,WAAW,CAACE,aAAZ,CAA2B,mBAA3B,EAAgDX,WAAhD,CAAd,CAFgB,CAGhB;;AACAC,MAAAA,gBAAgB,CAAES,KAAF,CAAhB;AACAF,MAAAA,cAAc,CAAEC,WAAF,CAAd;AACA,KANQ,EAMN,CAAEJ,QAAF,CANM,CAAT;;AAQA,QAAK,CAAEE,WAAP,EAAqB;AACpB,aAAO,IAAP;AACA;;AAED,WACC,cAAC,gBAAD;AAAkB,MAAA,KAAK,EAAGA;AAA1B,OACC,cAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAGA;AAA7B,OAAgDD,KAAhD,EADD,CADD;AAKA,GAvBkB,CAAnB;AAwBA,CAzBsD,EAyBpD,sBAzBoD,CAAvD;AA2BA,eAAeJ,oBAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState, useEffect } from '@wordpress/element';\nimport { withRegistry, createRegistry, RegistryProvider } from '@wordpress/data';\nimport { createHigherOrderComponent } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { storeConfig } from '../../store';\nimport applyMiddlewares from '../../store/middlewares';\n\nconst withRegistryProvider = createHigherOrderComponent( ( WrappedComponent ) => {\n\treturn withRegistry( ( { useSubRegistry = true, registry, ...props } ) => {\n\t\tif ( ! useSubRegistry ) {\n\t\t\treturn <WrappedComponent registry={ registry } { ...props } />;\n\t\t}\n\n\t\tconst [ subRegistry, setSubRegistry ] = useState( null );\n\t\tuseEffect( () => {\n\t\t\tconst newRegistry = createRegistry( {}, registry );\n\t\t\tconst store = newRegistry.registerStore( 'core/block-editor', storeConfig );\n\t\t\t// This should be removed after the refactoring of the effects to controls.\n\t\t\tapplyMiddlewares( store );\n\t\t\tsetSubRegistry( newRegistry );\n\t\t}, [ registry ] );\n\n\t\tif ( ! subRegistry ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<RegistryProvider value={ subRegistry }>\n\t\t\t\t<WrappedComponent registry={ subRegistry } { ...props } />\n\t\t\t</RegistryProvider>\n\t\t);\n\t} );\n}, 'withRegistryProvider' );\n\nexport default withRegistryProvider;\n"]}