{"version":3,"sources":["@wordpress/core-data/src/reducer.js"],"names":["keyBy","map","groupBy","flowRight","combineReducers","ifMatchingAction","replaceAction","reducer","queriedDataReducer","defaultEntities","DEFAULT_ENTITY_KEY","terms","state","action","type","taxonomy","users","byId","queries","queryID","user","id","taxonomies","themeSupports","entity","entityConfig","name","kind","key","entitiesConfig","entities","newConfig","config","entitiesDataReducer","entitiesByKind","Object","entries","reduce","memo","subEntities","kindReducer","kindMemo","newData","data","embedPreviews","url","preview","userPermissions","isAllowed"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { keyBy, map, groupBy, flowRight } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { ifMatchingAction, replaceAction } from './utils';\nimport { reducer as queriedDataReducer } from './queried-data';\nimport { defaultEntities, DEFAULT_ENTITY_KEY } from './entities';\n\n/**\n * Reducer managing terms state. Keyed by taxonomy slug, the value is either\n * undefined (if no request has been made for given taxonomy), null (if a\n * request is in-flight for given taxonomy), or the array of terms for the\n * taxonomy.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function terms( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_TERMS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.taxonomy ]: action.terms,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing authors state. Keyed by id.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function users( state = { byId: {}, queries: {} }, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_USER_QUERY':\n\t\t\treturn {\n\t\t\t\tbyId: {\n\t\t\t\t\t...state.byId,\n\t\t\t\t\t...keyBy( action.users, 'id' ),\n\t\t\t\t},\n\t\t\t\tqueries: {\n\t\t\t\t\t...state.queries,\n\t\t\t\t\t[ action.queryID ]: map( action.users, ( user ) => user.id ),\n\t\t\t\t},\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing taxonomies.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function taxonomies( state = [], action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_TAXONOMIES':\n\t\t\treturn action.taxonomies;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing theme supports data.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function themeSupports( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_THEME_SUPPORTS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.themeSupports,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Higher Order Reducer for a given entity config. It supports:\n *\n *  - Fetching a record by primary key\n *\n * @param {Object} entityConfig  Entity config.\n *\n * @return {Function} Reducer.\n */\nfunction entity( entityConfig ) {\n\treturn flowRight( [\n\t\t// Limit to matching action type so we don't attempt to replace action on\n\t\t// an unhandled action.\n\t\tifMatchingAction( ( action ) => (\n\t\t\taction.name &&\n\t\t\taction.kind &&\n\t\t\taction.name === entityConfig.name &&\n\t\t\taction.kind === entityConfig.kind\n\t\t) ),\n\n\t\t// Inject the entity config into the action.\n\t\treplaceAction( ( action ) => {\n\t\t\treturn {\n\t\t\t\t...action,\n\t\t\t\tkey: entityConfig.key || DEFAULT_ENTITY_KEY,\n\t\t\t};\n\t\t} ),\n\t] )( queriedDataReducer );\n}\n\n/**\n * Reducer keeping track of the registered entities.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function entitiesConfig( state = defaultEntities, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_ENTITIES':\n\t\t\treturn [\n\t\t\t\t...state,\n\t\t\t\t...action.entities,\n\t\t\t];\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer keeping track of the registered entities config and data.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport const entities = ( state = {}, action ) => {\n\tconst newConfig = entitiesConfig( state.config, action );\n\n\t// Generates a dynamic reducer for the entities\n\tlet entitiesDataReducer = state.reducer;\n\tif ( ! entitiesDataReducer || newConfig !== state.config ) {\n\t\tconst entitiesByKind = groupBy( newConfig, 'kind' );\n\t\tentitiesDataReducer = combineReducers( Object.entries( entitiesByKind ).reduce( ( memo, [ kind, subEntities ] ) => {\n\t\t\tconst kindReducer = combineReducers( subEntities.reduce(\n\t\t\t\t( kindMemo, entityConfig ) => ( {\n\t\t\t\t\t...kindMemo,\n\t\t\t\t\t[ entityConfig.name ]: entity( entityConfig ),\n\t\t\t\t} ),\n\t\t\t\t{}\n\t\t\t) );\n\n\t\t\tmemo[ kind ] = kindReducer;\n\t\t\treturn memo;\n\t\t}, {} ) );\n\t}\n\n\tconst newData = entitiesDataReducer( state.data, action );\n\n\tif (\n\t\tnewData === state.data &&\n\t\tnewConfig === state.config &&\n\t\tentitiesDataReducer === state.reducer\n\t) {\n\t\treturn state;\n\t}\n\n\treturn {\n\t\treducer: entitiesDataReducer,\n\t\tdata: newData,\n\t\tconfig: newConfig,\n\t};\n};\n\n/**\n * Reducer managing embed preview data.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function embedPreviews( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_EMBED_PREVIEW':\n\t\t\tconst { url, preview } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ url ]: preview,\n\t\t\t};\n\t}\n\treturn state;\n}\n\n/**\n * State which tracks whether the user can perform an action on a REST\n * resource.\n *\n * @param  {Object} state  Current state.\n * @param  {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function userPermissions( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_USER_PERMISSION':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.key ]: action.isAllowed,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( {\n\tterms,\n\tusers,\n\ttaxonomies,\n\tthemeSupports,\n\tentities,\n\tembedPreviews,\n\tuserPermissions,\n} );\n"]}