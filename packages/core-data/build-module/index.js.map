{"version":3,"sources":["@wordpress/core-data/src/index.js"],"names":["registerStore","reducer","controls","selectors","actions","resolvers","defaultEntities","getMethodName","REDUCER_KEY","entitySelectors","reduce","result","entity","kind","name","state","key","getEntityRecord","args","getEntityRecords","entityResolvers","pluralMethodName","shouldInvalidate","action","entityActions","saveEntityRecord"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { registerStore } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport controls from './controls';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport * as resolvers from './resolvers';\nimport { defaultEntities, getMethodName } from './entities';\nimport { REDUCER_KEY } from './name';\n\n// The entity selectors/resolvers and actions are shortcuts to their generic equivalents\n// (getEntityRecord, getEntityRecords, updateEntityRecord, updateEntityRecordss)\n// Instead of getEntityRecord, the consumer could use more user-frieldly named selector: getPostType, getTaxonomy...\n// The \"kind\" and the \"name\" of the entity are combined to generate these shortcuts.\n\nconst entitySelectors = defaultEntities.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name ) ] = ( state, key ) => selectors.getEntityRecord( state, kind, name, key );\n\tresult[ getMethodName( kind, name, 'get', true ) ] = ( state, ...args ) => selectors.getEntityRecords( state, kind, name, ...args );\n\treturn result;\n}, {} );\n\nconst entityResolvers = defaultEntities.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name ) ] = ( key ) => resolvers.getEntityRecord( kind, name, key );\n\tconst pluralMethodName = getMethodName( kind, name, 'get', true );\n\tresult[ pluralMethodName ] = ( ...args ) => resolvers.getEntityRecords( kind, name, ...args );\n\tresult[ pluralMethodName ].shouldInvalidate = ( action, ...args ) => resolvers.getEntityRecords.shouldInvalidate( action, kind, name, ...args );\n\treturn result;\n}, {} );\n\nconst entityActions = defaultEntities.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name, 'save' ) ] = ( key ) => actions.saveEntityRecord( kind, name, key );\n\treturn result;\n}, {} );\n\nregisterStore( REDUCER_KEY, {\n\treducer,\n\tcontrols,\n\tactions: { ...actions, ...entityActions },\n\tselectors: { ...selectors, ...entitySelectors },\n\tresolvers: { ...resolvers, ...entityResolvers },\n} );\n"]}