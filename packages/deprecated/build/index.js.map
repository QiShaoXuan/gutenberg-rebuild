{"version":3,"sources":["@wordpress/deprecated/src/index.js"],"names":["logged","Object","create","deprecated","feature","options","version","alternative","plugin","link","hint","pluginMessage","versionMessage","useInsteadMessage","linkMessage","hintMessage","message","console","warn"],"mappings":";;;;;;;;AAGA;;AAHA;;;;AAKA;;;;;;AAMO,IAAMA,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAe,IAAf,CAAf;AAEP;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBe,SAASC,UAAT,CAAqBC,OAArB,EAA6C;AAAA,MAAfC,OAAe,uEAAL,EAAK;AAAA,MAE1DC,OAF0D,GAOvDD,OAPuD,CAE1DC,OAF0D;AAAA,MAG1DC,WAH0D,GAOvDF,OAPuD,CAG1DE,WAH0D;AAAA,MAI1DC,MAJ0D,GAOvDH,OAPuD,CAI1DG,MAJ0D;AAAA,MAK1DC,IAL0D,GAOvDJ,OAPuD,CAK1DI,IAL0D;AAAA,MAM1DC,IAN0D,GAOvDL,OAPuD,CAM1DK,IAN0D;AAS3D,MAAMC,aAAa,GAAGH,MAAM,mBAAaA,MAAb,IAAyB,EAArD;AACA,MAAMI,cAAc,GAAGN,OAAO,aAAOK,aAAP,iBAA6BL,OAA7B,IAA0C,EAAxE;AACA,MAAMO,iBAAiB,GAAGN,WAAW,yBAAmBA,WAAnB,iBAA6C,EAAlF;AACA,MAAMO,WAAW,GAAGL,IAAI,mBAAaA,IAAb,IAAuB,EAA/C;AACA,MAAMM,WAAW,GAAGL,IAAI,oBAAcA,IAAd,IAAwB,EAAhD;AACA,MAAMM,OAAO,aAAOZ,OAAP,+CAAqDQ,cAArD,cAAyEC,iBAAzE,SAA+FC,WAA/F,SAA+GC,WAA/G,CAAb,CAd2D,CAgB3D;;AACA,MAAKC,OAAO,IAAIhB,MAAhB,EAAyB;AACxB;AACA;AAED;;;;;;;;;;;;;;AAYA,uBAAU,YAAV,EAAwBI,OAAxB,EAAiCC,OAAjC,EAA0CW,OAA1C,EAjC2D,CAmC3D;;AACAC,EAAAA,OAAO,CAACC,IAAR,CAAcF,OAAd;AAEAhB,EAAAA,MAAM,CAAEgB,OAAF,CAAN,GAAoB,IAApB;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { doAction } from '@wordpress/hooks';\n\n/**\n * Object map tracking messages which have been logged, for use in ensuring a\n * message is only logged once.\n *\n * @type {Object}\n */\nexport const logged = Object.create( null );\n\n/**\n * Logs a message to notify developers about a deprecated feature.\n *\n * @param {string}  feature             Name of the deprecated feature.\n * @param {?Object} options             Personalisation options\n * @param {?string} options.version     Version in which the feature will be removed.\n * @param {?string} options.alternative Feature to use instead\n * @param {?string} options.plugin      Plugin name if it's a plugin feature\n * @param {?string} options.link        Link to documentation\n * @param {?string} options.hint        Additional message to help transition away from the deprecated feature.\n *\n * @example\n * ```js\n * import deprecated from '@wordpress/deprecated';\n *\n * deprecated( 'Eating meat', {\n * \tversion: 'the future',\n * \talternative: 'vegetables',\n * \tplugin: 'the earth',\n * \thint: 'You may find it beneficial to transition gradually.',\n * } );\n *\n * // Logs: 'Eating meat is deprecated and will be removed from the earth in the future. Please use vegetables instead. Note: You may find it beneficial to transition gradually.'\n * ```\n */\nexport default function deprecated( feature, options = {} ) {\n\tconst {\n\t\tversion,\n\t\talternative,\n\t\tplugin,\n\t\tlink,\n\t\thint,\n\t} = options;\n\n\tconst pluginMessage = plugin ? ` from ${ plugin }` : '';\n\tconst versionMessage = version ? `${ pluginMessage } in ${ version }` : '';\n\tconst useInsteadMessage = alternative ? ` Please use ${ alternative } instead.` : '';\n\tconst linkMessage = link ? ` See: ${ link }` : '';\n\tconst hintMessage = hint ? ` Note: ${ hint }` : '';\n\tconst message = `${ feature } is deprecated and will be removed${ versionMessage }.${ useInsteadMessage }${ linkMessage }${ hintMessage }`;\n\n\t// Skip if already logged.\n\tif ( message in logged ) {\n\t\treturn;\n\t}\n\n\t/**\n\t * Fires whenever a deprecated feature is encountered\n\t *\n\t * @param {string}  feature             Name of the deprecated feature.\n\t * @param {?Object} options             Personalisation options\n\t * @param {?string} options.version     Version in which the feature will be removed.\n\t * @param {?string} options.alternative Feature to use instead\n\t * @param {?string} options.plugin      Plugin name if it's a plugin feature\n\t * @param {?string} options.link        Link to documentation\n\t * @param {?string} options.hint        Additional message to help transition away from the deprecated feature.\n\t * @param {?string} message             Message sent to console.warn\n\t */\n\tdoAction( 'deprecated', feature, options, message );\n\n\t// eslint-disable-next-line no-console\n\tconsole.warn( message );\n\n\tlogged[ message ] = true;\n}\n"]}