{"version":3,"sources":["@wordpress/edit-post/src/components/visual-editor/block-inspector-button.js"],"names":["flow","noop","__","MenuItem","withSpokenMessages","withSelect","withDispatch","compose","shortcuts","BlockInspectorButton","areAdvancedSettingsOpened","closeSidebar","openEditorSidebar","onClick","small","speak","speakMessage","label","toggleSidebar","select","getActiveGeneralSidebarName","dispatch","openGeneralSidebar","closeGeneralSidebar"],"mappings":";;AAAA;;;AAGA,SAASA,IAAT,EAAeC,IAAf,QAA2B,QAA3B;AAEA;;;;AAGA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,QAAT,EAAmBC,kBAAnB,QAA6C,uBAA7C;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iBAAzC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA;;;;AAGA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,OAAO,SAASC,oBAAT,OAOH;AAAA,MANHC,yBAMG,QANHA,yBAMG;AAAA,MALHC,YAKG,QALHA,YAKG;AAAA,MAJHC,iBAIG,QAJHA,iBAIG;AAAA,0BAHHC,OAGG;AAAA,MAHHA,OAGG,6BAHOZ,IAGP;AAAA,wBAFHa,KAEG;AAAA,MAFHA,KAEG,2BAFK,KAEL;AAAA,MADHC,KACG,QADHA,KACG;;AACH,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC1B,QAAKN,yBAAL,EAAiC;AAChCK,MAAAA,KAAK,CAAEb,EAAE,CAAE,uBAAF,CAAJ,CAAL;AACA,KAFD,MAEO;AACNa,MAAAA,KAAK,CAAEb,EAAE,CAAE,4EAAF,CAAJ,CAAL;AACA;AACD,GAND;;AAQA,MAAMe,KAAK,GAAGP,yBAAyB,GAAGR,EAAE,CAAE,qBAAF,CAAL,GAAiCA,EAAE,CAAE,qBAAF,CAA1E;AAEA,SACC,cAAC,QAAD;AACC,IAAA,SAAS,EAAC,+EADX;AAEC,IAAA,OAAO,EAAGF,IAAI,CAAEU,yBAAyB,GAAGC,YAAH,GAAkBC,iBAA7C,EAAgEI,YAAhE,EAA8EH,OAA9E,CAFf;AAGC,IAAA,IAAI,EAAC,eAHN;AAIC,IAAA,QAAQ,EAAGL,SAAS,CAACU;AAJtB,KAMG,CAAEJ,KAAF,IAAWG,KANd,CADD;AAUA;AAED,eAAeV,OAAO,CACrBF,UAAU,CAAE,UAAEc,MAAF;AAAA,SAAgB;AAC3BT,IAAAA,yBAAyB,EAAES,MAAM,CAAE,gBAAF,CAAN,CAA2BC,2BAA3B,OAA6D;AAD7D,GAAhB;AAAA,CAAF,CADW,EAIrBd,YAAY,CAAE,UAAEe,QAAF;AAAA,SAAkB;AAC/BT,IAAAA,iBAAiB,EAAE;AAAA,aAAMS,QAAQ,CAAE,gBAAF,CAAR,CAA6BC,kBAA7B,CAAiD,iBAAjD,CAAN;AAAA,KADY;AAE/BX,IAAAA,YAAY,EAAEU,QAAQ,CAAE,gBAAF,CAAR,CAA6BE;AAFZ,GAAlB;AAAA,CAAF,CAJS,EAQrBnB,kBARqB,CAAP,CASZK,oBATY,CAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { flow, noop } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { MenuItem, withSpokenMessages } from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport shortcuts from '../../keyboard-shortcuts';\n\nexport function BlockInspectorButton( {\n\tareAdvancedSettingsOpened,\n\tcloseSidebar,\n\topenEditorSidebar,\n\tonClick = noop,\n\tsmall = false,\n\tspeak,\n} ) {\n\tconst speakMessage = () => {\n\t\tif ( areAdvancedSettingsOpened ) {\n\t\t\tspeak( __( 'Block settings closed' ) );\n\t\t} else {\n\t\t\tspeak( __( 'Additional settings are now available in the Editor block settings sidebar' ) );\n\t\t}\n\t};\n\n\tconst label = areAdvancedSettingsOpened ? __( 'Hide Block Settings' ) : __( 'Show Block Settings' );\n\n\treturn (\n\t\t<MenuItem\n\t\t\tclassName=\"editor-block-settings-menu__control block-editor-block-settings-menu__control\"\n\t\t\tonClick={ flow( areAdvancedSettingsOpened ? closeSidebar : openEditorSidebar, speakMessage, onClick ) }\n\t\t\ticon=\"admin-generic\"\n\t\t\tshortcut={ shortcuts.toggleSidebar }\n\t\t>\n\t\t\t{ ! small && label }\n\t\t</MenuItem>\n\t);\n}\n\nexport default compose(\n\twithSelect( ( select ) => ( {\n\t\tareAdvancedSettingsOpened: select( 'core/edit-post' ).getActiveGeneralSidebarName() === 'edit-post/block',\n\t} ) ),\n\twithDispatch( ( dispatch ) => ( {\n\t\topenEditorSidebar: () => dispatch( 'core/edit-post' ).openGeneralSidebar( 'edit-post/block' ),\n\t\tcloseSidebar: dispatch( 'core/edit-post' ).closeGeneralSidebar,\n\t} ) ),\n\twithSpokenMessages,\n)( BlockInspectorButton );\n"]}