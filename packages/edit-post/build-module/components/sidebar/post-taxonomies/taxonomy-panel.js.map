{"version":3,"sources":["@wordpress/edit-post/src/components/sidebar/post-taxonomies/taxonomy-panel.js"],"names":["get","compose","PanelBody","withSelect","withDispatch","TaxonomyPanel","isEnabled","taxonomy","isOpened","onTogglePanel","children","taxonomyMenuName","select","ownProps","slug","panelName","isEditorPanelEnabled","isEditorPanelOpened","dispatch","toggleEditorPanelOpened"],"mappings":";;AAAA;;;AAGA,SAASA,GAAT,QAAoB,QAApB;AAEA;;;;AAGA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iBAAzC;;AAEA,SAASC,aAAT,OAAqF;AAAA,MAA3DC,SAA2D,QAA3DA,SAA2D;AAAA,MAAhDC,QAAgD,QAAhDA,QAAgD;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;AAAA,MAA5BC,aAA4B,QAA5BA,aAA4B;AAAA,MAAbC,QAAa,QAAbA,QAAa;;AACpF,MAAK,CAAEJ,SAAP,EAAmB;AAClB,WAAO,IAAP;AACA;;AAED,MAAMK,gBAAgB,GAAGX,GAAG,CAAEO,QAAF,EAAY,CAAE,QAAF,EAAY,WAAZ,CAAZ,CAA5B;;AACA,MAAK,CAAEI,gBAAP,EAA0B;AACzB,WAAO,IAAP;AACA;;AAED,SACC,cAAC,SAAD;AACC,IAAA,KAAK,EAAGA,gBADT;AAEC,IAAA,MAAM,EAAGH,QAFV;AAGC,IAAA,QAAQ,EAAGC;AAHZ,KAKGC,QALH,CADD;AASA;;AAED,eAAeT,OAAO,CACrBE,UAAU,CAAE,UAAES,MAAF,EAAUC,QAAV,EAAwB;AACnC,MAAMC,IAAI,GAAGd,GAAG,CAAEa,QAAQ,CAACN,QAAX,EAAqB,CAAE,MAAF,CAArB,CAAhB;AACA,MAAMQ,SAAS,GAAGD,IAAI,4BAAsBA,IAAtB,IAAgC,EAAtD;AACA,SAAO;AACNC,IAAAA,SAAS,EAATA,SADM;AAENT,IAAAA,SAAS,EAAEQ,IAAI,GACdF,MAAM,CAAE,gBAAF,CAAN,CAA2BI,oBAA3B,CAAiDD,SAAjD,CADc,GAEd,KAJK;AAKNP,IAAAA,QAAQ,EAAEM,IAAI,GACbF,MAAM,CAAE,gBAAF,CAAN,CAA2BK,mBAA3B,CAAgDF,SAAhD,CADa,GAEb;AAPK,GAAP;AASA,CAZS,CADW,EAcrBX,YAAY,CAAE,UAAEc,QAAF,EAAYL,QAAZ;AAAA,SAA4B;AACzCJ,IAAAA,aAAa,EAAE,yBAAM;AACpBS,MAAAA,QAAQ,CAAE,gBAAF,CAAR,CAA6BC,uBAA7B,CAAsDN,QAAQ,CAACE,SAA/D;AACA;AAHwC,GAA5B;AAAA,CAAF,CAdS,CAAP,CAmBZV,aAnBY,CAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { compose } from '@wordpress/compose';\nimport { PanelBody } from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\n\nfunction TaxonomyPanel( { isEnabled, taxonomy, isOpened, onTogglePanel, children } ) {\n\tif ( ! isEnabled ) {\n\t\treturn null;\n\t}\n\n\tconst taxonomyMenuName = get( taxonomy, [ 'labels', 'menu_name' ] );\n\tif ( ! taxonomyMenuName ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PanelBody\n\t\t\ttitle={ taxonomyMenuName }\n\t\t\topened={ isOpened }\n\t\t\tonToggle={ onTogglePanel }\n\t\t>\n\t\t\t{ children }\n\t\t</PanelBody>\n\t);\n}\n\nexport default compose(\n\twithSelect( ( select, ownProps ) => {\n\t\tconst slug = get( ownProps.taxonomy, [ 'slug' ] );\n\t\tconst panelName = slug ? `taxonomy-panel-${ slug }` : '';\n\t\treturn {\n\t\t\tpanelName,\n\t\t\tisEnabled: slug ?\n\t\t\t\tselect( 'core/edit-post' ).isEditorPanelEnabled( panelName ) :\n\t\t\t\tfalse,\n\t\t\tisOpened: slug ?\n\t\t\t\tselect( 'core/edit-post' ).isEditorPanelOpened( panelName ) :\n\t\t\t\tfalse,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps ) => ( {\n\t\tonTogglePanel: () => {\n\t\t\tdispatch( 'core/edit-post' ).toggleEditorPanelOpened( ownProps.panelName );\n\t\t},\n\t} ) ),\n)( TaxonomyPanel );\n"]}