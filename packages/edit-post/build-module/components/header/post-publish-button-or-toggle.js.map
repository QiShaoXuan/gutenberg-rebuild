{"version":3,"sources":["@wordpress/edit-post/src/components/header/post-publish-button-or-toggle.js"],"names":["get","compose","withDispatch","withSelect","PostPublishButton","withViewportMatch","PostPublishButtonOrToggle","forceIsDirty","forceIsSaving","hasPublishAction","isBeingScheduled","isLessThanMediumViewport","isPending","isPublished","isPublishSidebarEnabled","isPublishSidebarOpened","isScheduled","togglePublishSidebar","IS_TOGGLE","IS_BUTTON","component","select","getCurrentPost","isEditedPostBeingScheduled","isCurrentPostPending","isCurrentPostPublished","isCurrentPostScheduled","dispatch"],"mappings":";;AAAA;;;AAGA,SAASA,GAAT,QAAoB,QAApB;AAEA;;;;AAGA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,iBAAzC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,OAAO,SAASC,yBAAT,OAYH;AAAA,MAXHC,YAWG,QAXHA,YAWG;AAAA,MAVHC,aAUG,QAVHA,aAUG;AAAA,MATHC,gBASG,QATHA,gBASG;AAAA,MARHC,gBAQG,QARHA,gBAQG;AAAA,MAPHC,wBAOG,QAPHA,wBAOG;AAAA,MANHC,SAMG,QANHA,SAMG;AAAA,MALHC,WAKG,QALHA,WAKG;AAAA,MAJHC,uBAIG,QAJHA,uBAIG;AAAA,MAHHC,sBAGG,QAHHA,sBAGG;AAAA,MAFHC,WAEG,QAFHA,WAEG;AAAA,MADHC,oBACG,QADHA,oBACG;AACH,MAAMC,SAAS,GAAG,QAAlB;AACA,MAAMC,SAAS,GAAG,QAAlB;AACA,MAAIC,SAAJ;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAsBA,MACCP,WAAW,IACTG,WAAW,IAAIN,gBADjB,IAEEE,SAAS,IAAI,CAAEH,gBAAf,IAAmC,CAAEE,wBAHxC,EAIE;AACDS,IAAAA,SAAS,GAAGD,SAAZ;AACA,GAND,MAMO,IAAKR,wBAAL,EAAgC;AACtCS,IAAAA,SAAS,GAAGF,SAAZ;AACA,GAFM,MAEA,IAAKJ,uBAAL,EAA+B;AACrCM,IAAAA,SAAS,GAAGF,SAAZ;AACA,GAFM,MAEA;AACNE,IAAAA,SAAS,GAAGD,SAAZ;AACA;;AAED,SACC,cAAC,iBAAD;AACC,IAAA,YAAY,EAAGZ,YADhB;AAEC,IAAA,aAAa,EAAGC,aAFjB;AAGC,IAAA,MAAM,EAAGO,sBAHV;AAIC,IAAA,QAAQ,EAAGK,SAAS,KAAKF,SAJ1B;AAKC,IAAA,QAAQ,EAAGD;AALZ,IADD;AASA;AAED,eAAehB,OAAO,CACrBE,UAAU,CAAE,UAAEkB,MAAF;AAAA,SAAgB;AAC3BZ,IAAAA,gBAAgB,EAAET,GAAG,CACpBqB,MAAM,CAAE,aAAF,CAAN,CAAwBC,cAAxB,EADoB,EAEpB,CAAE,QAAF,EAAY,mBAAZ,CAFoB,EAGpB,KAHoB,CADM;AAM3BZ,IAAAA,gBAAgB,EAAEW,MAAM,CAAE,aAAF,CAAN,CAAwBE,0BAAxB,EANS;AAO3BX,IAAAA,SAAS,EAAES,MAAM,CAAE,aAAF,CAAN,CAAwBG,oBAAxB,EAPgB;AAQ3BX,IAAAA,WAAW,EAAEQ,MAAM,CAAE,aAAF,CAAN,CAAwBI,sBAAxB,EARc;AAS3BX,IAAAA,uBAAuB,EAAEO,MAAM,CAAE,aAAF,CAAN,CAAwBP,uBAAxB,EATE;AAU3BC,IAAAA,sBAAsB,EAAEM,MAAM,CAAE,gBAAF,CAAN,CAA2BN,sBAA3B,EAVG;AAW3BC,IAAAA,WAAW,EAAEK,MAAM,CAAE,aAAF,CAAN,CAAwBK,sBAAxB;AAXc,GAAhB;AAAA,CAAF,CADW,EAcrBxB,YAAY,CAAE,UAAEyB,QAAF,EAAgB;AAAA,kBACIA,QAAQ,CAAE,gBAAF,CADZ;AAAA,MACrBV,oBADqB,aACrBA,oBADqB;;AAE7B,SAAO;AACNA,IAAAA,oBAAoB,EAApBA;AADM,GAAP;AAGA,CALW,CAdS,EAoBrBZ,iBAAiB,CAAE;AAAEM,EAAAA,wBAAwB,EAAE;AAA5B,CAAF,CApBI,CAAP,CAqBZL,yBArBY,CAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { compose } from '@wordpress/compose';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { PostPublishButton } from '@wordpress/editor';\nimport { withViewportMatch } from '@wordpress/viewport';\n\nexport function PostPublishButtonOrToggle( {\n\tforceIsDirty,\n\tforceIsSaving,\n\thasPublishAction,\n\tisBeingScheduled,\n\tisLessThanMediumViewport,\n\tisPending,\n\tisPublished,\n\tisPublishSidebarEnabled,\n\tisPublishSidebarOpened,\n\tisScheduled,\n\ttogglePublishSidebar,\n} ) {\n\tconst IS_TOGGLE = 'toggle';\n\tconst IS_BUTTON = 'button';\n\tlet component;\n\n\t/**\n\t * Conditions to show a BUTTON (publish directly) or a TOGGLE (open publish sidebar):\n\t *\n\t * 1) We want to show a BUTTON when the post status is at the _final stage_\n\t * for a particular role (see https://codex.wordpress.org/Post_Status):\n\t *\n\t * - is published\n\t * - is scheduled to be published\n\t * - is pending and can't be published (but only for viewports >= medium).\n\t * \t Originally, we considered showing a button for pending posts that couldn't be published\n\t * \t (for example, for an author with the contributor role). Some languages can have\n\t * \t long translations for \"Submit for review\", so given the lack of UI real estate available\n\t * \t we decided to take into account the viewport in that case.\n\t *  \t See: https://github.com/WordPress/gutenberg/issues/10475\n\t *\n\t * 2) Then, in small viewports, we'll show a TOGGLE.\n\t *\n\t * 3) Finally, we'll use the publish sidebar status to decide:\n\t *\n\t * - if it is enabled, we show a TOGGLE\n\t * - if it is disabled, we show a BUTTON\n\t */\n\tif (\n\t\tisPublished ||\n\t\t( isScheduled && isBeingScheduled ) ||\n\t\t( isPending && ! hasPublishAction && ! isLessThanMediumViewport )\n\t) {\n\t\tcomponent = IS_BUTTON;\n\t} else if ( isLessThanMediumViewport ) {\n\t\tcomponent = IS_TOGGLE;\n\t} else if ( isPublishSidebarEnabled ) {\n\t\tcomponent = IS_TOGGLE;\n\t} else {\n\t\tcomponent = IS_BUTTON;\n\t}\n\n\treturn (\n\t\t<PostPublishButton\n\t\t\tforceIsDirty={ forceIsDirty }\n\t\t\tforceIsSaving={ forceIsSaving }\n\t\t\tisOpen={ isPublishSidebarOpened }\n\t\t\tisToggle={ component === IS_TOGGLE }\n\t\t\tonToggle={ togglePublishSidebar }\n\t\t/>\n\t);\n}\n\nexport default compose(\n\twithSelect( ( select ) => ( {\n\t\thasPublishAction: get(\n\t\t\tselect( 'core/editor' ).getCurrentPost(),\n\t\t\t[ '_links', 'wp:action-publish' ],\n\t\t\tfalse\n\t\t),\n\t\tisBeingScheduled: select( 'core/editor' ).isEditedPostBeingScheduled(),\n\t\tisPending: select( 'core/editor' ).isCurrentPostPending(),\n\t\tisPublished: select( 'core/editor' ).isCurrentPostPublished(),\n\t\tisPublishSidebarEnabled: select( 'core/editor' ).isPublishSidebarEnabled(),\n\t\tisPublishSidebarOpened: select( 'core/edit-post' ).isPublishSidebarOpened(),\n\t\tisScheduled: select( 'core/editor' ).isCurrentPostScheduled(),\n\t} ) ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { togglePublishSidebar } = dispatch( 'core/edit-post' );\n\t\treturn {\n\t\t\ttogglePublishSidebar,\n\t\t};\n\t} ),\n\twithViewportMatch( { isLessThanMediumViewport: '< medium' } ),\n)( PostPublishButtonOrToggle );\n"]}