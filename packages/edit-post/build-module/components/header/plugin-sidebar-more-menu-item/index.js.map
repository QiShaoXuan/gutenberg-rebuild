{"version":3,"sources":["@wordpress/edit-post/src/components/header/plugin-sidebar-more-menu-item/index.js"],"names":["compose","withSelect","withDispatch","withPluginContext","PluginMoreMenuItem","PluginSidebarMoreMenuItem","children","icon","isSelected","onClick","context","ownProps","sidebarName","name","target","select","getActiveGeneralSidebarName","dispatch","closeGeneralSidebar","openGeneralSidebar"],"mappings":";;AAAA;;;AAGA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iBAAzC;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AAEA;;;;AAGA,OAAOC,kBAAP,MAA+B,0BAA/B;;AAEA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B;AAAA,MAAIC,QAAJ,QAAIA,QAAJ;AAAA,MAAcC,IAAd,QAAcA,IAAd;AAAA,MAAoBC,UAApB,QAAoBA,UAApB;AAAA,MAAgCC,OAAhC,QAAgCA,OAAhC;AAAA,SACjC,cAAC,kBAAD;AACC,IAAA,IAAI,EAAGD,UAAU,GAAG,KAAH,GAAWD,IAD7B;AAEC,IAAA,UAAU,EAAGC,UAFd;AAGC,IAAA,IAAI,EAAC,kBAHN;AAIC,IAAA,OAAO,EAAGC;AAJX,KAMGH,QANH,CADiC;AAAA,CAAlC;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,eAAeN,OAAO,CACrBG,iBAAiB,CAAE,UAAEO,OAAF,EAAWC,QAAX,EAAyB;AAC3C,SAAO;AACNJ,IAAAA,IAAI,EAAEI,QAAQ,CAACJ,IAAT,IAAiBG,OAAO,CAACH,IADzB;AAENK,IAAAA,WAAW,YAAMF,OAAO,CAACG,IAAd,cAAwBF,QAAQ,CAACG,MAAjC;AAFL,GAAP;AAIA,CALgB,CADI,EAOrBb,UAAU,CAAE,UAAEc,MAAF,SAA+B;AAAA,MAAnBH,WAAmB,SAAnBA,WAAmB;;AAAA,gBAGtCG,MAAM,CAAE,gBAAF,CAHgC;AAAA,MAEzCC,2BAFyC,WAEzCA,2BAFyC;;AAK1C,SAAO;AACNR,IAAAA,UAAU,EAAEQ,2BAA2B,OAAOJ;AADxC,GAAP;AAGA,CARS,CAPW,EAgBrBV,YAAY,CAAE,UAAEe,QAAF,SAA6C;AAAA,MAA/BT,UAA+B,SAA/BA,UAA+B;AAAA,MAAnBI,WAAmB,SAAnBA,WAAmB;;AAAA,kBAItDK,QAAQ,CAAE,gBAAF,CAJ8C;AAAA,MAEzDC,mBAFyD,aAEzDA,mBAFyD;AAAA,MAGzDC,kBAHyD,aAGzDA,kBAHyD;;AAK1D,MAAMV,OAAO,GAAGD,UAAU,GACzBU,mBADyB,GAEzB;AAAA,WAAMC,kBAAkB,CAAEP,WAAF,CAAxB;AAAA,GAFD;AAIA,SAAO;AAAEH,IAAAA,OAAO,EAAPA;AAAF,GAAP;AACA,CAVW,CAhBS,CAAP,CA2BZJ,yBA3BY,CAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { withPluginContext } from '@wordpress/plugins';\n\n/**\n * Internal dependencies\n */\nimport PluginMoreMenuItem from '../plugin-more-menu-item';\n\nconst PluginSidebarMoreMenuItem = ( { children, icon, isSelected, onClick } ) => (\n\t<PluginMoreMenuItem\n\t\ticon={ isSelected ? 'yes' : icon }\n\t\tisSelected={ isSelected }\n\t\trole=\"menuitemcheckbox\"\n\t\tonClick={ onClick }\n\t>\n\t\t{ children }\n\t</PluginMoreMenuItem>\n);\n\n/**\n * Renders a menu item in `Plugins` group in `More Menu` drop down,\n * and can be used to activate the corresponding `PluginSidebar` component.\n * The text within the component appears as the menu item label.\n *\n * @param {Object} props Component props.\n * @param {string} props.target A string identifying the target sidebar you wish to be activated by this menu item. Must be the same as the `name` prop you have given to that sidebar.\n * @param {string|Element} [props.icon=inherits from the plugin] The [Dashicon](https://developer.wordpress.org/resource/dashicons/) icon slug string, or an SVG WP element, to be rendered to the left of the menu item label.\n *\n * @example <caption>ES5</caption>\n * ```js\n * // Using ES5 syntax\n * var __ = wp.i18n.__;\n * var PluginSidebarMoreMenuItem = wp.editPost.PluginSidebarMoreMenuItem;\n *\n * function MySidebarMoreMenuItem() {\n * \treturn wp.element.createElement(\n * \t\tPluginSidebarMoreMenuItem,\n * \t\t{\n * \t\t\ttarget: 'my-sidebar',\n * \t\t\ticon: 'smiley',\n * \t\t},\n * \t\t__( 'My sidebar title' )\n * \t)\n * }\n * ```\n *\n * @example <caption>ESNext</caption>\n * ```jsx\n * // Using ESNext syntax\n * const { __ } = wp.i18n;\n * const { PluginSidebarMoreMenuItem } = wp.editPost;\n *\n * const MySidebarMoreMenuItem = () => (\n * \t<PluginSidebarMoreMenuItem\n * \t\ttarget=\"my-sidebar\"\n * \t\ticon=\"smiley\"\n * \t>\n * \t\t{ __( 'My sidebar title' ) }\n * \t</PluginSidebarMoreMenuItem>\n * );\n * ```\n *\n * @return {WPElement} The element to be rendered.\n */\nexport default compose(\n\twithPluginContext( ( context, ownProps ) => {\n\t\treturn {\n\t\t\ticon: ownProps.icon || context.icon,\n\t\t\tsidebarName: `${ context.name }/${ ownProps.target }`,\n\t\t};\n\t} ),\n\twithSelect( ( select, { sidebarName } ) => {\n\t\tconst {\n\t\t\tgetActiveGeneralSidebarName,\n\t\t} = select( 'core/edit-post' );\n\n\t\treturn {\n\t\t\tisSelected: getActiveGeneralSidebarName() === sidebarName,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { isSelected, sidebarName } ) => {\n\t\tconst {\n\t\t\tcloseGeneralSidebar,\n\t\t\topenGeneralSidebar,\n\t\t} = dispatch( 'core/edit-post' );\n\t\tconst onClick = isSelected ?\n\t\t\tcloseGeneralSidebar :\n\t\t\t() => openGeneralSidebar( sidebarName );\n\n\t\treturn { onClick };\n\t} ),\n)( PluginSidebarMoreMenuItem );\n"]}