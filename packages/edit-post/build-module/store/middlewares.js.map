{"version":3,"sources":["@wordpress/edit-post/src/store/middlewares.js"],"names":["flowRight","refx","effects","applyMiddlewares","store","middlewares","enhancedDispatch","Error","chain","middlewareAPI","getState","dispatch","map","middleware"],"mappings":";;AAAA;;;AAGA,SAASA,SAAT,QAA0B,QAA1B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA;;;;AAGA,OAAOC,OAAP,MAAoB,WAApB;AAEA;;;;;;;;AAOA,SAASC,gBAAT,CAA2BC,KAA3B,EAAmC;AAClC,MAAMC,WAAW,GAAG,CACnBJ,IAAI,CAAEC,OAAF,CADe,CAApB;;AAIA,MAAII,gBAAgB,GAAG,4BAAM;AAC5B,UAAM,IAAIC,KAAJ,CACL,oEACA,yDAFK,CAAN;AAIA,GALD;;AAMA,MAAIC,KAAK,GAAG,EAAZ;AAEA,MAAMC,aAAa,GAAG;AACrBC,IAAAA,QAAQ,EAAEN,KAAK,CAACM,QADK;AAErBC,IAAAA,QAAQ,EAAE;AAAA,aAAeL,gBAAgB,MAAhB,mBAAf;AAAA;AAFW,GAAtB;AAIAE,EAAAA,KAAK,GAAGH,WAAW,CAACO,GAAZ,CAAiB,UAAEC,UAAF;AAAA,WAAkBA,UAAU,CAAEJ,aAAF,CAA5B;AAAA,GAAjB,CAAR;AACAH,EAAAA,gBAAgB,GAAGN,SAAS,MAAT,4BAAcQ,KAAd,GAAuBJ,KAAK,CAACO,QAA7B,CAAnB;AAEAP,EAAAA,KAAK,CAACO,QAAN,GAAiBL,gBAAjB;AACA,SAAOF,KAAP;AACA;;AAED,eAAeD,gBAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { flowRight } from 'lodash';\nimport refx from 'refx';\n\n/**\n * Internal dependencies\n */\nimport effects from './effects';\n\n/**\n * Applies the custom middlewares used specifically in the editor module.\n *\n * @param {Object} store Store Object.\n *\n * @return {Object} Update Store Object.\n */\nfunction applyMiddlewares( store ) {\n\tconst middlewares = [\n\t\trefx( effects ),\n\t];\n\n\tlet enhancedDispatch = () => {\n\t\tthrow new Error(\n\t\t\t'Dispatching while constructing your middleware is not allowed. ' +\n\t\t\t'Other middleware would not be applied to this dispatch.'\n\t\t);\n\t};\n\tlet chain = [];\n\n\tconst middlewareAPI = {\n\t\tgetState: store.getState,\n\t\tdispatch: ( ...args ) => enhancedDispatch( ...args ),\n\t};\n\tchain = middlewares.map( ( middleware ) => middleware( middlewareAPI ) );\n\tenhancedDispatch = flowRight( ...chain )( store.dispatch );\n\n\tstore.dispatch = enhancedDispatch;\n\treturn store;\n}\n\nexport default applyMiddlewares;\n"]}