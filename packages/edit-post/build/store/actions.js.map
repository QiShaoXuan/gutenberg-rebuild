{"version":3,"sources":["@wordpress/edit-post/src/store/actions.js"],"names":["openGeneralSidebar","name","type","closeGeneralSidebar","openModal","closeModal","openPublishSidebar","closePublishSidebar","togglePublishSidebar","toggleEditorPanelEnabled","panelName","toggleEditorPanelOpened","removeEditorPanel","toggleFeature","feature","switchEditorMode","mode","togglePinnedPluginItem","pluginName","hideBlockTypes","blockNames","showBlockTypes","setAvailableMetaBoxesPerLocation","metaBoxesPerLocation","requestMetaBoxUpdates","metaBoxUpdatesSuccess"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAGA;;AAHA;;;;AAKA;;;;;;;AAOO,SAASA,kBAAT,CAA6BC,IAA7B,EAAoC;AAC1C,SAAO;AACNC,IAAAA,IAAI,EAAE,sBADA;AAEND,IAAAA,IAAI,EAAJA;AAFM,GAAP;AAIA;AAED;;;;;;;AAKO,SAASE,mBAAT,GAA+B;AACrC,SAAO;AACND,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA;AAED;;;;;;;;;AAOO,SAASE,SAAT,CAAoBH,IAApB,EAA2B;AACjC,SAAO;AACNC,IAAAA,IAAI,EAAE,YADA;AAEND,IAAAA,IAAI,EAAJA;AAFM,GAAP;AAIA;AAED;;;;;;;AAKO,SAASI,UAAT,GAAsB;AAC5B,SAAO;AACNH,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA;AAED;;;;;;;;AAMO,SAASI,kBAAT,GAA8B;AACpC,SAAO;AACNJ,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA;AAED;;;;;;;;AAMO,SAASK,mBAAT,GAA+B;AACrC,SAAO;AACNL,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA;AAED;;;;;;;AAKO,SAASM,oBAAT,GAAgC;AACtC,SAAO;AACNN,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA;AAED;;;;;;;;;AAOO,SAASO,wBAAT,CAAmCC,SAAnC,EAA+C;AACrD,SAAO;AACNR,IAAAA,IAAI,EAAE,sBADA;AAENQ,IAAAA,SAAS,EAATA;AAFM,GAAP;AAIA;AAED;;;;;;;;;AAOO,SAASC,uBAAT,CAAkCD,SAAlC,EAA8C;AACpD,SAAO;AACNR,IAAAA,IAAI,EAAE,qBADA;AAENQ,IAAAA,SAAS,EAATA;AAFM,GAAP;AAIA;AAED;;;;;;;;;AAOO,SAASE,iBAAT,CAA4BF,SAA5B,EAAwC;AAC9C,SAAO;AACNR,IAAAA,IAAI,EAAE,cADA;AAENQ,IAAAA,SAAS,EAATA;AAFM,GAAP;AAIA;AAED;;;;;;;;;AAOO,SAASG,aAAT,CAAwBC,OAAxB,EAAkC;AACxC,SAAO;AACNZ,IAAAA,IAAI,EAAE,gBADA;AAENY,IAAAA,OAAO,EAAPA;AAFM,GAAP;AAIA;;AAEM,SAASC,gBAAT,CAA2BC,IAA3B,EAAkC;AACxC,SAAO;AACNd,IAAAA,IAAI,EAAE,aADA;AAENc,IAAAA,IAAI,EAAJA;AAFM,GAAP;AAIA;AAED;;;;;;;;;AAOO,SAASC,sBAAT,CAAiCC,UAAjC,EAA8C;AACpD,SAAO;AACNhB,IAAAA,IAAI,EAAE,2BADA;AAENgB,IAAAA,UAAU,EAAVA;AAFM,GAAP;AAIA;AAED;;;;;;;;;;AAQO,SAASC,cAAT,CAAyBC,UAAzB,EAAsC;AAC5C,SAAO;AACNlB,IAAAA,IAAI,EAAE,kBADA;AAENkB,IAAAA,UAAU,EAAE,uBAAWA,UAAX;AAFN,GAAP;AAIA;AAED;;;;;;;;;;AAQO,SAASC,cAAT,CAAyBD,UAAzB,EAAsC;AAC5C,SAAO;AACNlB,IAAAA,IAAI,EAAE,kBADA;AAENkB,IAAAA,UAAU,EAAE,uBAAWA,UAAX;AAFN,GAAP;AAIA;AAED;;;;;;;;;;AAQO,SAASE,gCAAT,CAA2CC,oBAA3C,EAAkE;AACxE,SAAO;AACNrB,IAAAA,IAAI,EAAE,8BADA;AAENqB,IAAAA,oBAAoB,EAApBA;AAFM,GAAP;AAIA;AAED;;;;;;;AAKO,SAASC,qBAAT,GAAiC;AACvC,SAAO;AACNtB,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA;AAED;;;;;;;AAKO,SAASuB,qBAAT,GAAiC;AACvC,SAAO;AACNvB,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA","sourcesContent":["/**\n * External dependencies\n */\nimport { castArray } from 'lodash';\n\n/**\n * Returns an action object used in signalling that the user opened an editor sidebar.\n *\n * @param {string} name Sidebar name to be opened.\n *\n * @return {Object} Action object.\n */\nexport function openGeneralSidebar( name ) {\n\treturn {\n\t\ttype: 'OPEN_GENERAL_SIDEBAR',\n\t\tname,\n\t};\n}\n\n/**\n * Returns an action object signalling that the user closed the sidebar.\n *\n * @return {Object} Action object.\n */\nexport function closeGeneralSidebar() {\n\treturn {\n\t\ttype: 'CLOSE_GENERAL_SIDEBAR',\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the user opened a modal.\n *\n * @param {string} name A string that uniquely identifies the modal.\n *\n * @return {Object} Action object.\n */\nexport function openModal( name ) {\n\treturn {\n\t\ttype: 'OPEN_MODAL',\n\t\tname,\n\t};\n}\n\n/**\n * Returns an action object signalling that the user closed a modal.\n *\n * @return {Object} Action object.\n */\nexport function closeModal() {\n\treturn {\n\t\ttype: 'CLOSE_MODAL',\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the user opened the publish\n * sidebar.\n *\n * @return {Object} Action object\n */\nexport function openPublishSidebar() {\n\treturn {\n\t\ttype: 'OPEN_PUBLISH_SIDEBAR',\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the user closed the\n * publish sidebar.\n *\n * @return {Object} Action object.\n */\nexport function closePublishSidebar() {\n\treturn {\n\t\ttype: 'CLOSE_PUBLISH_SIDEBAR',\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the user toggles the publish sidebar.\n *\n * @return {Object} Action object\n */\nexport function togglePublishSidebar() {\n\treturn {\n\t\ttype: 'TOGGLE_PUBLISH_SIDEBAR',\n\t};\n}\n\n/**\n * Returns an action object used to enable or disable a panel in the editor.\n *\n * @param {string} panelName A string that identifies the panel to enable or disable.\n *\n * @return {Object} Action object.\n */\nexport function toggleEditorPanelEnabled( panelName ) {\n\treturn {\n\t\ttype: 'TOGGLE_PANEL_ENABLED',\n\t\tpanelName,\n\t};\n}\n\n/**\n * Returns an action object used to open or close a panel in the editor.\n *\n * @param {string} panelName A string that identifies the panel to open or close.\n *\n * @return {Object} Action object.\n*/\nexport function toggleEditorPanelOpened( panelName ) {\n\treturn {\n\t\ttype: 'TOGGLE_PANEL_OPENED',\n\t\tpanelName,\n\t};\n}\n\n/**\n * Returns an action object used to remove a panel from the editor.\n *\n * @param {string} panelName A string that identifies the panel to remove.\n *\n * @return {Object} Action object.\n */\nexport function removeEditorPanel( panelName ) {\n\treturn {\n\t\ttype: 'REMOVE_PANEL',\n\t\tpanelName,\n\t};\n}\n\n/**\n * Returns an action object used to toggle a feature flag.\n *\n * @param {string} feature Feature name.\n *\n * @return {Object} Action object.\n */\nexport function toggleFeature( feature ) {\n\treturn {\n\t\ttype: 'TOGGLE_FEATURE',\n\t\tfeature,\n\t};\n}\n\nexport function switchEditorMode( mode ) {\n\treturn {\n\t\ttype: 'SWITCH_MODE',\n\t\tmode,\n\t};\n}\n\n/**\n * Returns an action object used to toggle a plugin name flag.\n *\n * @param {string} pluginName Plugin name.\n *\n * @return {Object} Action object.\n */\nexport function togglePinnedPluginItem( pluginName ) {\n\treturn {\n\t\ttype: 'TOGGLE_PINNED_PLUGIN_ITEM',\n\t\tpluginName,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that block types by the given\n * name(s) should be hidden.\n *\n * @param {string[]} blockNames Names of block types to hide.\n *\n * @return {Object} Action object.\n */\nexport function hideBlockTypes( blockNames ) {\n\treturn {\n\t\ttype: 'HIDE_BLOCK_TYPES',\n\t\tblockNames: castArray( blockNames ),\n\t};\n}\n\n/**\n * Returns an action object used in signalling that block types by the given\n * name(s) should be shown.\n *\n * @param {string[]} blockNames Names of block types to show.\n *\n * @return {Object} Action object.\n */\nexport function showBlockTypes( blockNames ) {\n\treturn {\n\t\ttype: 'SHOW_BLOCK_TYPES',\n\t\tblockNames: castArray( blockNames ),\n\t};\n}\n\n/**\n * Returns an action object used in signaling\n * what Meta boxes are available in which location.\n *\n * @param {Object} metaBoxesPerLocation Meta boxes per location.\n *\n * @return {Object} Action object.\n */\nexport function setAvailableMetaBoxesPerLocation( metaBoxesPerLocation ) {\n\treturn {\n\t\ttype: 'SET_META_BOXES_PER_LOCATIONS',\n\t\tmetaBoxesPerLocation,\n\t};\n}\n\n/**\n * Returns an action object used to request meta box update.\n *\n * @return {Object} Action object.\n */\nexport function requestMetaBoxUpdates() {\n\treturn {\n\t\ttype: 'REQUEST_META_BOX_UPDATES',\n\t};\n}\n\n/**\n * Returns an action object used signal a successful meta box update.\n *\n * @return {Object} Action object.\n */\nexport function metaBoxUpdatesSuccess() {\n\treturn {\n\t\ttype: 'META_BOX_UPDATES_SUCCESS',\n\t};\n}\n\n"]}