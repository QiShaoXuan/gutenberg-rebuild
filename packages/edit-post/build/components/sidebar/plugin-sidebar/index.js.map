{"version":3,"sources":["@wordpress/edit-post/src/components/sidebar/plugin-sidebar/index.js"],"names":["PluginSidebar","props","children","className","icon","isActive","isPinnable","isPinned","sidebarName","title","togglePin","toggleSidebar","context","ownProps","name","select","getActiveGeneralSidebarName","isPluginItemPinned","dispatch","closeGeneralSidebar","openGeneralSidebar","togglePinnedPluginItem"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { IconButton, Panel } from '@wordpress/components';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { Fragment } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { withPluginContext } from '@wordpress/plugins';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport PinnedPlugins from '../../header/pinned-plugins';\nimport Sidebar from '../';\nimport SidebarHeader from '../sidebar-header';\n\nfunction PluginSidebar( props ) {\n\tconst {\n\t\tchildren,\n\t\tclassName,\n\t\ticon,\n\t\tisActive,\n\t\tisPinnable = true,\n\t\tisPinned,\n\t\tsidebarName,\n\t\ttitle,\n\t\ttogglePin,\n\t\ttoggleSidebar,\n\t} = props;\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{ isPinnable && (\n\t\t\t\t<PinnedPlugins>\n\t\t\t\t\t{ isPinned && <IconButton\n\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\tlabel={ title }\n\t\t\t\t\t\tonClick={ toggleSidebar }\n\t\t\t\t\t\tisToggled={ isActive }\n\t\t\t\t\t\taria-expanded={ isActive }\n\t\t\t\t\t/> }\n\t\t\t\t</PinnedPlugins>\n\t\t\t) }\n\t\t\t<Sidebar\n\t\t\t\tname={ sidebarName }\n\t\t\t\tlabel={ __( 'Editor plugins' ) }\n\t\t\t>\n\t\t\t\t<SidebarHeader\n\t\t\t\t\tcloseLabel={ __( 'Close plugin' ) }\n\t\t\t\t>\n\t\t\t\t\t<strong>{ title }</strong>\n\t\t\t\t\t{ isPinnable && (\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\ticon={ isPinned ? 'star-filled' : 'star-empty' }\n\t\t\t\t\t\t\tlabel={ isPinned ? __( 'Unpin from toolbar' ) : __( 'Pin to toolbar' ) }\n\t\t\t\t\t\t\tonClick={ togglePin }\n\t\t\t\t\t\t\tisToggled={ isPinned }\n\t\t\t\t\t\t\taria-expanded={ isPinned }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</SidebarHeader>\n\t\t\t\t<Panel className={ className }>\n\t\t\t\t\t{ children }\n\t\t\t\t</Panel>\n\t\t\t</Sidebar>\n\t\t</Fragment>\n\t);\n}\n\n/**\n * Renders a sidebar when activated. The contents within the `PluginSidebar` will appear as content within the sidebar.\n * If you wish to display the sidebar, you can with use the `PluginSidebarMoreMenuItem` component or the `wp.data.dispatch` API:\n *\n * ```js\n * wp.data.dispatch( 'core/edit-post' ).openGeneralSidebar( 'plugin-name/sidebar-name' );\n * ```\n *\n * @see PluginSidebarMoreMenuItem\n *\n * @param {Object} props Element props.\n * @param {string} props.name A string identifying the sidebar. Must be unique for every sidebar registered within the scope of your plugin.\n * @param {string} [props.className] An optional class name added to the sidebar body.\n * @param {string} props.title Title displayed at the top of the sidebar.\n * @param {boolean} [props.isPinnable=true] Whether to allow to pin sidebar to toolbar.\n * @param {string|Element} [props.icon=inherits from the plugin] The [Dashicon](https://developer.wordpress.org/resource/dashicons/) icon slug string, or an SVG WP element, to be rendered when the sidebar is pinned to toolbar.\n *\n * @example <caption>ES5</caption>\n * ```js\n * // Using ES5 syntax\n * var __ = wp.i18n.__;\n * var el = wp.element.createElement;\n * var PanelBody = wp.components.PanelBody;\n * var PluginSidebar = wp.editPost.PluginSidebar;\n *\n * function MyPluginSidebar() {\n * \treturn el(\n * \t\t\tPluginSidebar,\n * \t\t\t{\n * \t\t\t\tname: 'my-sidebar',\n * \t\t\t\ttitle: 'My sidebar title',\n * \t\t\t\ticon: 'smiley',\n * \t\t\t},\n * \t\t\tel(\n * \t\t\t\tPanelBody,\n * \t\t\t\t{},\n * \t\t\t\t__( 'My sidebar content' )\n * \t\t\t)\n * \t);\n * }\n * ```\n *\n * @example <caption>ESNext</caption>\n * ```jsx\n * // Using ESNext syntax\n * const { __ } = wp.i18n;\n * const { PanelBody } = wp.components;\n * const { PluginSidebar } = wp.editPost;\n *\n * const MyPluginSidebar = () => (\n * \t<PluginSidebar\n * \t\tname=\"my-sidebar\"\n * \t\ttitle=\"My sidebar title\"\n * \t\ticon=\"smiley\"\n * \t>\n * \t\t<PanelBody>\n * \t\t\t{ __( 'My sidebar content' ) }\n * \t\t</PanelBody>\n * \t</PluginSidebar>\n * );\n * ```\n *\n * @return {WPElement} Plugin sidebar component.\n */\nexport default compose(\n\twithPluginContext( ( context, ownProps ) => {\n\t\treturn {\n\t\t\ticon: ownProps.icon || context.icon,\n\t\t\tsidebarName: `${ context.name }/${ ownProps.name }`,\n\t\t};\n\t} ),\n\twithSelect( ( select, { sidebarName } ) => {\n\t\tconst {\n\t\t\tgetActiveGeneralSidebarName,\n\t\t\tisPluginItemPinned,\n\t\t} = select( 'core/edit-post' );\n\n\t\treturn {\n\t\t\tisActive: getActiveGeneralSidebarName() === sidebarName,\n\t\t\tisPinned: isPluginItemPinned( sidebarName ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { isActive, sidebarName } ) => {\n\t\tconst {\n\t\t\tcloseGeneralSidebar,\n\t\t\topenGeneralSidebar,\n\t\t\ttogglePinnedPluginItem,\n\t\t} = dispatch( 'core/edit-post' );\n\n\t\treturn {\n\t\t\ttogglePin() {\n\t\t\t\ttogglePinnedPluginItem( sidebarName );\n\t\t\t},\n\t\t\ttoggleSidebar() {\n\t\t\t\tif ( isActive ) {\n\t\t\t\t\tcloseGeneralSidebar();\n\t\t\t\t} else {\n\t\t\t\t\topenGeneralSidebar( sidebarName );\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t} ),\n)( PluginSidebar );\n"]}