{"version":3,"sources":["@wordpress/edit-post/src/components/sidebar/plugin-post-publish-panel/index.js"],"names":["Fill","Slot","PluginPostPublishPanel","children","className","title","initialOpen"],"mappings":";;;;;;;;;AAGA;;AAHA;;;sBAKuB,gCAAgB,wBAAhB,C;IAAfA,I,mBAAAA,I;IAAMC,I,mBAAAA,I;AAEd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA,MAAIC,QAAJ,QAAIA,QAAJ;AAAA,MAAcC,SAAd,QAAcA,SAAd;AAAA,MAAyBC,KAAzB,QAAyBA,KAAzB;AAAA,8BAAgCC,WAAhC;AAAA,MAAgCA,WAAhC,iCAA8C,KAA9C;AAAA,SAC9B,4BAAC,IAAD,QACC,4BAAC,qBAAD;AACC,IAAA,SAAS,EAAGF,SADb;AAEC,IAAA,WAAW,EAAGE,WAAW,IAAI,CAAED,KAFhC;AAGC,IAAA,KAAK,EAAGA;AAHT,KAKGF,QALH,CADD,CAD8B;AAAA,CAA/B;;AAYAD,sBAAsB,CAACD,IAAvB,GAA8BA,IAA9B;eAEeC,sB","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createSlotFill, PanelBody } from '@wordpress/components';\n\nconst { Fill, Slot } = createSlotFill( 'PluginPostPublishPanel' );\n\n/**\n * Renders provided content to the post-publish panel in the publish flow\n * (side panel that opens after a user publishes the post).\n *\n * @param {Object} props Component properties.\n * @param {string} [props.className] An optional class name added to the panel.\n * @param {string} [props.title] Title displayed at the top of the panel.\n * @param {boolean} [props.initialOpen=false] Whether to have the panel initially opened. When no title is provided it is always opened.\n *\n * @example <caption>ES5</caption>\n * ```js\n * // Using ES5 syntax\n * var __ = wp.i18n.__;\n * var PluginPostPublishPanel = wp.editPost.PluginPostPublishPanel;\n *\n * function MyPluginPostPublishPanel() {\n * \treturn wp.element.createElement(\n * \t\tPluginPostPublishPanel,\n * \t\t{\n * \t\t\tclassName: 'my-plugin-post-publish-panel',\n * \t\t\ttitle: __( 'My panel title' ),\n * \t\t\tinitialOpen: true,\n * \t\t},\n * \t\t__( 'My panel content' )\n * \t);\n * }\n * ```\n *\n * @example <caption>ESNext</caption>\n * ```jsx\n * // Using ESNext syntax\n * const { __ } = wp.i18n;\n * const { PluginPostPublishPanel } = wp.editPost;\n *\n * const MyPluginPostPublishPanel = () => (\n * \t<PluginPostPublishPanel\n * \t\tclassName=\"my-plugin-post-publish-panel\"\n * \t\ttitle={ __( 'My panel title' ) }\n * \t\tinitialOpen={ true }\n * \t>\n *         { __( 'My panel content' ) }\n * \t</PluginPostPublishPanel>\n * );\n * ```\n *\n * @return {WPElement} The WPElement to be rendered.\n */\nconst PluginPostPublishPanel = ( { children, className, title, initialOpen = false } ) => (\n\t<Fill>\n\t\t<PanelBody\n\t\t\tclassName={ className }\n\t\t\tinitialOpen={ initialOpen || ! title }\n\t\t\ttitle={ title }\n\t\t>\n\t\t\t{ children }\n\t\t</PanelBody>\n\t</Fill>\n);\n\nPluginPostPublishPanel.Slot = Slot;\n\nexport default PluginPostPublishPanel;\n"]}