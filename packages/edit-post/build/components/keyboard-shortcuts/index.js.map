{"version":3,"sources":["@wordpress/edit-post/src/components/keyboard-shortcuts/index.js"],"names":["EditorModeKeyboardShortcuts","arguments","toggleMode","bind","toggleSidebar","props","mode","switchMode","isRichEditingEnabled","event","preventDefault","isEditorSidebarOpen","closeSidebar","openSidebar","shortcuts","toggleEditorMode","raw","Component","select","getEditorSettings","richEditingEnabled","getEditorMode","isEditorSidebarOpened","dispatch","ownProps","switchEditorMode","getBlockSelectionStart","sidebarToOpen","openGeneralSidebar","closeGeneralSidebar"],"mappings":";;;;;;;;;AAGA;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AAKA;;AAXA;;;;AAQA;;;IAKMA,2B;;;;;AACL,yCAAc;AAAA;;AAAA;AACb,kIAAUC,SAAV;AAEA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,mFAAlB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,mFAArB;AAJa;AAKb;;;;iCAEY;AAAA,wBACuC,KAAKE,KAD5C;AAAA,UACJC,IADI,eACJA,IADI;AAAA,UACEC,UADF,eACEA,UADF;AAAA,UACcC,oBADd,eACcA,oBADd;;AAEZ,UAAK,CAAEA,oBAAP,EAA8B;AAC7B;AACA;;AACDD,MAAAA,UAAU,CAAED,IAAI,KAAK,QAAT,GAAoB,MAApB,GAA6B,QAA/B,CAAV;AACA;;;kCAEcG,K,EAAQ;AACtB;AACA;AACAA,MAAAA,KAAK,CAACC,cAAN;AAHsB,yBAIqC,KAAKL,KAJ1C;AAAA,UAIdM,mBAJc,gBAIdA,mBAJc;AAAA,UAIOC,YAJP,gBAIOA,YAJP;AAAA,UAIqBC,WAJrB,gBAIqBA,WAJrB;;AAMtB,UAAKF,mBAAL,EAA2B;AAC1BC,QAAAA,YAAY;AACZ,OAFD,MAEO;AACNC,QAAAA,WAAW;AACX;AACD;;;6BAEQ;AAAA;;AACR,aACC,4BAAC,6BAAD;AACC,QAAA,UAAU,MADX;AAEC,QAAA,SAAS,kDACNC,2BAAUC,gBAAV,CAA2BC,GADrB,EAC4B,KAAKd,UADjC,uCAENY,2BAAUV,aAAV,CAAwBY,GAFlB,EAEyB,KAAKZ,aAF9B;AAFV,QADD;AASA;;;EAvCwCa,kB;;eA0C3B,sBAAS,CACvB,sBAAY,UAAEC,MAAF;AAAA,SAAgB;AAC3BV,IAAAA,oBAAoB,EAAEU,MAAM,CAAE,aAAF,CAAN,CAAwBC,iBAAxB,GAA4CC,kBADvC;AAE3Bd,IAAAA,IAAI,EAAEY,MAAM,CAAE,gBAAF,CAAN,CAA2BG,aAA3B,EAFqB;AAG3BV,IAAAA,mBAAmB,EAAEO,MAAM,CAAE,gBAAF,CAAN,CAA2BI,qBAA3B;AAHM,GAAhB;AAAA,CAAZ,CADuB,EAMvB,wBAAc,UAAEC,QAAF,EAAYC,QAAZ;AAAA,MAAwBN,MAAxB,SAAwBA,MAAxB;AAAA,SAAwC;AACrDX,IAAAA,UADqD,sBACzCD,IADyC,EAClC;AAClBiB,MAAAA,QAAQ,CAAE,gBAAF,CAAR,CAA6BE,gBAA7B,CAA+CnB,IAA/C;AACA,KAHoD;AAIrDO,IAAAA,WAJqD,yBAIvC;AAAA,oBACsBK,MAAM,CAAE,mBAAF,CAD5B;AAAA,UACLQ,sBADK,WACLA,sBADK;;AAEb,UAAMC,aAAa,GAAGD,sBAAsB,KAAK,iBAAL,GAAyB,oBAArE;AACAH,MAAAA,QAAQ,CAAE,gBAAF,CAAR,CAA6BK,kBAA7B,CAAiDD,aAAjD;AACA,KARoD;AASrDf,IAAAA,YAAY,EAAEW,QAAQ,CAAE,gBAAF,CAAR,CAA6BM;AATU,GAAxC;AAAA,CAAd,CANuB,CAAT,EAiBV7B,2BAjBU,C","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { KeyboardShortcuts } from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport shortcuts from '../../keyboard-shortcuts';\n\nclass EditorModeKeyboardShortcuts extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.toggleMode = this.toggleMode.bind( this );\n\t\tthis.toggleSidebar = this.toggleSidebar.bind( this );\n\t}\n\n\ttoggleMode() {\n\t\tconst { mode, switchMode, isRichEditingEnabled } = this.props;\n\t\tif ( ! isRichEditingEnabled ) {\n\t\t\treturn;\n\t\t}\n\t\tswitchMode( mode === 'visual' ? 'text' : 'visual' );\n\t}\n\n\ttoggleSidebar( event ) {\n\t\t// This shortcut has no known clashes, but use preventDefault to prevent any\n\t\t// obscure shortcuts from triggering.\n\t\tevent.preventDefault();\n\t\tconst { isEditorSidebarOpen, closeSidebar, openSidebar } = this.props;\n\n\t\tif ( isEditorSidebarOpen ) {\n\t\t\tcloseSidebar();\n\t\t} else {\n\t\t\topenSidebar();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<KeyboardShortcuts\n\t\t\t\tbindGlobal\n\t\t\t\tshortcuts={ {\n\t\t\t\t\t[ shortcuts.toggleEditorMode.raw ]: this.toggleMode,\n\t\t\t\t\t[ shortcuts.toggleSidebar.raw ]: this.toggleSidebar,\n\t\t\t\t} }\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => ( {\n\t\tisRichEditingEnabled: select( 'core/editor' ).getEditorSettings().richEditingEnabled,\n\t\tmode: select( 'core/edit-post' ).getEditorMode(),\n\t\tisEditorSidebarOpen: select( 'core/edit-post' ).isEditorSidebarOpened(),\n\t} ) ),\n\twithDispatch( ( dispatch, ownProps, { select } ) => ( {\n\t\tswitchMode( mode ) {\n\t\t\tdispatch( 'core/edit-post' ).switchEditorMode( mode );\n\t\t},\n\t\topenSidebar() {\n\t\t\tconst { getBlockSelectionStart } = select( 'core/block-editor' );\n\t\t\tconst sidebarToOpen = getBlockSelectionStart() ? 'edit-post/block' : 'edit-post/document';\n\t\t\tdispatch( 'core/edit-post' ).openGeneralSidebar( sidebarToOpen );\n\t\t},\n\t\tcloseSidebar: dispatch( 'core/edit-post' ).closeGeneralSidebar,\n\t} ) ),\n] )( EditorModeKeyboardShortcuts );\n"]}