{"version":3,"sources":["@wordpress/edit-post/src/editor.js"],"names":["Editor","arguments","getEditorSettings","maxSize","settings","hasFixedToolbar","focusMode","hiddenBlockTypes","blockTypes","defaultAllowedBlockTypes","allowedBlockTypes","without","props","post","initialEdits","onError","editorSettings","preventEventDiscovery","Component","select","postId","postType","isFeatureActive","getPreference","getEntityRecord","getBlockTypes"],"mappings":";;;;;;;;;AAeA;;;;;;;;;;;;;;;;;;;;AAZA;;AACA;;AAKA;;AACA;;AAMA;;AAKA;;AAEA;;AAvBA;;;;AAMA;;;;AAYA;;;IAOMA,M;;;;;AACL,oBAAc;AAAA;;AAAA;AACb,6GAASC,SAAT;AAEA,UAAKC,iBAAL,GAAyB,qBAAO,MAAKA,iBAAZ,EAA+B;AACvDC,MAAAA,OAAO,EAAE;AAD8C,KAA/B,CAAzB;AAHa;AAMb;;;;sCAGAC,Q,EACAC,e,EACAC,S,EACAC,gB,EACAC,U,EACC;AACDJ,MAAAA,QAAQ,mCACJA,QADI;AAEPC,QAAAA,eAAe,EAAfA,eAFO;AAGPC,QAAAA,SAAS,EAATA;AAHO,QAAR,CADC,CAOD;;AACA,UAAI,kBAAKC,gBAAL,IAAyB,CAA7B,EAAgC;AAC/B;AACA;AACA;AACA,YAAME,wBAAwB,GAC7B,SAASL,QAAQ,CAACM,iBAAlB,GACC,iBAAIF,UAAJ,EAAgB,MAAhB,CADD,GAEEJ,QAAQ,CAACM,iBAAT,IAA8B,EAHjC;AAMAN,QAAAA,QAAQ,CAACM,iBAAT,GAA6BC,+BAC5BF,wBAD4B,0CAEzBF,gBAFyB,GAA7B;AAIA;;AAED,aAAOH,QAAP;AACA;;;6BAEQ;AAAA,wBAWJ,KAAKQ,KAXD;AAAA,UAEPR,QAFO,eAEPA,QAFO;AAAA,UAGPC,eAHO,eAGPA,eAHO;AAAA,UAIPC,SAJO,eAIPA,SAJO;AAAA,UAKPO,IALO,eAKPA,IALO;AAAA,UAMPC,YANO,eAMPA,YANO;AAAA,UAOPC,OAPO,eAOPA,OAPO;AAAA,UAQPR,gBARO,eAQPA,gBARO;AAAA,UASPC,UATO,eASPA,UATO;AAAA,UAUJI,KAVI;;AAaR,UAAI,CAACC,IAAL,EAAW;AACV,eAAO,IAAP;AACA;;AAED,UAAMG,cAAc,GAAG,KAAKd,iBAAL,CACtBE,QADsB,EAEtBC,eAFsB,EAGtBC,SAHsB,EAItBC,gBAJsB,EAKtBC,UALsB,CAAvB;AAQA,aACC,4BAAC,mBAAD,QACC,4BAAC,sBAAD;AACC,QAAA,QAAQ,EAAEQ,cADX;AAEC,QAAA,IAAI,EAAEH,IAFP;AAGC,QAAA,YAAY,EAAEC;AAHf,SAIKF,KAJL,GAMC,4BAAC,qBAAD;AAAe,QAAA,OAAO,EAAEG;AAAxB,SACC,4BAAC,eAAD,OADD,EAEC,4BAAC,6BAAD;AACC,QAAA,SAAS,EAAEE;AADZ,QAFD,CAND,EAWC,4BAAC,uBAAD,OAXD,CADD,CADD;AAiBA;;;EApFmBC,kB;;eAuFN,sBAAW,UAACC,MAAD,QAAgC;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAAA,gBAChBF,MAAM,CAAC,gBAAD,CADU;AAAA,MAClDG,eADkD,WAClDA,eADkD;AAAA,MACjCC,aADiC,WACjCA,aADiC;;AAAA,iBAE/BJ,MAAM,CAAC,MAAD,CAFyB;AAAA,MAElDK,eAFkD,YAElDA,eAFkD;;AAAA,iBAGjCL,MAAM,CAAC,aAAD,CAH2B;AAAA,MAGlDM,aAHkD,YAGlDA,aAHkD;;AAKzD,SAAO;AACNpB,IAAAA,eAAe,EAAEiB,eAAe,CAAC,cAAD,CAD1B;AAENhB,IAAAA,SAAS,EAAEgB,eAAe,CAAC,WAAD,CAFpB;AAGNT,IAAAA,IAAI,EAAEW,eAAe,CAAC,UAAD,EAAaH,QAAb,EAAuBD,MAAvB,CAHf;AAINb,IAAAA,gBAAgB,EAAEgB,aAAa,CAAC,kBAAD,CAJzB;AAKNf,IAAAA,UAAU,EAAEiB,aAAa;AALnB,GAAP;AAOA,CAZc,EAYZzB,MAZY,C","sourcesContent":["/**\n * External dependencies\n */\nimport memize from 'memize';\nimport {size, map, without} from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport {withSelect} from '@wordpress/data';\nimport {\n\tEditorProvider,\n\tErrorBoundary,\n\tPostLockedModal\n} from '@wordpress/editor';\nimport {StrictMode, Component} from '@wordpress/element';\nimport {KeyboardShortcuts} from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport preventEventDiscovery\n\tfrom './prevent-event-discovery';\nimport Layout from './components/layout';\n\nclass Editor extends Component {\n\tconstructor() {\n\t\tsuper(...arguments);\n\n\t\tthis.getEditorSettings = memize(this.getEditorSettings, {\n\t\t\tmaxSize: 1,\n\t\t});\n\t}\n\n\tgetEditorSettings(\n\t\tsettings,\n\t\thasFixedToolbar,\n\t\tfocusMode,\n\t\thiddenBlockTypes,\n\t\tblockTypes,\n\t) {\n\t\tsettings = {\n\t\t\t...settings,\n\t\t\thasFixedToolbar,\n\t\t\tfocusMode,\n\t\t};\n\n\t\t// Omit hidden block types if exists and non-empty.\n\t\tif (size(hiddenBlockTypes) > 0) {\n\t\t\t// Defer to passed setting for `allowedBlockTypes` if provided as\n\t\t\t// anything other than `true` (where `true` is equivalent to allow\n\t\t\t// all block types).\n\t\t\tconst defaultAllowedBlockTypes = (\n\t\t\t\ttrue === settings.allowedBlockTypes ?\n\t\t\t\t\tmap(blockTypes, 'name') :\n\t\t\t\t\t(settings.allowedBlockTypes || [])\n\t\t\t);\n\n\t\t\tsettings.allowedBlockTypes = without(\n\t\t\t\tdefaultAllowedBlockTypes,\n\t\t\t\t...hiddenBlockTypes,\n\t\t\t);\n\t\t}\n\n\t\treturn settings;\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tsettings,\n\t\t\thasFixedToolbar,\n\t\t\tfocusMode,\n\t\t\tpost,\n\t\t\tinitialEdits,\n\t\t\tonError,\n\t\t\thiddenBlockTypes,\n\t\t\tblockTypes,\n\t\t\t...props\n\t\t} = this.props;\n\n\t\tif (!post) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst editorSettings = this.getEditorSettings(\n\t\t\tsettings,\n\t\t\thasFixedToolbar,\n\t\t\tfocusMode,\n\t\t\thiddenBlockTypes,\n\t\t\tblockTypes,\n\t\t);\n\n\t\treturn (\n\t\t\t<StrictMode>\n\t\t\t\t<EditorProvider\n\t\t\t\t\tsettings={editorSettings}\n\t\t\t\t\tpost={post}\n\t\t\t\t\tinitialEdits={initialEdits}\n\t\t\t\t\t{...props}\n\t\t\t\t>\n\t\t\t\t\t<ErrorBoundary onError={onError}>\n\t\t\t\t\t\t<Layout/>\n\t\t\t\t\t\t<KeyboardShortcuts\n\t\t\t\t\t\t\tshortcuts={preventEventDiscovery}/>\n\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t<PostLockedModal/>\n\t\t\t\t</EditorProvider>\n\t\t\t</StrictMode>\n\t\t);\n\t}\n}\n\nexport default withSelect((select, {postId, postType}) => {\n\tconst {isFeatureActive, getPreference} = select('core/edit-post');\n\tconst {getEntityRecord} = select('core');\n\tconst {getBlockTypes} = select('core/blocks');\n\n\treturn {\n\t\thasFixedToolbar: isFeatureActive('fixedToolbar'),\n\t\tfocusMode: isFeatureActive('focusMode'),\n\t\tpost: getEntityRecord('postType', postType, postId),\n\t\thiddenBlockTypes: getPreference('hiddenBlockTypes'),\n\t\tblockTypes: getBlockTypes(),\n\t};\n})(Editor);\n"]}