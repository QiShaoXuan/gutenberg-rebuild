{"version":3,"sources":["@wordpress/data/src/namespace-store/index.js"],"names":["createNamespace","key","options","registry","reducer","store","createReduxStore","resolvers","actions","mapActions","metadataActions","selectors","mapSelectors","metadataSelectors","selector","state","args","metadata","isRegistrySelector","mappedSelector","reg","root","result","mapResolvers","getSelectors","getActions","__unstableOriginalGetState","getState","subscribe","listener","lastState","hasChanged","middlewares","promise","controls","normalizedControls","control","isRegistryControl","push","enhancers","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","name","instanceId","initialState","enhancedReducer","metadataReducer","createStateSelector","registeredSelector","select","runSelector","argsLength","arguments","length","Array","i","createBoundAction","action","dispatch","mappedResolvers","resolver","fulfill","resolverFulfill","mapSelector","selectorName","fulfillSelector","isFulfilled","hasStartedResolution","startResolution","fulfillResolver","finishResolution"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { createStore, applyMiddleware } from 'redux';\nimport {\n\tflowRight,\n\tget,\n\tmapValues,\n} from 'lodash';\nimport combineReducers from 'turbo-combine-reducers';\n\n/**\n * WordPress dependencies\n */\nimport createReduxRoutineMiddleware from '@wordpress/redux-routine';\n\n/**\n * Internal dependencies\n */\nimport promise from '../promise-middleware';\nimport createResolversCacheMiddleware from '../resolvers-cache-middleware';\nimport metadataReducer from './metadata/reducer';\nimport * as metadataSelectors from './metadata/selectors';\nimport * as metadataActions from './metadata/actions';\n\n/**\n * Creates a namespace object with a store derived from the reducer given.\n *\n * @param {string} key              Identifying string used for namespace and redex dev tools.\n * @param {Object} options          Contains reducer, actions, selectors, and resolvers.\n * @param {Object} registry         Registry reference.\n *\n * @return {Object} Store Object.\n */\nexport default function createNamespace( key, options, registry ) {\n\tconst reducer = options.reducer;\n\tconst store = createReduxStore( key, options, registry );\n\n\tlet resolvers;\n\tconst actions = mapActions( {\n\t\t...metadataActions,\n\t\t...options.actions,\n\t}, store );\n\tlet selectors = mapSelectors( {\n\t\t...mapValues( metadataSelectors, ( selector ) => ( state, ...args ) => selector( state.metadata, ...args ) ),\n\t\t...mapValues( options.selectors, ( selector ) => {\n\t\t\tif ( selector.isRegistrySelector ) {\n\t\t\t\tconst mappedSelector = ( reg ) => ( state, ...args ) => {\n\t\t\t\t\treturn selector( reg )( state.root, ...args );\n\t\t\t\t};\n\t\t\t\tmappedSelector.isRegistrySelector = selector.isRegistrySelector;\n\t\t\t\treturn mappedSelector;\n\t\t\t}\n\n\t\t\treturn ( state, ...args ) => selector( state.root, ...args );\n\t\t} ),\n\t}, store, registry );\n\tif ( options.resolvers ) {\n\t\tconst result = mapResolvers( options.resolvers, selectors, store );\n\t\tresolvers = result.resolvers;\n\t\tselectors = result.selectors;\n\t}\n\n\tconst getSelectors = () => selectors;\n\tconst getActions = () => actions;\n\n\t// We have some modules monkey-patching the store object\n\t// It's wrong to do so but until we refactor all of our effects to controls\n\t// We need to keep the same \"store\" instance here.\n\tstore.__unstableOriginalGetState = store.getState;\n\tstore.getState = () => store.__unstableOriginalGetState().root;\n\n\t// Customize subscribe behavior to call listeners only on effective change,\n\t// not on every dispatch.\n\tconst subscribe = store && function( listener ) {\n\t\tlet lastState = store.__unstableOriginalGetState();\n\t\tstore.subscribe( () => {\n\t\t\tconst state = store.__unstableOriginalGetState();\n\t\t\tconst hasChanged = state !== lastState;\n\t\t\tlastState = state;\n\n\t\t\tif ( hasChanged ) {\n\t\t\t\tlistener();\n\t\t\t}\n\t\t} );\n\t};\n\n\t// This can be simplified to just { subscribe, getSelectors, getActions }\n\t// Once we remove the use function.\n\treturn {\n\t\treducer,\n\t\tstore,\n\t\tactions,\n\t\tselectors,\n\t\tresolvers,\n\t\tgetSelectors,\n\t\tgetActions,\n\t\tsubscribe,\n\t};\n}\n\n/**\n * Creates a redux store for a namespace.\n *\n * @param {string} key      Part of the state shape to register the\n *                          selectors for.\n * @param {Object} options  Registered store options.\n * @param {Object} registry Registry reference, for resolver enhancer support.\n *\n * @return {Object} Newly created redux store.\n */\nfunction createReduxStore( key, options, registry ) {\n\tconst middlewares = [\n\t\tcreateResolversCacheMiddleware( registry, key ),\n\t\tpromise,\n\t];\n\n\tif ( options.controls ) {\n\t\tconst normalizedControls = mapValues( options.controls, ( control ) => {\n\t\t\treturn control.isRegistryControl ? control( registry ) : control;\n\t\t} );\n\t\tmiddlewares.push( createReduxRoutineMiddleware( normalizedControls ) );\n\t}\n\n\tconst enhancers = [\n\t\tapplyMiddleware( ...middlewares ),\n\t];\n\tif ( typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ ) {\n\t\tenhancers.push( window.__REDUX_DEVTOOLS_EXTENSION__( { name: key, instanceId: key } ) );\n\t}\n\n\tconst { reducer, initialState } = options;\n\tconst enhancedReducer = combineReducers( {\n\t\tmetadata: metadataReducer,\n\t\troot: reducer,\n\t} );\n\n\treturn createStore(\n\t\tenhancedReducer,\n\t\t{ root: initialState },\n\t\tflowRight( enhancers )\n\t);\n}\n\n/**\n * Maps selectors to a redux store.\n *\n * @param {Object} selectors  Selectors to register. Keys will be used as the\n *                            public facing API. Selectors will get passed the\n *                            state as first argument.\n * @param {Object} store      The redux store to which the selectors should be mapped.\n * @param {Object} registry   Registry reference.\n *\n * @return {Object}           Selectors mapped to the redux store provided.\n */\nfunction mapSelectors( selectors, store, registry ) {\n\tconst createStateSelector = ( registeredSelector ) => {\n\t\tconst selector = registeredSelector.isRegistrySelector ? registeredSelector( registry.select ) : registeredSelector;\n\n\t\treturn function runSelector() {\n\t\t\t// This function is an optimized implementation of:\n\t\t\t//\n\t\t\t//   selector( store.getState(), ...arguments )\n\t\t\t//\n\t\t\t// Where the above would incur an `Array#concat` in its application,\n\t\t\t// the logic here instead efficiently constructs an arguments array via\n\t\t\t// direct assignment.\n\t\t\tconst argsLength = arguments.length;\n\t\t\tconst args = new Array( argsLength + 1 );\n\t\t\targs[ 0 ] = store.__unstableOriginalGetState();\n\t\t\tfor ( let i = 0; i < argsLength; i++ ) {\n\t\t\t\targs[ i + 1 ] = arguments[ i ];\n\t\t\t}\n\n\t\t\treturn selector( ...args );\n\t\t};\n\t};\n\n\treturn mapValues( selectors, createStateSelector );\n}\n\n/**\n * Maps actions to dispatch from a given store.\n *\n * @param {Object} actions    Actions to register.\n * @param {Object} store      The redux store to which the actions should be mapped.\n * @return {Object}           Actions mapped to the redux store provided.\n */\nfunction mapActions( actions, store ) {\n\tconst createBoundAction = ( action ) => ( ...args ) => store.dispatch( action( ...args ) );\n\treturn mapValues( actions, createBoundAction );\n}\n\n/**\n * Returns resolvers with matched selectors for a given namespace.\n * Resolvers are side effects invoked once per argument set of a given selector call,\n * used in ensuring that the data needs for the selector are satisfied.\n *\n * @param {Object} resolvers   Resolvers to register.\n * @param {Object} selectors   The current selectors to be modified.\n * @param {Object} store       The redux store to which the resolvers should be mapped.\n * @return {Object}            An object containing updated selectors and resolvers.\n */\nfunction mapResolvers( resolvers, selectors, store ) {\n\tconst mappedResolvers = mapValues( resolvers, ( resolver ) => {\n\t\tconst { fulfill: resolverFulfill = resolver } = resolver;\n\t\treturn { ...resolver, fulfill: resolverFulfill };\n\t} );\n\n\tconst mapSelector = ( selector, selectorName ) => {\n\t\tconst resolver = resolvers[ selectorName ];\n\t\tif ( ! resolver ) {\n\t\t\treturn selector;\n\t\t}\n\n\t\treturn ( ...args ) => {\n\t\t\tasync function fulfillSelector() {\n\t\t\t\tconst state = store.getState();\n\t\t\t\tif ( typeof resolver.isFulfilled === 'function' && resolver.isFulfilled( state, ...args ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { metadata } = store.__unstableOriginalGetState();\n\t\t\t\tif ( metadataSelectors.hasStartedResolution( metadata, selectorName, args ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tstore.dispatch( metadataActions.startResolution( selectorName, args ) );\n\t\t\t\tawait fulfillResolver( store, mappedResolvers, selectorName, ...args );\n\t\t\t\tstore.dispatch( metadataActions.finishResolution( selectorName, args ) );\n\t\t\t}\n\n\t\t\tfulfillSelector( ...args );\n\t\t\treturn selector( ...args );\n\t\t};\n\t};\n\n\treturn {\n\t\tresolvers: mappedResolvers,\n\t\tselectors: mapValues( selectors, mapSelector ),\n\t};\n}\n\n/**\n * Calls a resolver given arguments\n *\n * @param {Object} store        Store reference, for fulfilling via resolvers\n * @param {Object} resolvers    Store Resolvers\n * @param {string} selectorName Selector name to fulfill.\n * @param {Array} args          Selector Arguments.\n */\nasync function fulfillResolver( store, resolvers, selectorName, ...args ) {\n\tconst resolver = get( resolvers, [ selectorName ] );\n\tif ( ! resolver ) {\n\t\treturn;\n\t}\n\n\tconst action = resolver.fulfill( ...args );\n\tif ( action ) {\n\t\tawait store.dispatch( action );\n\t}\n}\n"]}