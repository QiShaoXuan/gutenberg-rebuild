{"version":3,"sources":["@wordpress/e2e-test-utils/src/get-block-setting.js"],"names":["getBlockSetting","blockName","setting","page","evaluate","_blockName","_setting","blockType","wp","data","select","getBlockType"],"mappings":";;;AAAA;;;;;;;AAOA,gBAAsBA,eAAtB;AAAA;AAAA;;;;;2BAAO,iBAAgCC,SAAhC,EAA2CC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,6CACCC,IAAI,CAACC,QAAL,CAAe,UAAEC,UAAF,EAAcC,QAAd,EAA4B;AACjD,kBAAMC,SAAS,GAAGC,EAAE,CAACC,IAAH,CAAQC,MAAR,CAAgB,aAAhB,EAAgCC,YAAhC,CAA8CN,UAA9C,CAAlB;AACA,qBAAOE,SAAS,IAAIA,SAAS,CAAED,QAAF,CAA7B;AACA,aAHM,EAGJL,SAHI,EAGOC,OAHP,CADD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["/**\n * Returns a string containing the block title associated with the provided block name.\n * @param {string} blockName Block name.\n * @param {string} setting   Block setting e.g: title, attributes....\n *\n * @return {Promise} Promise resolving with a string containing the block title.\n */\nexport async function getBlockSetting( blockName, setting ) {\n\treturn page.evaluate( ( _blockName, _setting ) => {\n\t\tconst blockType = wp.data.select( 'core/blocks' ).getBlockType( _blockName );\n\t\treturn blockType && blockType[ _setting ];\n\t}, blockName, setting );\n}\n"]}