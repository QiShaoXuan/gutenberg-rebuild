{"version":3,"sources":["@wordpress/e2e-test-utils/src/press-key-times.js"],"names":["times","promiseSequence","sequence","reduce","current","next","then","Promise","resolve","pressKeyTimes","key","count","page","keyboard","press"],"mappings":";;;AAAA;;;AAGA,SAASA,KAAT,QAAsB,QAAtB;AAEA;;;;;;;;;SAQeC,e;;;AAOf;;;;;;;;;;;;;2BAPA,iBAAgCC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,6CACQA,QAAQ,CAACC,MAAT,CACN,UAAEC,OAAF,EAAWC,IAAX;AAAA,qBAAqBD,OAAO,CAACE,IAAR,CAAcD,IAAd,CAArB;AAAA,aADM,EAENE,OAAO,CAACC,OAAR,EAFM,CADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeA,gBAAsBC,aAAtB;AAAA;AAAA;;;;;2BAAO,kBAA8BC,GAA9B,EAAmCC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,8CACCV,eAAe,CAAED,KAAK,CAAEW,KAAF,EAAS;AAAA,qBAAM;AAAA,uBAAMC,IAAI,CAACC,QAAL,CAAcC,KAAd,CAAqBJ,GAArB,CAAN;AAAA,eAAN;AAAA,aAAT,CAAP,CADhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["/**\n * External dependencies\n */\nimport { times } from 'lodash';\n\n/**\n * Given an array of functions, each returning a promise, performs all\n * promises in sequence (waterfall) order.\n *\n * @param {Function[]} sequence Array of promise creators.\n *\n * @return {Promise} Promise resolving once all in the sequence complete.\n */\nasync function promiseSequence( sequence ) {\n\treturn sequence.reduce(\n\t\t( current, next ) => current.then( next ),\n\t\tPromise.resolve()\n\t);\n}\n\n/**\n * Presses the given keyboard key a number of times in sequence.\n *\n * @param {string} key   Key to press.\n * @param {number} count Number of times to press.\n *\n * @return {Promise} Promise resolving when key presses complete.\n */\nexport async function pressKeyTimes( key, count ) {\n\treturn promiseSequence( times( count, () => () => page.keyboard.press( key ) ) );\n}\n"]}