{"version":3,"sources":["@wordpress/e2e-test-utils/src/press-key-with-modifier.js"],"names":["capitalize","modifiers","SHIFT","ALT","CTRL","pressKeyWithModifier","modifier","key","isAppleOS","process","platform","overWrittenModifiers","shiftAlt","_isApple","mappedModifiers","ctrlSwap","mod","Promise","all","map","capitalizedMod","page","keyboard","down","press","up"],"mappings":";;;;AAAA;;;AAGA,SAASA,UAAT,QAA2B,QAA3B;AAEA;;;;AAGA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,GAA3B,EAAgCC,IAAhC,QAA4C,qBAA5C;AAEA;;;;;;;;AAOA,gBAAsBC,oBAAtB;AAAA;AAAA;;;;;2BAAO,kBAAqCC,QAArC,EAA+CC,GAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC,YAAAA,SADA,GACY,SAAZA,SAAY;AAAA,qBAAMC,OAAO,CAACC,QAAR,KAAqB,QAA3B;AAAA,aADZ;;AAEAC,YAAAA,oBAFA,qBAGFV,SAHE;AAILW,cAAAA,QAAQ,EAAE,kBAAEC,QAAF;AAAA,uBAAgBA,QAAQ,KAAK,CAAEX,KAAF,EAASC,GAAT,CAAL,GAAsB,CAAED,KAAF,EAASE,IAAT,CAA9C;AAAA;AAJL;AAMAU,YAAAA,eANA,GAMkBH,oBAAoB,CAAEL,QAAF,CAApB,CAAkCE,SAAlC,CANlB;;AAOAO,YAAAA,QAPA,GAOW,SAAXA,QAAW,CAAEC,GAAF;AAAA,qBAAWA,GAAG,KAAKZ,IAAR,GAAe,SAAf,GAA2BY,GAAtC;AAAA,aAPX;;AAAA;AAAA,mBASAC,OAAO,CAACC,GAAR,CACLJ,eAAe,CAACK,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAqB,iBAAQH,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AACdI,wBAAAA,cADc,GACGpB,UAAU,CAAEe,QAAQ,CAAEC,GAAF,CAAV,CADb;AAAA,yDAEbK,IAAI,CAACC,QAAL,CAAcC,IAAd,CAAoBH,cAApB,CAFa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAArB;;AAAA;AAAA;AAAA;AAAA,gBADK,CATA;;AAAA;AAAA;AAAA,mBAgBAC,IAAI,CAACC,QAAL,CAAcE,KAAd,CAAqBjB,GAArB,CAhBA;;AAAA;AAAA;AAAA,mBAkBAU,OAAO,CAACC,GAAR,CACLJ,eAAe,CAACK,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAqB,kBAAQH,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AACdI,wBAAAA,cADc,GACGpB,UAAU,CAAEe,QAAQ,CAAEC,GAAF,CAAV,CADb;AAAA,0DAEbK,IAAI,CAACC,QAAL,CAAcG,EAAd,CAAkBL,cAAlB,CAFa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAArB;;AAAA;AAAA;AAAA;AAAA,gBADK,CAlBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["/**\n * External dependencies\n */\nimport { capitalize } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { modifiers, SHIFT, ALT, CTRL } from '@wordpress/keycodes';\n\n/**\n * Performs a key press with modifier (Shift, Control, Meta, Alt), where each modifier\n * is normalized to platform-specific modifier.\n *\n * @param {string} modifier Modifier key.\n * @param {string} key Key to press while modifier held.\n */\nexport async function pressKeyWithModifier( modifier, key ) {\n\tconst isAppleOS = () => process.platform === 'darwin';\n\tconst overWrittenModifiers = {\n\t\t...modifiers,\n\t\tshiftAlt: ( _isApple ) => _isApple() ? [ SHIFT, ALT ] : [ SHIFT, CTRL ],\n\t};\n\tconst mappedModifiers = overWrittenModifiers[ modifier ]( isAppleOS );\n\tconst ctrlSwap = ( mod ) => mod === CTRL ? 'control' : mod;\n\n\tawait Promise.all(\n\t\tmappedModifiers.map( async ( mod ) => {\n\t\t\tconst capitalizedMod = capitalize( ctrlSwap( mod ) );\n\t\t\treturn page.keyboard.down( capitalizedMod );\n\t\t} )\n\t);\n\n\tawait page.keyboard.press( key );\n\n\tawait Promise.all(\n\t\tmappedModifiers.map( async ( mod ) => {\n\t\t\tconst capitalizedMod = capitalize( ctrlSwap( mod ) );\n\t\t\treturn page.keyboard.up( capitalizedMod );\n\t\t} )\n\t);\n}\n"]}