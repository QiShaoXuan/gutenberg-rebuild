{"version":3,"sources":["@wordpress/list-reusable-blocks/src/utils/import.js"],"names":["importReusableBlock","file","fileContent","parsedContent","JSON","parse","Error","__file","title","content","path","postType","rest_base","data","status","method","reusableBlock"],"mappings":";;;;;;;;;;;;;AAGA;;AAKA;;AAKA;;AAbA;;;;AAKA;;;;AAKA;;;;AAKA;;;;;;SAMeA,mB;;;;;;;4BAAf,iBAAoCC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC2B,wBAAcA,IAAd,CAD3B;;AAAA;AACOC,YAAAA,WADP;AAAA;AAIEC,YAAAA,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAYH,WAAZ,CAAhB;AAJF;AAAA;;AAAA;AAAA;AAAA;AAAA,kBAMQ,IAAII,KAAJ,CAAW,mBAAX,CANR;;AAAA;AAAA,kBASEH,aAAa,CAACI,MAAd,KAAyB,UAAzB,IACA,CAAEJ,aAAa,CAACK,KADhB,IAEA,CAAEL,aAAa,CAACM,OAFhB,IAGA,CAAE,sBAAUN,aAAa,CAACK,KAAxB,CAHF,IAIA,CAAE,sBAAUL,aAAa,CAACM,OAAxB,CAbJ;AAAA;AAAA;AAAA;;AAAA,kBAeQ,IAAIH,KAAJ,CAAW,kCAAX,CAfR;;AAAA;AAAA;AAAA,mBAiBwB,uBAAU;AAAEI,cAAAA,IAAI;AAAN,aAAV,CAjBxB;;AAAA;AAiBOC,YAAAA,QAjBP;AAAA;AAAA,mBAkB6B,uBAAU;AACrCD,cAAAA,IAAI,mBAAaC,QAAQ,CAACC,SAAtB,CADiC;AAErCC,cAAAA,IAAI,EAAE;AACLL,gBAAAA,KAAK,EAAEL,aAAa,CAACK,KADhB;AAELC,gBAAAA,OAAO,EAAEN,aAAa,CAACM,OAFlB;AAGLK,gBAAAA,MAAM,EAAE;AAHH,eAF+B;AAOrCC,cAAAA,MAAM,EAAE;AAP6B,aAAV,CAlB7B;;AAAA;AAkBOC,YAAAA,aAlBP;AAAA,6CA4BQA,aA5BR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;eA+BehB,mB","sourcesContent":["/**\n * External dependencies\n */\nimport { isString } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\n\n/**\n * Internal dependencies\n */\nimport { readTextFile } from './file';\n\n/**\n * Import a reusable block from a JSON file.\n *\n * @param {File}     file File.\n * @return {Promise} Promise returning the imported reusable block.\n */\nasync function importReusableBlock( file ) {\n\tconst fileContent = await readTextFile( file );\n\tlet parsedContent;\n\ttry {\n\t\tparsedContent = JSON.parse( fileContent );\n\t} catch ( e ) {\n\t\tthrow new Error( 'Invalid JSON file' );\n\t}\n\tif (\n\t\tparsedContent.__file !== 'wp_block' ||\n\t\t! parsedContent.title ||\n\t\t! parsedContent.content ||\n\t\t! isString( parsedContent.title ) ||\n\t\t! isString( parsedContent.content )\n\t) {\n\t\tthrow new Error( 'Invalid Reusable Block JSON file' );\n\t}\n\tconst postType = await apiFetch( { path: `/wp/v2/types/wp_block` } );\n\tconst reusableBlock = await apiFetch( {\n\t\tpath: `/wp/v2/${ postType.rest_base }`,\n\t\tdata: {\n\t\t\ttitle: parsedContent.title,\n\t\t\tcontent: parsedContent.content,\n\t\t\tstatus: 'publish',\n\t\t},\n\t\tmethod: 'POST',\n\t} );\n\n\treturn reusableBlock;\n}\n\nexport default importReusableBlock;\n"]}