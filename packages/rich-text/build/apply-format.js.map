{"version":3,"sources":["@wordpress/rich-text/src/apply-format.js"],"names":["applyFormat","value","format","startIndex","start","endIndex","end","formats","activeFormats","newFormats","slice","startFormat","type","applyFormats","index","newFormatsAtIndex","filter","push"],"mappings":";;;;;;;;;;;;;AAIA;;AAMA;;AAVA;;;;AAMA;;;;AAMA;;;;;;;;;;;;AAYO,SAASA,WAAT,CACNC,KADM,EAENC,MAFM,EAKL;AAAA,MAFDC,UAEC,uEAFYF,KAAK,CAACG,KAElB;AAAA,MADDC,QACC,uEADUJ,KAAK,CAACK,GAChB;AAAA,MACOC,OADP,GACuCN,KADvC,CACOM,OADP;AAAA,6BACuCN,KADvC,CACgBO,aADhB;AAAA,MACgBA,aADhB,qCACgC,EADhC;AAED,MAAMC,UAAU,GAAGF,OAAO,CAACG,KAAR,EAAnB,CAFC,CAID;;AACA,MAAKP,UAAU,KAAKE,QAApB,EAA+B;AAC9B,QAAMM,WAAW,GAAG,kBAAMF,UAAU,CAAEN,UAAF,CAAhB,EAAgC;AAAES,MAAAA,IAAI,EAAEV,MAAM,CAACU;AAAf,KAAhC,CAApB,CAD8B,CAG9B;AACA;;AACA,QAAKD,WAAL,EAAmB;AAClB,aAAQ,kBAAMF,UAAU,CAAEN,UAAF,CAAhB,EAAgCQ,WAAhC,CAAR,EAAwD;AACvDE,QAAAA,YAAY,CAAEJ,UAAF,EAAcN,UAAd,EAA0BD,MAA1B,CAAZ;AACAC,QAAAA,UAAU;AACV;;AAEDE,MAAAA,QAAQ;;AAER,aAAQ,kBAAMI,UAAU,CAAEJ,QAAF,CAAhB,EAA8BM,WAA9B,CAAR,EAAsD;AACrDE,QAAAA,YAAY,CAAEJ,UAAF,EAAcJ,QAAd,EAAwBH,MAAxB,CAAZ;AACAG,QAAAA,QAAQ;AACR,OAXiB,CAYnB;AACA;;AACC,KAdD,MAcO;AACN,6CACIJ,KADJ;AAECO,QAAAA,aAAa,6CAAOA,aAAP,IAAsBN,MAAtB;AAFd;AAIA;AACD,GAzBD,MAyBO;AACN,SAAM,IAAIY,KAAK,GAAGX,UAAlB,EAA8BW,KAAK,GAAGT,QAAtC,EAAgDS,KAAK,EAArD,EAA0D;AACzDD,MAAAA,YAAY,CAAEJ,UAAF,EAAcK,KAAd,EAAqBZ,MAArB,CAAZ;AACA;AACD;;AAED,SAAO,wEAAuBD,KAAvB;AAA8BM,IAAAA,OAAO,EAAEE;AAAvC,KAAP;AACA;;AAED,SAASI,YAAT,CAAuBN,OAAvB,EAAgCO,KAAhC,EAAuCZ,MAAvC,EAAgD;AAC/C,MAAKK,OAAO,CAAEO,KAAF,CAAZ,EAAwB;AACvB,QAAMC,iBAAiB,GAAGR,OAAO,CAAEO,KAAF,CAAP,CAAiBE,MAAjB,CAAyB;AAAA,UAAIJ,IAAJ,QAAIA,IAAJ;AAAA,aAAgBA,IAAI,KAAKV,MAAM,CAACU,IAAhC;AAAA,KAAzB,CAA1B;AACAG,IAAAA,iBAAiB,CAACE,IAAlB,CAAwBf,MAAxB;AACAK,IAAAA,OAAO,CAAEO,KAAF,CAAP,GAAmBC,iBAAnB;AACA,GAJD,MAIO;AACNR,IAAAA,OAAO,CAAEO,KAAF,CAAP,GAAmB,CAAEZ,MAAF,CAAnB;AACA;AACD","sourcesContent":["/**\n * External dependencies\n */\n\nimport { find } from 'lodash';\n\n/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\n\n/**\n * Apply a format object to a Rich Text value from the given `startIndex` to the\n * given `endIndex`. Indices are retrieved from the selection if none are\n * provided.\n *\n * @param {Object} value        Value to modify.\n * @param {Object} format       Format to apply.\n * @param {number} [startIndex] Start index.\n * @param {number} [endIndex]   End index.\n *\n * @return {Object} A new value with the format applied.\n */\nexport function applyFormat(\n\tvalue,\n\tformat,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst { formats, activeFormats = [] } = value;\n\tconst newFormats = formats.slice();\n\n\t// The selection is collapsed.\n\tif ( startIndex === endIndex ) {\n\t\tconst startFormat = find( newFormats[ startIndex ], { type: format.type } );\n\n\t\t// If the caret is at a format of the same type, expand start and end to\n\t\t// the edges of the format. This is useful to apply new attributes.\n\t\tif ( startFormat ) {\n\t\t\twhile ( find( newFormats[ startIndex ], startFormat ) ) {\n\t\t\t\tapplyFormats( newFormats, startIndex, format );\n\t\t\t\tstartIndex--;\n\t\t\t}\n\n\t\t\tendIndex++;\n\n\t\t\twhile ( find( newFormats[ endIndex ], startFormat ) ) {\n\t\t\t\tapplyFormats( newFormats, endIndex, format );\n\t\t\t\tendIndex++;\n\t\t\t}\n\t\t// Otherwise, insert a placeholder with the format so new input appears\n\t\t// with the format applied.\n\t\t} else {\n\t\t\treturn {\n\t\t\t\t...value,\n\t\t\t\tactiveFormats: [ ...activeFormats, format ],\n\t\t\t};\n\t\t}\n\t} else {\n\t\tfor ( let index = startIndex; index < endIndex; index++ ) {\n\t\t\tapplyFormats( newFormats, index, format );\n\t\t}\n\t}\n\n\treturn normaliseFormats( { ...value, formats: newFormats } );\n}\n\nfunction applyFormats( formats, index, format ) {\n\tif ( formats[ index ] ) {\n\t\tconst newFormatsAtIndex = formats[ index ].filter( ( { type } ) => type !== format.type );\n\t\tnewFormatsAtIndex.push( format );\n\t\tformats[ index ] = newFormatsAtIndex;\n\t} else {\n\t\tformats[ index ] = [ format ];\n\t}\n}\n"]}