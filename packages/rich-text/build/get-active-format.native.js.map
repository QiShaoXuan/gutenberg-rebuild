{"version":3,"sources":["@wordpress/rich-text/src/get-active-format.native.js"],"names":["getActiveFormat","formatType","formats","formatPlaceholder","start","end","undefined","type","index","startPos","previousLetterFormat"],"mappings":";;;;;;;AAIA;;AAJA;;;;AAMA;;;;;;;;;;;AAWO,SAASA,eAAT,OAAsEC,UAAtE,EAAmF;AAAA,MAAvDC,OAAuD,QAAvDA,OAAuD;AAAA,MAA9CC,iBAA8C,QAA9CA,iBAA8C;AAAA,MAA3BC,KAA2B,QAA3BA,KAA2B;AAAA,MAApBC,GAAoB,QAApBA,GAAoB;;AACzF,MAAKD,KAAK,KAAKE,SAAf,EAA2B;AAC1B;AACA,GAHwF,CAKzF;;;AACA,MAAKF,KAAK,KAAKC,GAAf,EAAqB;AACpB,WAAO,kBAAMH,OAAO,CAAEE,KAAF,CAAb,EAAwB;AAAEG,MAAAA,IAAI,EAAEN;AAAR,KAAxB,CAAP;AACA,GARwF,CAUzF;;;AACA,MAAKE,iBAAiB,IAAIA,iBAAiB,CAACK,KAAlB,KAA4BJ,KAAtD,EAA8D;AAC7D,WAAO,kBAAMD,iBAAiB,CAACD,OAAxB,EAAiC;AAAEK,MAAAA,IAAI,EAAEN;AAAR,KAAjC,CAAP;AACA,GAbwF,CAezF;;;AACA,MAAMQ,QAAQ,GAAGL,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkBA,KAAK,GAAG,CAA3C,CAhByF,CAkBzF;;AACA,MAAMM,oBAAoB,GAAG,kBAAMR,OAAO,CAAEO,QAAF,CAAb,EAA2B;AAAEF,IAAAA,IAAI,EAAEN;AAAR,GAA3B,CAA7B;;AAEA,MAAKS,oBAAL,EAA4B;AAC3B,WAAOA,oBAAP;AACA;;AAED,SAAOJ,SAAP;AACA","sourcesContent":["/**\n * External dependencies\n */\n\nimport { find } from 'lodash';\n\n/**\n * Gets the format object by type at the start of the selection. This can be\n * used to get e.g. the URL of a link format at the current selection, but also\n * to check if a format is active at the selection. Returns undefined if there\n * is no format at the selection.\n *\n * @param {Object} value      Value to inspect.\n * @param {string} formatType Format type to look for.\n *\n * @return {?Object} Active format object of the specified type, or undefined.\n */\nexport function getActiveFormat( { formats, formatPlaceholder, start, end }, formatType ) {\n\tif ( start === undefined ) {\n\t\treturn;\n\t}\n\n\t// if selection is not empty, get the first character format\n\tif ( start !== end ) {\n\t\treturn find( formats[ start ], { type: formatType } );\n\t}\n\n\t// if user picked (or unpicked) formats but didn't write anything in those formats yet return this format\n\tif ( formatPlaceholder && formatPlaceholder.index === start ) {\n\t\treturn find( formatPlaceholder.formats, { type: formatType } );\n\t}\n\n\t// if we're at the start of text, use the first char to pick up the formats\n\tconst startPos = start === 0 ? 0 : start - 1;\n\n\t// otherwise get the previous character format\n\tconst previousLetterFormat = find( formats[ startPos ], { type: formatType } );\n\n\tif ( previousLetterFormat ) {\n\t\treturn previousLetterFormat;\n\t}\n\n\treturn undefined;\n}\n"]}