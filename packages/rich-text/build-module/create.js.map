{"version":3,"sources":["@wordpress/rich-text/src/create.js"],"names":["select","isFormatEqual","createElement","mergePair","LINE_SEPARATOR","OBJECT_REPLACEMENT_CHARACTER","window","Node","TEXT_NODE","ELEMENT_NODE","createEmptyValue","formats","replacements","text","simpleFindKey","object","value","key","toFormat","type","attributes","formatType","class","getFormatTypeForClassName","replace","className","trim","getFormatTypeForBareElement","__experimentalCreatePrepareEditableTree","__experimentalCreateOnChangeEditableValue","name","registeredAttributes","unregisteredAttributes","create","element","html","range","multilineTag","multilineWrapperTags","isEditableTree","__unstableIsEditableTree","length","Array","document","createFromElement","createFromMultilineElement","accumulateSelection","accumulator","node","parentNode","startContainer","startOffset","endContainer","endOffset","currentLength","start","undefined","nodeType","childNodes","end","filterRange","filter","nodeValue","slice","filterString","string","currentWrapperTags","hasChildNodes","index","nodeName","toLowerCase","getAttribute","lastFormats","lastFormat","newFormat","getAttributes","format","indexOf","from","children","hasAttributes","i"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\n\nimport { isFormatEqual } from './is-format-equal';\nimport { createElement } from './create-element';\nimport { mergePair } from './concat';\nimport {\n\tLINE_SEPARATOR,\n\tOBJECT_REPLACEMENT_CHARACTER,\n} from './special-characters';\n\n/**\n * Browser dependencies\n */\n\nconst { TEXT_NODE, ELEMENT_NODE } = window.Node;\n\nfunction createEmptyValue() {\n\treturn {\n\t\tformats: [],\n\t\treplacements: [],\n\t\ttext: '',\n\t};\n}\n\nfunction simpleFindKey( object, value ) {\n\tfor ( const key in object ) {\n\t\tif ( object[ key ] === value ) {\n\t\t\treturn key;\n\t\t}\n\t}\n}\n\nfunction toFormat( { type, attributes } ) {\n\tlet formatType;\n\n\tif ( attributes && attributes.class ) {\n\t\tformatType = select( 'core/rich-text' ).getFormatTypeForClassName( attributes.class );\n\n\t\tif ( formatType ) {\n\t\t\t// Preserve any additional classes.\n\t\t\tattributes.class = ` ${ attributes.class } `.replace( ` ${ formatType.className } `, ' ' ).trim();\n\n\t\t\tif ( ! attributes.class ) {\n\t\t\t\tdelete attributes.class;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( ! formatType ) {\n\t\tformatType = select( 'core/rich-text' ).getFormatTypeForBareElement( type );\n\t}\n\n\tif ( ! formatType ) {\n\t\treturn attributes ? { type, attributes } : { type };\n\t}\n\n\tif (\n\t\tformatType.__experimentalCreatePrepareEditableTree &&\n\t\t! formatType.__experimentalCreateOnChangeEditableValue\n\t) {\n\t\treturn null;\n\t}\n\n\tif ( ! attributes ) {\n\t\treturn { type: formatType.name };\n\t}\n\n\tconst registeredAttributes = {};\n\tconst unregisteredAttributes = {};\n\n\tfor ( const name in attributes ) {\n\t\tconst key = simpleFindKey( formatType.attributes, name );\n\n\t\tif ( key ) {\n\t\t\tregisteredAttributes[ key ] = attributes[ name ];\n\t\t} else {\n\t\t\tunregisteredAttributes[ name ] = attributes[ name ];\n\t\t}\n\t}\n\n\treturn {\n\t\ttype: formatType.name,\n\t\tattributes: registeredAttributes,\n\t\tunregisteredAttributes,\n\t};\n}\n\n/**\n * Create a RichText value from an `Element` tree (DOM), an HTML string or a\n * plain text string, with optionally a `Range` object to set the selection. If\n * called without any input, an empty value will be created. If\n * `multilineTag` is provided, any content of direct children whose type matches\n * `multilineTag` will be separated by two newlines. The optional functions can\n * be used to filter out content.\n *\n * A value will have the following shape, which you are strongly encouraged not\n * to modify without the use of helper functions:\n *\n * ```js\n * {\n *   text: string,\n *   formats: Array,\n *   replacements: Array,\n *   ?start: number,\n *   ?end: number,\n * }\n * ```\n *\n * As you can see, text and formatting are separated. `text` holds the text,\n * including any replacement characters for objects and lines. `formats`,\n * `objects` and `lines` are all sparse arrays of the same length as `text`. It\n * holds information about the formatting at the relevant text indices. Finally\n * `start` and `end` state which text indices are selected. They are only\n * provided if a `Range` was given.\n *\n * @param {Object}  [$1]                      Optional named arguments.\n * @param {Element} [$1.element]              Element to create value from.\n * @param {string}  [$1.text]                 Text to create value from.\n * @param {string}  [$1.html]                 HTML to create value from.\n * @param {Range}   [$1.range]                Range to create value from.\n * @param {string}  [$1.multilineTag]         Multiline tag if the structure is\n *                                            multiline.\n * @param {Array}   [$1.multilineWrapperTags] Tags where lines can be found if\n *                                            nesting is possible.\n *\n * @return {Object} A rich text value.\n */\nexport function create( {\n\telement,\n\ttext,\n\thtml,\n\trange,\n\tmultilineTag,\n\tmultilineWrapperTags,\n\t__unstableIsEditableTree: isEditableTree,\n} = {} ) {\n\tif ( typeof text === 'string' && text.length > 0 ) {\n\t\treturn {\n\t\t\tformats: Array( text.length ),\n\t\t\treplacements: Array( text.length ),\n\t\t\ttext,\n\t\t};\n\t}\n\n\tif ( typeof html === 'string' && html.length > 0 ) {\n\t\telement = createElement( document, html );\n\t}\n\n\tif ( typeof element !== 'object' ) {\n\t\treturn createEmptyValue();\n\t}\n\n\tif ( ! multilineTag ) {\n\t\treturn createFromElement( {\n\t\t\telement,\n\t\t\trange,\n\t\t\tisEditableTree,\n\t\t} );\n\t}\n\n\treturn createFromMultilineElement( {\n\t\telement,\n\t\trange,\n\t\tmultilineTag,\n\t\tmultilineWrapperTags,\n\t\tisEditableTree,\n\t} );\n}\n\n/**\n * Helper to accumulate the value's selection start and end from the current\n * node and range.\n *\n * @param {Object} accumulator Object to accumulate into.\n * @param {Node}   node        Node to create value with.\n * @param {Range}  range       Range to create value with.\n * @param {Object} value       Value that is being accumulated.\n */\nfunction accumulateSelection( accumulator, node, range, value ) {\n\tif ( ! range ) {\n\t\treturn;\n\t}\n\n\tconst { parentNode } = node;\n\tconst { startContainer, startOffset, endContainer, endOffset } = range;\n\tconst currentLength = accumulator.text.length;\n\n\t// Selection can be extracted from value.\n\tif ( value.start !== undefined ) {\n\t\taccumulator.start = currentLength + value.start;\n\t// Range indicates that the current node has selection.\n\t} else if ( node === startContainer && node.nodeType === TEXT_NODE ) {\n\t\taccumulator.start = currentLength + startOffset;\n\t// Range indicates that the current node is selected.\n\t} else if (\n\t\tparentNode === startContainer &&\n\t\tnode === startContainer.childNodes[ startOffset ]\n\t) {\n\t\taccumulator.start = currentLength;\n\t// Range indicates that the selection is after the current node.\n\t} else if (\n\t\tparentNode === startContainer &&\n\t\tnode === startContainer.childNodes[ startOffset - 1 ]\n\t) {\n\t\taccumulator.start = currentLength + value.text.length;\n\t// Fallback if no child inside handled the selection.\n\t} else if ( node === startContainer ) {\n\t\taccumulator.start = currentLength;\n\t}\n\n\t// Selection can be extracted from value.\n\tif ( value.end !== undefined ) {\n\t\taccumulator.end = currentLength + value.end;\n\t// Range indicates that the current node has selection.\n\t} else if ( node === endContainer && node.nodeType === TEXT_NODE ) {\n\t\taccumulator.end = currentLength + endOffset;\n\t// Range indicates that the current node is selected.\n\t} else if (\n\t\tparentNode === endContainer &&\n\t\tnode === endContainer.childNodes[ endOffset - 1 ]\n\t) {\n\t\taccumulator.end = currentLength + value.text.length;\n\t// Range indicates that the selection is before the current node.\n\t} else if (\n\t\tparentNode === endContainer &&\n\t\tnode === endContainer.childNodes[ endOffset ]\n\t) {\n\t\taccumulator.end = currentLength;\n\t// Fallback if no child inside handled the selection.\n\t} else if ( node === endContainer ) {\n\t\taccumulator.end = currentLength + endOffset;\n\t}\n}\n\n/**\n * Adjusts the start and end offsets from a range based on a text filter.\n *\n * @param {Node}     node   Node of which the text should be filtered.\n * @param {Range}    range  The range to filter.\n * @param {Function} filter Function to use to filter the text.\n *\n * @return {?Object} Object containing range properties.\n */\nfunction filterRange( node, range, filter ) {\n\tif ( ! range ) {\n\t\treturn;\n\t}\n\n\tconst { startContainer, endContainer } = range;\n\tlet { startOffset, endOffset } = range;\n\n\tif ( node === startContainer ) {\n\t\tstartOffset = filter( node.nodeValue.slice( 0, startOffset ) ).length;\n\t}\n\n\tif ( node === endContainer ) {\n\t\tendOffset = filter( node.nodeValue.slice( 0, endOffset ) ).length;\n\t}\n\n\treturn { startContainer, startOffset, endContainer, endOffset };\n}\n\nfunction filterString( string ) {\n\t// Reduce any whitespace used for HTML formatting to one space\n\t// character, because it will also be displayed as such by the browser.\n\treturn string.replace( /[\\n\\r\\t]+/g, ' ' );\n}\n\n/**\n * Creates a Rich Text value from a DOM element and range.\n *\n * @param {Object}    $1                      Named argements.\n * @param {?Element}  $1.element              Element to create value from.\n * @param {?Range}    $1.range                Range to create value from.\n * @param {?string}   $1.multilineTag         Multiline tag if the structure is\n *                                            multiline.\n * @param {?Array}    $1.multilineWrapperTags Tags where lines can be found if\n *                                            nesting is possible.\n *\n * @return {Object} A rich text value.\n */\nfunction createFromElement( {\n\telement,\n\trange,\n\tmultilineTag,\n\tmultilineWrapperTags,\n\tcurrentWrapperTags = [],\n\tisEditableTree,\n} ) {\n\tconst accumulator = createEmptyValue();\n\n\tif ( ! element ) {\n\t\treturn accumulator;\n\t}\n\n\tif ( ! element.hasChildNodes() ) {\n\t\taccumulateSelection( accumulator, element, range, createEmptyValue() );\n\t\treturn accumulator;\n\t}\n\n\tconst length = element.childNodes.length;\n\n\t// Optimise for speed.\n\tfor ( let index = 0; index < length; index++ ) {\n\t\tconst node = element.childNodes[ index ];\n\t\tconst type = node.nodeName.toLowerCase();\n\n\t\tif ( node.nodeType === TEXT_NODE ) {\n\t\t\tconst text = filterString( node.nodeValue );\n\t\t\trange = filterRange( node, range, filterString );\n\t\t\taccumulateSelection( accumulator, node, range, { text } );\n\t\t\t// Create a sparse array of the same length as `text`, in which\n\t\t\t// formats can be added.\n\t\t\taccumulator.formats.length += text.length;\n\t\t\taccumulator.replacements.length += text.length;\n\t\t\taccumulator.text += text;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( node.nodeType !== ELEMENT_NODE ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (\n\t\t\tnode.getAttribute( 'data-rich-text-padding' ) ||\n\t\t\t( isEditableTree && type === 'br' && ! node.getAttribute( 'data-rich-text-line-break' ) )\n\t\t) {\n\t\t\taccumulateSelection( accumulator, node, range, createEmptyValue() );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( type === 'br' ) {\n\t\t\taccumulateSelection( accumulator, node, range, createEmptyValue() );\n\t\t\tmergePair( accumulator, create( { text: '\\n' } ) );\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst lastFormats = accumulator.formats[ accumulator.formats.length - 1 ];\n\t\tconst lastFormat = lastFormats && lastFormats[ lastFormats.length - 1 ];\n\t\tconst newFormat = toFormat( {\n\t\t\ttype,\n\t\t\tattributes: getAttributes( { element: node } ),\n\t\t} );\n\t\tconst format = isFormatEqual( newFormat, lastFormat ) ? lastFormat : newFormat;\n\n\t\tif ( multilineWrapperTags && multilineWrapperTags.indexOf( type ) !== -1 ) {\n\t\t\tconst value = createFromMultilineElement( {\n\t\t\t\telement: node,\n\t\t\t\trange,\n\t\t\t\tmultilineTag,\n\t\t\t\tmultilineWrapperTags,\n\t\t\t\tcurrentWrapperTags: [ ...currentWrapperTags, format ],\n\t\t\t\tisEditableTree,\n\t\t\t} );\n\n\t\t\taccumulateSelection( accumulator, node, range, value );\n\t\t\tmergePair( accumulator, value );\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst value = createFromElement( {\n\t\t\telement: node,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags,\n\t\t\tisEditableTree,\n\t\t} );\n\n\t\taccumulateSelection( accumulator, node, range, value );\n\n\t\tif ( ! format ) {\n\t\t\tmergePair( accumulator, value );\n\t\t} else if ( value.text.length === 0 ) {\n\t\t\tif ( format.attributes ) {\n\t\t\t\tmergePair( accumulator, {\n\t\t\t\t\tformats: [ , ],\n\t\t\t\t\treplacements: [ format ],\n\t\t\t\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t\t\t\t} );\n\t\t\t}\n\t\t} else {\n\t\t\tmergePair( accumulator, {\n\t\t\t\t...value,\n\t\t\t\tformats: Array.from( value.formats, ( formats ) =>\n\t\t\t\t\tformats ? [ format, ...formats ] : [ format ]\n\t\t\t\t),\n\t\t\t} );\n\t\t}\n\t}\n\n\treturn accumulator;\n}\n\n/**\n * Creates a rich text value from a DOM element and range that should be\n * multiline.\n *\n * @param {Object}    $1                      Named argements.\n * @param {?Element}  $1.element              Element to create value from.\n * @param {?Range}    $1.range                Range to create value from.\n * @param {?string}   $1.multilineTag         Multiline tag if the structure is\n *                                            multiline.\n * @param {?Array}    $1.multilineWrapperTags Tags where lines can be found if\n *                                            nesting is possible.\n * @param {boolean}   $1.currentWrapperTags   Whether to prepend a line\n *                                            separator.\n *\n * @return {Object} A rich text value.\n */\nfunction createFromMultilineElement( {\n\telement,\n\trange,\n\tmultilineTag,\n\tmultilineWrapperTags,\n\tcurrentWrapperTags = [],\n\tisEditableTree,\n} ) {\n\tconst accumulator = createEmptyValue();\n\n\tif ( ! element || ! element.hasChildNodes() ) {\n\t\treturn accumulator;\n\t}\n\n\tconst length = element.children.length;\n\n\t// Optimise for speed.\n\tfor ( let index = 0; index < length; index++ ) {\n\t\tconst node = element.children[ index ];\n\n\t\tif ( node.nodeName.toLowerCase() !== multilineTag ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst value = createFromElement( {\n\t\t\telement: node,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags,\n\t\t\tcurrentWrapperTags,\n\t\t\tisEditableTree,\n\t\t} );\n\n\t\t// Multiline value text should be separated by a line separator.\n\t\tif ( index !== 0 || currentWrapperTags.length > 0 ) {\n\t\t\tmergePair( accumulator, {\n\t\t\t\tformats: [ , ],\n\t\t\t\treplacements: currentWrapperTags.length > 0 ? [ currentWrapperTags ] : [ , ],\n\t\t\t\ttext: LINE_SEPARATOR,\n\t\t\t} );\n\t\t}\n\n\t\taccumulateSelection( accumulator, node, range, value );\n\t\tmergePair( accumulator, value );\n\t}\n\n\treturn accumulator;\n}\n\n/**\n * Gets the attributes of an element in object shape.\n *\n * @param {Object}    $1                 Named argements.\n * @param {Element}   $1.element         Element to get attributes from.\n *\n * @return {?Object} Attribute object or `undefined` if the element has no\n *                   attributes.\n */\nfunction getAttributes( { element } ) {\n\tif ( ! element.hasAttributes() ) {\n\t\treturn;\n\t}\n\n\tconst length = element.attributes.length;\n\tlet accumulator;\n\n\t// Optimise for speed.\n\tfor ( let i = 0; i < length; i++ ) {\n\t\tconst { name, value } = element.attributes[ i ];\n\n\t\tif ( name.indexOf( 'data-rich-text-' ) === 0 ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\taccumulator = accumulator || {};\n\t\taccumulator[ name ] = value;\n\t}\n\n\treturn accumulator;\n}\n"]}