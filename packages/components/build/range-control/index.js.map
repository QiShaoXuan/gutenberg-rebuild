{"version":3,"sources":["@wordpress/components/src/range-control/index.js"],"names":["RangeControl","className","currentInput","label","value","instanceId","onChange","beforeIcon","afterIcon","help","allowReset","initialPosition","min","max","setState","props","id","currentInputValue","resetValue","resetCurrentInput","onChangeValue","event","newValue","target","checkValidity","undefined","parseFloat","initialSliderValue","withInstanceId"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { isFinite } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { compose, withInstanceId, withState } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { BaseControl, Button, Dashicon } from '../';\n\nfunction RangeControl( {\n\tclassName,\n\tcurrentInput,\n\tlabel,\n\tvalue,\n\tinstanceId,\n\tonChange,\n\tbeforeIcon,\n\tafterIcon,\n\thelp,\n\tallowReset,\n\tinitialPosition,\n\tmin,\n\tmax,\n\tsetState,\n\t...props\n} ) {\n\tconst id = `inspector-range-control-${ instanceId }`;\n\tconst currentInputValue = currentInput === null ? value : currentInput;\n\tconst resetValue = () => {\n\t\tresetCurrentInput();\n\t\tonChange();\n\t};\n\tconst resetCurrentInput = () => {\n\t\tif ( currentInput !== null ) {\n\t\t\tsetState( {\n\t\t\t\tcurrentInput: null,\n\t\t\t} );\n\t\t}\n\t};\n\n\tconst onChangeValue = ( event ) => {\n\t\tconst newValue = event.target.value;\n\t\t// If the input value is invalid temporarily save it to the state,\n\t\t// without calling on change.\n\t\tif ( ! event.target.checkValidity() ) {\n\t\t\tsetState( {\n\t\t\t\tcurrentInput: newValue,\n\t\t\t} );\n\t\t\treturn;\n\t\t}\n\t\t// The input is valid, reset the local state property used to temporaly save the value,\n\t\t// and call onChange with the new value as a number.\n\t\tresetCurrentInput();\n\t\tonChange( ( newValue === '' ) ?\n\t\t\tundefined :\n\t\t\tparseFloat( newValue )\n\t\t);\n\t};\n\tconst initialSliderValue = isFinite( currentInputValue ) ?\n\t\tcurrentInputValue :\n\t\tinitialPosition || '';\n\n\treturn (\n\t\t<BaseControl\n\t\t\tlabel={ label }\n\t\t\tid={ id }\n\t\t\thelp={ help }\n\t\t\tclassName={ classnames( 'components-range-control', className ) }\n\t\t>\n\t\t\t{ beforeIcon && <Dashicon icon={ beforeIcon } /> }\n\t\t\t<input\n\t\t\t\tclassName=\"components-range-control__slider\"\n\t\t\t\tid={ id }\n\t\t\t\ttype=\"range\"\n\t\t\t\tvalue={ initialSliderValue }\n\t\t\t\tonChange={ onChangeValue }\n\t\t\t\taria-describedby={ !! help ? id + '__help' : undefined }\n\t\t\t\tmin={ min }\n\t\t\t\tmax={ max }\n\t\t\t\t{ ...props } />\n\t\t\t{ afterIcon && <Dashicon icon={ afterIcon } /> }\n\t\t\t<input\n\t\t\t\tclassName=\"components-range-control__number\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tonChange={ onChangeValue }\n\t\t\t\taria-label={ label }\n\t\t\t\tvalue={ currentInputValue }\n\t\t\t\tmin={ min }\n\t\t\t\tmax={ max }\n\t\t\t\tonBlur={ resetCurrentInput }\n\t\t\t\t{ ...props }\n\t\t\t/>\n\t\t\t{ allowReset &&\n\t\t\t\t<Button onClick={ resetValue } disabled={ value === undefined }>\n\t\t\t\t\t{ __( 'Reset' ) }\n\t\t\t\t</Button>\n\t\t\t}\n\t\t</BaseControl>\n\t);\n}\n\nexport default compose( [\n\twithInstanceId,\n\twithState( {\n\t\tcurrentInput: null,\n\t} ),\n] )( RangeControl );\n"]}