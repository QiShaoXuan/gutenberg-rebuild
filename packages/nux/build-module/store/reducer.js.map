{"version":3,"sources":["@wordpress/nux/src/store/reducer.js"],"names":["combineReducers","guides","state","action","type","tipIds","areTipsEnabled","dismissedTips","id","preferences"],"mappings":";;;;AAAA;;;AAGA,SAASA,eAAT,QAAgC,iBAAhC;AAEA;;;;;;;;;;AASA,OAAO,SAASC,MAAT,GAAsC;AAAA,MAArBC,KAAqB,uEAAb,EAAa;AAAA,MAATC,MAAS;;AAC5C,UAASA,MAAM,CAACC,IAAhB;AACC,SAAK,eAAL;AACC,0CACIF,KADJ,IAECC,MAAM,CAACE,MAFR;AAFF;;AAQA,SAAOH,KAAP;AACA;AAED;;;;;;;;;AAQA,OAAO,SAASI,cAAT,GAAgD;AAAA,MAAvBJ,KAAuB,uEAAf,IAAe;AAAA,MAATC,MAAS;;AACtD,UAASA,MAAM,CAACC,IAAhB;AACC,SAAK,cAAL;AACC,aAAO,KAAP;;AAED,SAAK,aAAL;AACC,aAAO,IAAP;AALF;;AAQA,SAAOF,KAAP;AACA;AAED;;;;;;;;;;AASA,OAAO,SAASK,aAAT,GAA6C;AAAA,MAArBL,KAAqB,uEAAb,EAAa;AAAA,MAATC,MAAS;;AACnD,UAASA,MAAM,CAACC,IAAhB;AACC,SAAK,aAAL;AACC,+BACIF,KADJ,sBAEGC,MAAM,CAACK,EAFV,EAEgB,IAFhB;;AAKD,SAAK,aAAL;AACC,aAAO,EAAP;AARF;;AAWA,SAAON,KAAP;AACA;AAED,IAAMO,WAAW,GAAGT,eAAe,CAAE;AAAEM,EAAAA,cAAc,EAAdA,cAAF;AAAkBC,EAAAA,aAAa,EAAbA;AAAlB,CAAF,CAAnC;AAEA,eAAeP,eAAe,CAAE;AAAEC,EAAAA,MAAM,EAANA,MAAF;AAAUQ,EAAAA,WAAW,EAAXA;AAAV,CAAF,CAA9B","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Reducer that tracks which tips are in a guide. Each guide is represented by\n * an array which contains the tip identifiers contained within that guide.\n *\n * @param {Array} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Array} Updated state.\n */\nexport function guides( state = [], action ) {\n\tswitch ( action.type ) {\n\t\tcase 'TRIGGER_GUIDE':\n\t\t\treturn [\n\t\t\t\t...state,\n\t\t\t\taction.tipIds,\n\t\t\t];\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer that tracks whether or not tips are globally enabled.\n *\n * @param {boolean} state Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {boolean} Updated state.\n */\nexport function areTipsEnabled( state = true, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'DISABLE_TIPS':\n\t\t\treturn false;\n\n\t\tcase 'ENABLE_TIPS':\n\t\t\treturn true;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer that tracks which tips have been dismissed. If the state object\n * contains a tip identifier, then that tip is dismissed.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function dismissedTips( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'DISMISS_TIP':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.id ]: true,\n\t\t\t};\n\n\t\tcase 'ENABLE_TIPS':\n\t\t\treturn {};\n\t}\n\n\treturn state;\n}\n\nconst preferences = combineReducers( { areTipsEnabled, dismissedTips } );\n\nexport default combineReducers( { guides, preferences } );\n"]}